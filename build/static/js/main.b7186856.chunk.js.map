{"version":3,"sources":["sdk/education/core/logger/log.worker.ts","containers/theme-container.tsx","components/custom-button/index.tsx","utils/custom-storage.ts","i18n/zh.ts","i18n/en.ts","i18n.ts","components/role-radio/index.tsx","components/icon/index.tsx","components/form-input/index.tsx","components/form-select/index.tsx","components/lang-select/index.tsx","hooks/index.ts","services/intl-error-helper.ts","sdk/education/core/utils/fetch.ts","utils/config.ts","sdk/education/core/services/log-upload.ts","utils/platform.ts","sdk/education/core/logger/db.ts","sdk/education/core/logger/index.ts","sdk/education/core/media-service/web/index.ts","sdk/education/core/media-service/utils.ts","utils/helper.ts","sdk/education/core/media-service/electron/index.ts","sdk/education/interfaces/index.ts","stores/app/device.ts","stores/app/ui.ts","sdk/education/core/rtm/index.ts","sdk/education/core/rtm/message-serializer.ts","sdk/education/core/rtm/constants.ts","sdk/education/core/media-service/index.ts","sdk/education/core/media-service/renderer/index.ts","sdk/education/user/edu-user-service.ts","sdk/education/room/edu-classroom-data-controller.ts","sdk/education/room/edu-classroom-manager.ts","sdk/education/core/utils/http-client.ts","sdk/education/core/services/edu-api.ts","sdk/education/core/services/interface.d.ts","sdk/education/manager/index.ts","utils/upload-manager.ts","stores/app/board.ts","components/netless-board/board-client.ts","utils/mutex.ts","stores/mixin/simple-interval.ts","sdk/education/core/services/board-api.ts","sdk/board/edu-board-service.ts","sdk/education/core/services/record-api.ts","sdk/record/edu-record-service.ts","services/room-api.ts","stores/app/room.ts","stores/app/recording.ts","stores/app/replay.ts","stores/app/breakout-room.ts","stores/app/media.ts","stores/app/index.ts","pages/home.tsx","components/media-player/index.tsx","pages/device-detect/video/index.tsx","components/volume/voice.tsx","pages/device-detect/audio/index.tsx","components/volume/speaker.tsx","pages/device-detect/speaker/index.tsx","pages/device-detect/test-report/index.tsx","pages/device-detect/index.tsx","components/nav/index.tsx","components/native-shared-window/index.tsx","components/autoplay-toast/index.tsx","components/loading/index.tsx","pages/classroom/index.tsx","components/toast/index.tsx","components/video-player/index.tsx","components/video-marquee/index.tsx","components/progress/progress.tsx","components/netless-board/loading.tsx","components/netless-board/upload/upload-btn.tsx","components/netless-board/tools.tsx","components/control-item/index.tsx","components/netless-board/scale-controller.tsx","components/netless-board/footer-menu.tsx","components/netless-board/folder-menu.tsx","components/netless-board/upload/upload-notice.tsx","components/netless-board/board.tsx","components/netless-board/index.tsx","components/screen-sharing/index.tsx","components/chat/message.tsx","components/chat/panel.tsx","components/student-list/index.tsx","components/room-board/index.tsx","pages/classroom/small-class.tsx","components/group-list/index.tsx","pages/breakout-class/components/teacher-chat-board.tsx","pages/breakout-class/components/student-chat-board.tsx","pages/breakout-class/components/assistant-chat-board.tsx","pages/breakout-class/components/breakout-chat-board.tsx","pages/breakout-class/breakout-class.tsx","components/chat/board.tsx","pages/classroom/one-to-one.tsx","pages/classroom/big-class.tsx","components/dialog/index.tsx","pages/replay/replay.tsx","pages/replay/index.tsx","pages/breakout-class/assistant-courses-page/index.tsx","pages/index.tsx","serviceWorker.js","index.tsx"],"names":["module","exports","Worker","THEME","createMuiTheme","typography","overrides","MuiRadio","root","padding","MuiSvgIcon","width","height","MuiFormControl","margin","MuiInput","underline","borderBottom","children","ThemeProvider","theme","CustomButton","props","Button","variant","className","color","onClick","name","GlobalStorage","storage","languageKey","this","window","sessionStorage","key","JSON","parse","getItem","_","val","setItem","stringify","removeItem","lang","save","read","navigator","language","channelMessages","isEmpty","count","messages","chatMessages","filter","it","message_type","reduce","collect","value","payload","json","content","concat","account","ms","src","length","zhCN","process","en","t","options","getLanguage","match","get","reason","replace","console","error","useStyles","makeStyles","radioGroup","display","flexDirection","justifyContent","alignItems","required","fontSize","lineHeight","position","top","RoleRadio","classes","RadioGroup","row","role","onChange","FormControlLabel","control","Radio","label","labelPlacement","type","requiredText","Typography","CustomIcon","data","icon","disable","iconClass","active","dataName","data-name","UAParser","getResult","formInput","FormInput","imeLock","useRef","updateValue","InputLabel","Label","Input","onCompositionStart","evt","current","onCompositionEnd","slice","inputProps","maxLength","target","FormSelect","items","Select","map","item","MenuItem","text","LangSelect","useAppStore","useContext","MobXProviderContext","store","useUIStore","uiStore","useRoomStore","roomStore","useBreakoutRoomStore","breakoutRoomStore","useBoardStore","boardStore","useDeviceStore","deviceStore","useReplayStore","replayStore","getIntlError","errorCode","res","locale","err","warn","_getIntlError","Fetch","input","init","a","Promise","resolve","reject","onResponse","response","EduLogger","info","ok","status","Error","statusText","then","catch","onError","rescueError","fetch","setTimeout","AgoraFetch","retryCount","message","code","msg","APP_ID","REACT_APP_AGORA_APP_TOKEN","AUTHORIZATION","btoa","AgoraFetchJson","url","method","token","outHeaders","opts","headers","Object","keys","forEach","k","body","resp","responseData","isErrorCode","api_error","logApi","appID","roomId","_userToken","fileExt","_roomId","timestamp","Date","getTime","appId","appVersion","deviceName","deviceVersion","platform","tag","params","REACT_APP_AGORA_APP_SDK_LOG_SECRET","signStr","sign","md5","REACT_APP_AGORA_APP_SDK_DOMAIN","bucketName","callbackBody","callbackContentType","accessKeyId","accessKeySecret","securityToken","ossKey","file","uploadToOss","ext","fetchStsToken","ossParams","ossClient","OSS","stsToken","bucket","secure","endpoint","put","callback","contentType","log","db","Dexie","version","stores","logs","EduLogLevel","flat","arr","elem","date","toTimeString","split","getMilliseconds","v","logLevel","args","None","prefix","currentTime","loggerArgs","pattern","call","apply","hasOwnProperty","thread","LogWorker","debugLog","e","indexOf","context","arguments","join","postMessage","proxy","doGzip","uploadZipLogFile","roomUuid","ids","push","uploadLog","toArray","logsStr","reverse","Array","isArray","File","now","uploadLogFile","delete","exists","open","Debug","originConsole","AgoraWebRtcWrapper","_client","_subClient","_screenClient","agoraWebSdk","deviceList","localUid","clientConfig","joined","cameraTrack","microphoneTrack","cameraTestTrack","microphoneTestTrack","localScreenUid","screenVideoTrack","screenAudioTrack","publishedTrackIds","intervalMap","subscribeAudioList","subscribeVideoList","unsubscribeAudioList","unsubscribeVideoList","videoMuted","audioMuted","publishedAudio","publishedVideo","channelName","webConfig","closeInterval","client","removeAllListeners","undefined","screenClient","releaseAllClient","clearAllInterval","closeMediaTrack","closeTestTrack","closeScreenTrack","eventArgs","eventName","emit","createClient","on","user","mediaType","uid","subscribe","audioTrack","isPlaying","play","fire","channel","curState","revState","isFallbackOrRecover","downlinkNetworkQuality","uplinkNetworkQuality","reset","option","registerClientByChannelName","debug","addInterval","stats","getRTCStats","RTT","childChannel","subChannel","leave","releaseChannel","stopScreenShare","track","stop","close","trackMediaType","asyncList","muteLocalVideo","muteRemoteVideo","all","muteLocalAudio","muteRemoteAudio","setEnabled","targetUid","findIndex","unsubVideoIdx","splice","subVideoIdx","unsubAudioIdx","subAudioIdx","updateAudioList","unsubscribe","targetUser","remoteUsers","find","unsubscribeVideo","unsubscribeAudio","createCameraVideoTrack","video","getTrackId","cameraId","deviceId","encoderConfig","publish","unpublishTrack","trackId","setDevice","checkVideoTrackIsActive","createMicrophoneAudioTrack","audio","microphoneId","config","setEncoderConfiguration","clearInterval","delay","setInterval","checkAudioTrackIsActive","index","createScreenVideoTrack","shareAudio","tracks","screenTracks","screen","idx","unpublish","getDevices","list","getMicrophones","getCameras","volume","localTracks","setVolume","totalVolume","getVolumeLevel","EventEmitter","wait","resolveFileInfo","fileName","encodeURI","fileType","substring","lastIndexOf","CustomBtoa","chr1","chr2","chr3","enc1","enc2","enc3","enc4","keyStr","output","i","Number","NaN","isNaN","charAt","EduClassroomStateType","EduStreamAction","EduChannelMessageCmdType","EduPeerMessageCmdType","EduRoleTypeEnum","EduRoleType","EduAudioSourceType","EduVideoSourceType","ConnectionState","NetworkQuality","ConnectionChangeReason","LogLevel","EduSceneType","EduClassroomType","EduRenderMode","EduCourseState","AgoraElectronRTCWrapper","logPath","videoSourceLogPath","subscribedList","cameraList","microphoneList","AgoraRtcEngine","ret","initialize","setChannelProfile","enableVideo","enableAudio","enableWebSdkInteroperability","enableAudioVolumeIndication","setVideoProfile","setClientRole","setLogFile","setNodeAddonLogPath","decibel","toFixed","setAudioPlaybackVolume","enableLocalVideo","muteLocalAudioStream","enableLocalAudio","muteRemoteVideoStream","muteRemoteAudioStream","speakers","speakerNumber","elapsed","state","joinChannel","leaveChannel","release","setVideoDevice","setVideoEncoderConfiguration","muteLocalVideoStream","getAudioRecordingDevices","genList","deviceid","devicename","kind","getVideoDevices","setAudioRecordingDevice","stopAudioRecordingDeviceTest","getScreenWindowsInfo","image","ownerName","windowId","startScreenPromise","profile","rect","x","y","param","bitrate","frameRate","videoSourceInitialize","videoSourceSetChannelProfile","videoSourceEnableWebSdkInteroperability","videoSourceSetVideoProfile","videoSourceSetLogFile","setNodeAddonVideoSourceLogPath","handleVideoSourceJoin","off","videoSourceStartScreenCaptureByWindow","startScreenCapturePreview","videoSourceJoin","joinInfo","race","stopScreenSharePromise","handleVideoSourceLeaveChannel","videoSourceLeave","openCamera","closeCamera","changeCamera","openMicrophone","startAudioRecordingDeviceTest","changeResolution","closeMicrophone","changeMicrophone","DeviceStore","appStore","_totalVolume","settingVisible","activeDeviceItem","cameraTestResult","microphoneTestResult","speakerTestResult","cameraLabel","microphoneLabel","_playbackVolume","mediaService","getPlaybackVolume","changePlaybackVolume","_cameraRenderer","_microphoneTrack","resolutionIdx","web","resetCameraTrack","resetMicrophoneTrack","runInAction","eduManager","sdkWrapper","_cameraId","openTestCamera","cameraTestRenderer","getTestCameraLabel","closeTestCamera","changeTestCamera","_microphoneId","openTestMicrophone","isWeb","getTestMicrophoneLabel","isElectron","closeTestMicrophone","changeTestMicrophone","resolution","changeTestResolution","getSpeakerLabel","resolutions","observable","action","computed","UIStore","toastQueue","autoplayToast","settingDialog","loading","uploading","boardLoading","converting","notice","dialog","dialogs","addDialog","id","ipc","send","_language","setLanguage","curSeqId","lastSeqId","roomTypes","path","languages","StepPhase","EduUserData","_user","_ts","_state","_streamUuid","_rtcToken","_screenRtcToken","_rtmToken","_streamsMap","updateUser","rtcToken","screenRtcToken","rtmToken","updateTime","streamUuid","setRtcToken","setScreenRtcToken","acc","userUuid","userName","userProperties","isChatAllowed","fromArray","EduStreamData","_stream","updateStream","uuid","hasAudio","hasVideo","stream","time","newData","ts","streamName","videoSourceType","audioSourceType","userInfo","videoState","audioState","MessageSerializer","fromUser","getFromUser","roomInfo","roomState","step","total","nextId","nextTs","isFinished","courseState","startTime","isStudentChatAllowed","onlineUsersCount","users","audience","broadcaster","eduStreams","rawOnlineUsers","muteChat","tmpStreams","rawOfflineUsers","onlineUsers","offlineUsers","onlineStreams","offlineStreams","attrs","logFilter","AgoraRTM","LOG_FILTER_OFF","LOG_FILTER_ERROR","LOG_FILTER_INFO","LOG_FILTER_WARNING","LOG_FILTER_DEBUG","ElectronFillMode","RTMWrapper","agoraRtm","logged","connectionState","prevConnectionState","channels","_streamList","_userList","_channels","releaseClient","releaseChannels","streamIndex","targetStream","eventClient","createInstance","enableLogUpload","newState","peerId","login","logout","createChannel","bus","memberId","messagePros","memberCount","sendMessage","enableHistoricalMessaging","sendMessageToPeer","result","hasPeerReceived","UserRenderer","_playing","local","sourceType","videoTrack","uuidv4","dom","fit","LocalUserRenderer","electron","setupLocalVideo","setupViewContentMode","setupLocalVideoSource","startPreview","isPreview","stopPreview","RemoteUserRenderer","PeerInviteEnum","MediaService","rtcProvider","cameraRenderer","screenRenderer","remoteUsersRenderer","screenShareIds","electronLogPath","agoraSdk","once","events","setAddonLogPath","enableLogPersist","mode","codec","quality","userIndex","userRenderer","remoteUserRender","AgoraRTC","onCameraChanged","onMicrophoneChanged","onAudioAutoplayFailed","includes","getTrackLabel","getCurrentVideoDevice","videoDevice","d","getCurrentAudioRecordingDevice","audioDevice","getPlaybackDeviceInfo","muteRemoteVideoByClient","muteRemoteAudioByClient","prepareScreenShare","startScreenShare","getAudioPlaybackVolume","DataEnumType","EduUserService","roomManager","apiService","localUser","localStreamData","localScreenShareStream","upsertBizStream","localUserUuid","screenStreamData","upsertLocalStream","deleteBizStream","removeLocalStream","sendChannelMessage","remoteUser","sendPeerMessage","userId","sendRoomChatMessage","sendUserChatMessage","record","updateRoomProperties","cause","updateCourseState","kickUser","enable","roles","allowStudentChatByRole","allowRemoteStudentChat","screenStream","mic","updateStreamUuid","stopShareScreen","remoteStartStudentCamera","remoteStopStudentCamera","remoteStartStudentMicrophone","remoteStopStudentMicrophone","remoteCloseStudentStream","prevAudioState","localStream","prevVideoState","curAudioState","curVideoState","updateBizStream","streamMap","teacher","cmd","studentApply","student","teacherAccept","teacherReject","inviteUserPublishStream","studentCancel","me","teacherStop","EduClassroomManager","_roomUuid","rawRoomUuid","_roomName","_apiService","_userService","_rtmObserver","roomName","rtmConnectionState","_dataBuffer","userRole","joinRoom","joinRoomData","_rtmWrapper","roomParams","prepareRoomJoin","rtmWrapper","createObserverChannel","observer","readMessage","sequence","obj","seqId","appendBuffer","asyncBatchUpdateData","setLocalData","syncFullSequence","BatchUpdateData","userToken","userList","streamList","roomProperties","roomStatus","classroom","teacherList","studentList","HttpClient","fetchResponse","AgoraEduApi","_prefix","_board_prefix","_record_prefix","authorization","localInfo","latestTime","lastUserListTime","lastStreamListTime","setApiPrefix","full_url","rawUrl","updateLastTime","qs","includeOffline","updateTimeOffset","streamId","streams","fetchUsersStreams","userItem","userAttrs","targetIndex","newStreams","combineLatestStreamIndexList","newStream","oldStreamIndex","newStreamIndex","lastTime","newLastTime","getUserList","getStreamList","requestId","entryRoom","entryRoomData","room","host","muteVideo","muteAudio","properties","respData","seq","EduRoomType","EnumBoardState","EnumChatState","EnumVideoState","EnumAudioState","EnumOnlineState","EduClassroomDataController","_roomAttrs","_localUser","_localUserUuid","_id","_curSeqId","_bufferMap","_latestSeqId","syncSequenceTimes","syncingData","syncTimer","_minSeqId","retryTimer","_cachedLocalStreams","_roomInfo","_roomProperties","_users","_streams","_roomStatus","_localUserData","_localStreams","Math","max","latestSeqId","full","syncFromCurrentSequenceId","clearTimeout","bufferMap","taskBuffer","buffer","syncData","setCurrentSeqId","setRoomInfo","setRoomStatus","setRoomProperties","setRawUsers","roomMediaState","userListChanged","getUsersStreams","updateUserList","updateStreamList","userStateUpdated","getChangedUser","updateUserState","streamListChanged","getAction","getStreams","operatorUser","getOperator","roomPropertiesStateChanged","changeProperties","roomChatState","textMessage","getEduTextMessage","userIds","isLocalUser","customMessage","times","syncSnapShot","results","syncSequence","abs","min","setLatestSeqId","updateStreamsMap","rawStreams","cachedUserIds","newItem","targetIdx","streamIsOffline","isLocalStreams","isScreenShare","isMainStream","mainStream","modifyStream","camera","removeTargetStream","newTargetItem","userIsOffline","removeStreams","updateState","targetItem","findUser","addUserList","removeUserList","addStreams","newTarget","update","upsertTargetStream","streamData","evtName","prevState","diff","roomData","setLocalUserUuid","setUserToken","mainStreamUuid","mainRtcToken","rawLocalStreams","rtcStreamInfo","main","upsertLocalUser","curStreamData","tmpStreamData","localUserData","rawUsers","localUuid","u","newUserValue","newUsers","offlineUserIds","setRemoteOnlineUsers","setRemoteOfflineUsers","updatedStreams","newStreamValue","offlineIds","setRemoteOnlineStreams","setRemoteOfflineStreams","EduManager","_classroomMap","_ended","_mediaService","_rtmConnectionState","buildOption","agoraRtc","customerId","customerCertificate","prepareLogin","peer","getEduCustomMessage","destroyRtm","classroomManager","enableUpload","PPTType","PPTProgressPhase","FollowState","UploadManager","ossUploadCallback","getFile","generateObjectUrl","addFile","rawFile","onProgress","multipartUpload","progress","p","Uploading","pptConverter","folder","pptURL","PPTKind","Static","convert","onProgressUpdated","Converting","documentFile","pptType","static","scenes","scenePath","MD5","putScenes","setScenePath","dynamic","imageInnerSize","windowSize","innerWidth","innerHeight","widthHeightProportion","imageFiles","newAcceptedFilePromises","fetchWhiteImageFileWith","newAcceptedFiles","uploadImageFilesArray","Image","reader","FileReader","readAsDataURL","onload","getImageSize","imageFile","coordinateX","coordinateY","tasks","convertToPointInWorld","insertImage","centerX","centerY","locked","task","handleUploadTask","isWritable","setMemberState","currentApplianceName","ApplianceNames","selector","fileUrl","completeImageUpload","BoardClient","identity","plugins","player","sceneIndex","disconnected","initPlugins","createPlugins","videoPlugin","audioPlugin","setPluginContext","WhiteWebSdk","deviceType","DeviceType","Surface","appIdentifier","loggerOptions","disableReportLog","reportLevelMask","printLevelMask","onPhaseChanged","phase","onRoomStateChanged","onDisconnectWithError","onKickedWithReason","onKeyDown","event","onKeyUp","onHandToolActive","onPPTLoadProgress","replayRoom","onLoadFirstFrame","onSliceChanged","onPlayerStateChanged","onStoppedWithError","onProgressTimeChanged","scheduleTime","setViewMode","ViewMode","Broadcaster","setGlobalState","follow","grantUsers","globalState","disconnect","ossConfig","pathName","exec","RegExp","$1","BoardStore","menuTitle","_boardClient","showFolder","activeScenePath","online","boardClient","boardService","getBoardInfo","boardId","boardToken","roomToken","disableDeviceInputs","disableCameraTransform","disableAutoResize","_grantPermission","Follow","lock","Freedom","hasPermission","setWritable","ready","addToast","Follower","zoomScale","scale","sceneState","updateSceneItems","updateBoardState","bindHtmlElement","addEventListener","moveCamera","refreshViewSize","destroy","itemName","activeFooterItem","changePage","totalPage","tool","showUpload","showColorPicker","handToolActive","newIndex","currentPath","setSceneIndex","rgb","r","g","b","strokeColor","memberState","r1","g1","b1","cancelFollow","startFollow","percent","convertingPhase","uploadingPhase","force","_idx","sceneType","currentPage","pptNextStep","pptPreviousStep","ppt","isMainScene","removeScenes","sceneMap","newSceneMap","omit","setFollow","roomType","setGrantUsers","setGrantPermission","entriesScenes","entireScenes","dirPath","sceneInfo","getNameByScenePath","rootPath","_dirPath","currentScenePath","_dirs","currentScene","sceneItems","updatePagination","convertPhase","uploadPhase","addNotice","title","uploadManager","updateUploadPhase","updateConvertPhase","convertFile","Dynamic","isHttps","toLowerCase","insertPlugin","originX","originY","attributes","pluginVideoUrl","isNavigationDisable","pluginAudioUrl","uploadFileArray","clientWidth","clientHeight","uploadImageFiles","notices","hasBoardPermission","permission","updateBoardUserState","grantPermission","revokePermission","Mutex","mutex","begin","unlock","fn","SimpleInterval","_intervalMap","delInterval","AgoraBoardApi","board_prefix","getBoardRoomInfo","boardRoom","updateBoardRoomState","EduBoardService","getCurrentBoardInfo","updateCurrentBoardUserState","updateCurrentBoardState","AgoraRecordApi","record_prefix","recordId","EduRecordService","queryRoomRecordBy","startRecording","stopRecording","RoomApi","createGroup","roomConfig","roleConfig","limit","SceneType1v1","SceneTypeSmallClass","SceneTypeBigClass","SceneTypeBreakoutClass","assistant","createRoom","queryRoom","memberLimit","networkQualities","RoomStore","_boardService","_recordService","autoplay","_hasCamera","_hasMicrophone","cameraLock","microphoneLock","_roomManager","roomApi","_unreadMessageCount","_screenVideoRenderer","mediaStore","recordService","screenVideoRenderer","screenEduStream","_screenEduStream","resetRoomState","resetTime","recording","resetScreenStream","customScreenShareWindowVisible","currentWindowId","customScreenShareItems","roomChatMessages","isMuted","_cameraEduStream","recordState","waitingShare","userService","startShareScreen","removeScreenShareWindow","sharing","lockCamera","getCameraLabel","unLockCamera","updateMainStreamState","unLockMicrophone","lockMicrophone","getMicrophoneLabel","stopWebSharing","startWebSharing","stopNativeSharing","showScreenShareWindowWithItems","addChatMessage","sender","menuVisible","tab","activeTab","resetRoomInfo","joiningRTC","cameras","microphones","promise","resultPromise","startLoading","fetchRoom","createClassroom","updateCurSeqId","updateLastSeqId","getFullUserList","dispatch","getLocalStreamData","prepareCamera","prepareMicrophone","cameraEduStream","getLocalScreenData","getFullStreamList","decodeMsg","str","fromUserUuid","fromUserName","showNotice","showDialog","isBigClassStudent","link","newClassState","classState","autoPublish","SceneLarge","getClassroomInfo","joinRTC","publishStream","stopLoading","renderer","showControls","canControl","teacherStream","teacherUuid","getUserBy","isLocalStream","isStudent","leaveRtc","EduCourseStateStart","EduCourseStateStop","muteStudentChatByRoles","unmuteStudentChatByRoles","isLocal","unpublishStream","teacherCloseStream","muteLocalMicrophone","getStreamBy","unmuteLocalMicrophone","muteLocalCamera","unmuteLocalCamera","isRecording","studentStop","removeDialogBy","sendCoVideoApply","closeStream","removeDialog","rejectCoVideoApply","acceptCoVideoApply","inviteStreamBy","RecordingStore","ReplayStore","endTime","playFailed","firstFrame","seekToProgressTime","$el","updatePhaseState","loadFirstFrame","setReplayFail","setCurrentTime","replay","beginTimestamp","duration","mediaURL","mediaUrl","PlayerPhase","WaitingFirstFrame","Pause","Playing","pause","Ended","recordStatus","getCourseRecordBy","recordList","sort","prev","cur","lastRecord","boardUuid","boardPreparing","removeEventListener","BreakoutRoomStore","handlePopState","bind","studentRoomUserList","teacherRoomUserList","studentRoomStreamList","teacherRoomStreamList","currentStudentRoomUuid","_roomChatMessages","_courseList","joinedGroup","largeClassroomManager","fromRoomUuid","fromRoomName","groupClassroomManager","switchTab","_delay","networkQuality","_cpuRate","history","pushState","document","hash","currentTarget","location","isClass","hasDialog","studentChannel","teacherChannel","mediaGroup","groups","fromRoomUUid","prevClassState","classroomInfo","courseList","handlePeerMessage","prepareLargeClassroom","prepareGroup","groupData","prepareStudentClassroom","studentRoomManager","prepareClassroom","groupManager","largeRoomManager","largeRoomMainStream","groupRoom","joinRtcAsStudent","joinRtcAsTeacher","studentRoomUuid","studentRoomName","assistantJoinLargeClassroom","groupUuid","groupName","joinGroupAsAssistant","courseName","leaveGroupAsAssistant","resetAssistantState","assistantJoinGroupClassroomByCourse","joinRtcAsAssistant","acquireRoomGroupBy","courseUuid","joinAsAssistant","joinAsTeacher","joinAsStudent","chat","studentCancelApply","networkQualityLevel","MediaStore","updateCpuRate","cpuTotalUsage","debounce","showAutoplayNotification","qualityStr","updateNetworkQuality","AppStore","recordingStore","load","autorun","toJS","logDirectoryPath","enableDebugLog","rate","cpuRate","preState","resetWebPrepareScreen","formControl","minWidth","maxWidth","defaultState","React","memo","useHistory","handleSetting","pathname","useState","setLock","handleUpload","session","setSessionInfo","setRequired","Tooltip","placement","reload","windowMinimum","windowClose","FormControl","alphabetical","RendererPlayer","ref","useEffect","fitMode","preview","VideoPage","labelId","cameraProp","style","textAlign","setCameraTestResult","setActiveItem","marginTop","sliderClass","marginLeft","sliderRailClass","sliderMarkClass","CustomSlider","totalVolumes","VoiceSlider","hideIcon","AudioPage","microphoneProp","setMicrophoneTestResult","ContinuousSlider","Slider","siderClassName","newValue","aria-labelledby","SpeakerPage","volumeLevel","setVolumeLevel","audioTestisPlaying","setAudioTestisPlaying","audioRef","useInterval","stopPlay","playbackVolume","audioVolume","setSpeakerTestResult","TestReportPage","useLocation","speakerLabel","hideSetting","DeviceMenu","testReportTitle","headerTitle","cameraTitle","microphoneTitle","speakerTitle","DeviceViews","DeviceDetect","DeviceDetectPage","DeviceDetectController","BreakoutStartClassButton","startClass","stopClass","BasicStartClassButton","StartClassButton","isBreakout","BreakoutUploadButton","BasicUploadButton","UploadButton","Nav","network","cpu","isCourses","networkQualityIcon","moment","format","windowMaximum","NavController","WindowItem","backgroundImage","WindowList","selectWindow","confirm","cancel","onDoubleClick","NativeSharedWindowController","setWindowId","startNativeScreenShareBy","NativeSharedWindowContainer","Alert","elevation","spacing","AutoplayToast","Snackbar","onClose","removeAutoplayNotification","container","left","background","opacity","zIndex","Loading","CircularProgress","LoadContainer","getIpc","RoomController","href","pathList","RoomPage","useMounted","mounted","useTimeout","timer","ToastMessage","closeToast","Toast","removeToast","VideoPlayer","showClose","share","handleClickVideo","handleClickAudio","handleClose","handleAudioClick","unmuteAudio","handleVideoClick","unmuteVideo","showScrollbar","$marquee","querySelector","marqueeLength","querySelectorAll","videoMarqueeMark","VideoMarquee","studentStreams","marqueeEl","scrollLeft","offset","childNodes","offsetWidth","scrollBar","setScrollBar","useLayoutEffect","studentStream","Progress","BoardLoading","loadingType","UploadBtn","ImageInput","DynamicInput","StaticInput","AudioVideoInput","uploadDynamic","setTool","files","uploadDynamicPPT","uploadStatic","uploadStaticFile","uploadImage","uploadAudioVideo","htmlFor","accept","ToolItem","Tools","ClickAwayListener","onClickAway","onChangeComplete","changeColor","ControlItem","ScaleController","tempRuleIndex","syncRuleIndexTimer","syncDuration","readRuleIndexByScale","delaySyncRuleIndex","zoomChange","deltaIndex","dividingRule","targetScale","ceil","moveRuleIndex","lockBoard","onClickBoardLock","prePoint","point","nextPoint","MIN_SAFE_INTEGER","end","MAX_SAFE_INTEGER","Component","freeze","FooterMenu","BreakoutClassSceneFooterMenu","BasicSceneFooterMenu","changeFooterMenu","handleRecording","startOrStopRecording","handleSharing","startOrStopSharing","marginRight","openFolder","toggleLockBoard","updateScale","FolderMenuItem","activeClass","onRemove","coverType","handleClick","defaultValue","FolderMenu","changeScenePath","closeFolder","NoticeMessage","UploadNotice","removeNotice","Board","boardRef","mountToDOM","useCallback","mount","unmount","NetlessBoard","ScreenSharing","BreakoutClassSceneScreenSharing","BasicSceneScreenSharing","screenShareStream","Message","nickname","to","RoomMessage","regexPattern","truncateBlank","ChatPanel","handleChange","muteControl","handleMute","canChat","showRoomName","scrollTop","scrollHeight","showText","useMemo","disabled","placeholder","disableUnderline","onKeyPress","IconWrapper","StudentList","Boolean","RoomBoardController","setValue","mutedChat","unmuteChat","checkUserPermission","revokeBoardPermission","grantBoardPermission","toggleMenu","unreadMessageCount","RoomBoard","SmallClass","GroupList","rooms","switchTabToRoom","TeacherChatBoard","sendToCurrentRoom","sendMessageToCurrentRoom","resetTab","currentStudentRoomName","StudentChatBoard","muteStudentAudio","unmuteStudentAudio","muteStudentVideo","unmuteStudentVideo","AssistantChatBoard","BreakoutRoomBoard","BackButton","leaveCourse","BreakoutClass","BreakoutRoomController","course_name","useParams","assistantJoinRoom","BreakoutClassroom","ChatBoard","messageCount","OneToOne","setChat","BigClass","handleHandClick","callApply","callEnded","mute","RoomDialog","onConfirm","dialogId","dialogMessage","handleConfirm","Dialog","disableBackdropClick","aria-describedby","DialogContent","DialogContentText","DialogContainer","teacherRejectApply","teacherAcceptApply","PlayerCover","Buffering","handlePlayerClick","ReplayController","URLSearchParams","search","replayRef","interval","onMouseDown","pauseCurrentTime","onMouseUp","seekToCurrentTime","updateProgress","onTouchStart","onTouchEnd","totalTime","objectFit","ReplayWrapper","ReplayPage","createStyles","table","AssistantCoursesPage","CoursesPage","loginAsAssistant","TableContainer","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","course","component","scope","createTime","defaultStore","exact","hostname","userAgentInfo","REACT_APP_AGORA_GTM_ID","TagManager","gtmId","ReactDOM","render","getElementById","serviceWorker","registration","unregister","device","el","createElement","appendChild","Eruda"],"mappings":"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","file":"static/js/main.b7186856.chunk.js","sourcesContent":["module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"16a262e77c7ab601b5ee.worker.js\");\n};","import React from 'react';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\nconst THEME = createMuiTheme({\n  typography: {\n   \"fontFamily\": '-apple-system, BlinkMacSystemFont, \\\\\"Segoe UI\\\\\", \\\\\"Roboto\\\\\", \\\\\"Oxygen\\\\\", \\\\\"Ubuntu\\\\\", \\\\\"Cantarell\\\\\", \\\\\"Fira Sans\\\\\", \\\\\"Droid Sans\\\\\", \\\\\"Helvetica Neue\\\\\", sans-serif',\n   \"fontSize\": 14,\n   \"fontWeightLight\": 300,\n   \"fontWeightRegular\": 400,\n   \"fontWeightMedium\": 500,\n  },\n\n  overrides: {\n    MuiRadio: {\n      root: {\n        padding: '4px'\n      }\n    },\n    MuiSvgIcon: {\n      root: {\n        width: '1rem',\n        height: '1rem',\n      }\n    },\n    MuiFormControl: {\n      root: {\n        margin: '0.3rem 0',\n      }\n    },\n    MuiInput: {\n      underline: {\n        '&:before': {\n          borderBottom: '1px solid #EAEAEA',\n        },\n        '&:hover:not($disabled):not($focused):not($error):before': {\n          borderBottom: `2px solid #EAEAEA`,\n        },\n        '&$focused': {\n          '&:after': {\n            borderBottom: '2px solid #44a2fc',\n          }\n        },\n      }\n    }\n  }\n});\n\nexport default function ({children}: any) {\n  return (\n    <ThemeProvider theme={THEME}>\n      {children}\n    </ThemeProvider>\n  )\n}","import React from 'react';\nimport { Button } from '@material-ui/core';\nexport const CustomButton = function (props: any) {\n  return (\n    <Button variant=\"contained\" className={props.className ? props.className : 'custom-button'} color=\"primary\" onClick={props.onClick}>\n      {props.name}\n    </Button>\n  )\n}","import { isEmpty } from \"lodash\";\n\nexport class CustomStorage {\n\n  private storage: Storage;\n\n  languageKey: string = 'demo_language'\n\n  constructor() {\n    this.storage = window.sessionStorage;\n  }\n\n  read(key: string): any {\n    try {\n      let json = JSON.parse(this.storage.getItem(key) as string);\n      return json\n    } catch(_) {\n      return this.storage.getItem(key);\n    }\n  }\n\n  save(key: string, val: any) {\n    this.storage.setItem(key, JSON.stringify(val));\n  }\n\n  clear(key: string) {\n    this.storage.removeItem(key);\n  }\n\n  setLanguage(lang: string) {\n    this.save(this.languageKey, lang)\n  }\n\n  getLanguage() {\n    const language = this.read(this.languageKey) ? this.read(this.languageKey) : navigator.language;\n    return language;\n  }\n\n  getRtmMessage (): {count: any, messages: any[]} {\n    const channelMessages = GlobalStorage.read('channelMessages');\n    if (isEmpty(channelMessages)) return {\n      count: 0,\n      messages: []\n    }\n    const messages = channelMessages.filter((it: any) => it.message_type === \"group_message\");\n    const chatMessages = messages.reduce((collect: any[], value: any) => {\n      const payload = value.payload;\n      const json = JSON.parse(payload);\n      if (json.content) {\n        return collect.concat({\n          account: json.account,\n          content: json.content,\n          ms: value.ms,\n          src: value.src\n        });\n      }\n      return collect;\n    }, []);\n    return {\n      messages: chatMessages,\n      count: chatMessages.length\n    }\n  }\n}\n\nexport const GlobalStorage = new CustomStorage();\n// @ts-ignore\nwindow.GlobalStorage = GlobalStorage;\n","const BUILD_VERSION = process.env.REACT_APP_BUILD_VERSION as string;\nconst build_version = BUILD_VERSION ? BUILD_VERSION : '0.0.1';\n\nconst zhCN: any = {\n  \"unknown\": \"[未知]: \",\n  \"from_room\": \"[教室]: \",\n  \"student_role\": \"[学生]: \",\n  \"teacher_role\": \"[老师]: \",\n  \"assistant_role\": \"[助教]: \",\n  \"upload_log_failed\": \"上传日志失败\",\n  \"create_screen_share_failed\": \"创建屏幕共享失败\",\n  \"screen_share_permission\": \"缺少屏幕共享权限\",\n  \"electron\": {\n    \"start_screen_share_failed\": \"native screen sharing failed\"\n  },\n  \"icon\": {\n    \"setting\": \"设置\",\n    \"upload-log\": \"上传日志\",\n    \"exit-room\": \"退出教室\",\n    \"lang-select\": \"语言切换\",\n    \"requests_to_connect_the_microphone\": '申请连接麦克风',\n  },\n  'doc_center': '文档中心',\n  'upload_picture': '上传图片',\n  'convert_webpage': '转换动态PPT',\n  'convert_to_picture': 'PPT转图片',\n  'upload_audio_video': '上传音视频',\n  'return': {\n    'home': '返回主页',\n  },\n  'control_items': {\n    \"first_page\": \"第一页\",\n    \"prev_page\": \"上一页\",\n    \"next_page\": \"下一页\",\n    \"last_page\": \"最后一页\",\n    \"stop_recording\": \"停止云端录制\",\n    \"recording\": \"开始云端录制\",\n    \"quit_screen_sharing\": \"停止屏幕分享\",\n    \"screen_sharing\": \"开始屏幕分享\",\n    \"delete_current\": \"删除当前\",\n    \"delete_all\": \"删除全部\",\n  },\n  'zoom_control': {\n    'folder': '文档中心',\n    'lock_board': '设置白板跟随',\n    'unlock_board': '取消白板跟随'\n  },\n  'tool': {\n    'selector': '鼠标选择器',\n    'pencil': '画笔',\n    'rectangle': '矩形',\n    'ellipse': '椭圆',\n    'eraser': '橡皮擦',\n    'text': '文字',\n    'color_picker': '调色板',\n    'add': '新增一页',\n    'upload': '上传',\n    'hand_tool': '手抓工具'\n  },\n  'error': {\n    'not_found': '页面找不到',\n    'components': {\n      'paramsEmpty': '参数：{reason}不能为空',\n    }\n  },\n  'whiteboard': {\n    'loading': '加载中...',\n    'converting': '转换中...',\n    'global_state_limit': '请不要给白板设置过大的globalState size',\n    'locked_board': '老师正在控制白板，请勿书写',\n    'unlocked_board': '白板已解除锁定。',\n  },\n  'toast': {\n    'upload_log_failure': '上传日志失败，错误类型：{reason}, 详情参考开发者工具',\n    'show_log_id': `请提供你的日志ID: {no}`,\n    'api_login_failured': '房间加入失败, 原因: {reason}',\n    'confirm': '确定',\n    'cancel': '取消',\n    'quit_room': '确定退出课程吗？',\n    'kick': '其他端登录，被踢出房间',\n    'login_failure': '登录房间失败',\n    'whiteboard_lock': '设置白板跟随',\n    'whiteboard_unlock': '取消白板跟随',\n    'canceled_screen_share': '已取消屏幕共享',\n    'screen_sharing_failed': '屏幕分享失败, 原因：{reason}',\n    'recording_failed': '开启云录制失败, 原因：{reason}',\n    'start_recording': '开始云录制',\n    'stop_recording': '结束云录制',\n    'recording_too_short': '录制太短，至少15秒',\n    'rtm_login_failed': '房间登录失败, 请检查网络设置',\n    'rtm_login_failed_reason': '房间登录失败, 原因： {reason}',\n    'replay_failed': '回放失败，请刷新页面重试',\n    'teacher_exists': '该房间老师已存在，请等待30秒或重新创建教室',\n    'student_over_limit': '超出学生最大人数，请等待30秒或重新创建教室',\n    'teacher_and_student_over_limit': '超出学生和老师的最大人数',\n    'teacher_accept_whiteboard': '老师已授权了你白板的权限',\n    'teacher_cancel_whiteboard': '老师已收回了你白板的权限',\n    'teacher_accept_co_video': '老师已允许连麦',\n    'teacher_reject_co_video': '老师已拒绝连麦',\n    'teacher_cancel_co_video': '老师已取消连麦',\n    'student_cancel_co_video': '学生已取消连麦',\n    'student_send_co_video_apply': '\"{reason}\" 学生发起了连麦申请',\n    'student_peer_leave': '\"{reason}\" 离开了',\n    'stop_co_video': '教师停止了\"{reason}\"的连麦',\n    'reject_co_video': '您取消了学生的连麦申请',\n    'close_co_video': '您关闭了学生的连麦',\n    'close_youself_co_video': '你关闭了自己的连麦',\n    'accept_co_video': '您同意了连麦',\n    'successfully_joined_the_room': '加入房间成功',\n    'failed_to_join_the_room': '加入房间失败',\n    'failed_to_authorize_whiteboard': '授权白板失败',\n    'failed_to_deauthorize_whiteboard': '取消授权白板失败',\n    'failed_to_query_playback_list': '查询回放列表失败',\n    'audio_equipment_has_changed': '音频设备发生了变化',\n    'video_equipment_has_changed': '视频设备发生了变化',\n    'failed_to_initiate_screen_sharing': '发起屏幕共享失败',\n    'failed_to_end_screen_sharing': '结束屏幕共享失败',\n    'failed_to_initiate_screen_sharing_to_remote': '向远端发起屏幕共享失败',\n    'failed_to_enable_screen_sharing': '开启屏幕共享失败',\n    'failed_to_enable_screen_sharing_permission_denied': '开启屏幕共享失败！请先授权屏幕共享权限！',\n    'failed_to_send_chat': '发送聊天失败',\n    'failed_to_join_rtc_please_refresh_and_try_again': '加入rtc失败，请刷新重试',\n    'leave_rtc_channel': '离开rtc频道',\n    'failed_to_leave_rtc': '离开rtc失败',\n    'co_video_close_success': '下麦成功',\n    'co_video_close_failed': '下麦失败',\n    'publish_rtc_success': '发布RTC成功',\n    'open_whiteboard_follow': '打开白板跟随',\n    'close_whiteboard_follow': '关闭白板跟随',\n    'i': '我',\n    'teacher': '老师',\n    'the_teacher_authorized_your_whiteboard': '老师授权了你的白板',\n    'the_teacher_cancelled_your_whiteboard_permission': '老师取消了你的白板权限',\n    'publish_business_flow_successfully': '发布业务流成功',\n    'media_method_call_failed': '媒体方法调用失败',\n    'successfully_left_the_business_channel': '离开业务频道成功',\n    'course_started_successfully': '课程开始成功',\n    'setting_start_failed': '设置开始失败',\n    'the_course_ends_successfully': '课程结束成功',\n    'setting_ended_failed': '设置结束失败',\n    'start_recording_successfully': '开始录制成功',\n    'start_recording_failed': '开始录制失败',\n    'successfully_ended_recording': '结束录制成功',\n    'failed_to_end_recording': '结束录制失败',\n    'you_have_a_default_message': '你有一条默认消息',\n    'the_teacher_agreed': '老师同意了',\n    'student_applied': '学生申请了',\n    'you_were_dismissed_by_the_teacher': '你被老师下麦了',\n    'student_canceled': '学生取消了',\n    'the_teacher_refused': '老师拒绝了',\n    'failed_to_initiate_a_raise_of_hand_application': '发起举手申请失败',\n    'failed_to_end_the_call': '结束通话失败',\n  },\n  'notice': {\n    'student_interactive_apply': `\"{reason}\"想和你连麦`\n  },\n  'chat': {\n    'placeholder': '说点什么',\n    'banned': '禁言中',\n    'send': '发送'\n  },\n  'device': {\n    'camera': '摄像头',\n    'microphone': '麦克风',\n    'speaker': '扬声器',\n    'finish': '完成',\n    'detect': '检测',\n    'test_again': '再测一次',\n    'close': '关闭',\n    'test_report': '检测报告',\n    'is_look': '是否可以看到画面？',\n    'no': '否',\n    'yes': '是',\n    'is_hear': '音乐播放中，您是否可以听到音乐？',\n    'click_play': '点击播放后开始检测扬声器',\n    'test_microphone': '对麦克风说些什么，检测麦克风是否正常',\n  },\n  'nav': {\n    'delay': '延迟: ',\n    'network': '网络: ',\n    'cpu': 'CPU: ',\n    'class_end': '课程结束',\n    'class_start': '课程开始',\n    'back': '返回',\n  },\n  'home': {\n    'entry-home': '进入教室',\n    'teacher': '老师',\n    'student': '学生',\n    'assistant': '助教',\n    'cover_class': 'cover-cn',\n    'room_name': '房间名',\n    'nickname': '昵称',\n    'room_type': '房间类型',\n    'room_join': '加入房间',\n    'short_title': {\n      'title': '声网云课堂',\n      'subtitle': '由声网提供',\n    },\n    'name_too_long': '名字过长，不得超过20个字符',\n    '1v1': '一对一',\n    'mini_class': '小班课',\n    'large_class': '大班课', \n    'missing_room_name': '缺少房间名',\n    'missing_your_name': '缺少昵称',\n    'missing_password': '缺少房间密码',\n    'missing_role': '\b缺少角色',\n    'account': '姓名',\n    'password': '密码',\n  },\n  'room': {\n    'show': '显示',\n    'course_list': '教室列表',\n    'chat_room': '消息列表',\n    'student_list': '学生列表',\n    'uploading': '上传中...',\n    'converting': '转换中...',\n    'upload_success': '上传成功',\n    'upload_failure': '上传失败，请检查网络',\n    'convert_success': '转换成功',\n    'convert_failure': '转换失败，请检查网络',\n  },\n  'replay': {\n    'loading': '加载中...',\n    'recording': '在录制中',\n    'finished': '录制完成',\n    'finished_recording_to_be_download': '服务端准备下载中',\n    'finished_download_to_be_convert': '服务端准备转换中',\n    'finished_convert_to_be_upload': '服务端准备保存中',\n  },\n  'assistant': {\n    'className': '班级名',\n    'creatTime': '创建时间',\n    'operation': '操作',\n    'classList': '班级列表',\n    'enterClassRoom': '进入班级',\n    'data_null_text': '当前没有正在上课的班级，您可以刷新或者退出界面',\n    'refresh': '刷新',\n    'exit': '退出',\n  },\n  'course_recording': '录制回放',\n  'build_version': `构建版本: ${build_version}`,\n}\n\nexport default zhCN;","const BUILD_VERSION = process.env.REACT_APP_BUILD_VERSION as string;\nconst build_version = BUILD_VERSION ? BUILD_VERSION : '0.0.1';\n\nconst en = {\n  \"unknown\": \"[unknown]: \",\n  \"from_room\": \"[Room]: \",\n  \"student_role\": \"[Student]: \",\n  \"teacher_role\": \"[Teacher]: \",\n  \"assistant_role\": \"[Tas]: \",\n  \"upload_log_failed\": \"Upload Log failed\",\n  'create_screen_share_failed': 'Create Screen Share failed',\n  \"screen_share_permission\": \"Need Electron Screen Capture Permission\",\n  \"electron\": {\n    \"start_screen_share_failed\": \"native screen sharing failed\"\n  },\n  \"icon\": {\n    \"setting\": \"Setting\",\n    \"upload-log\": \"Upload Log\",\n    \"exit-room\": \"Exit Room\",\n    \"lang-select\": \"Switch Language\",\n    \"requests_to_connect_the_microphone\": \"Requests To Connect The Microphone\"\n  },\n  'doc_center': 'Course Document Center',\n  'upload_picture': 'Upload Picture',\n  'convert_webpage': 'Dynamic PPT',\n  'convert_to_picture': 'Static PPT',\n  'upload_audio_video': 'Upload Audio/Video',\n  'return': {\n    'home': 'Back To Home',\n  },\n  'control_items': {\n    \"first_page\": \"First Page\",\n    \"prev_page\": \"Prev Page\",\n    \"next_page\": \"Next Page\",\n    \"last_page\": \"Last Page\",\n    \"stop_recording\": \"Stop Cloud Recording\",\n    \"recording\": \"Start Cloud Recording\",\n    \"quit_screen_sharing\": \"Stop Screen Sharing\",\n    \"screen_sharing\": \"Start Screen Sharing\",\n    \"delete_current\": \"Remove Current\",\n    \"delete_all\": \"Remove All\",\n  },\n  'zoom_control': {\n    'folder': 'Document Center',\n    'lock_board': 'Set Whiteboard Follow',\n    'unlock_board': 'Reset Whiteboard Follow'\n  },\n  'tool': {\n    'selector': 'mouse selector',\n    'pencil': 'penceil',\n    'rectangle': 'rectangle',\n    'ellipse': 'ellipse',\n    'eraser': 'eraser',\n    'text': 'text',\n    'color_picker': 'color picker',\n    'add': 'add new page',\n    'upload': 'upload ',\n    'hand_tool': 'hand selector'\n  },\n  'error': {\n    'not_found': 'Page Not Found',\n    'components': {\n      'paramsEmpty': 'params：{reason} can`t be empty',\n    }\n  },\n  'whiteboard': {\n    'loading': 'Loading...',\n    'converting': 'Converting...',\n    'global_state_limit': 'globalState size limit size probably overflow',\n    'locked_board': 'The teacher is moving the whiteboard. Please do not draw on it.',\n    'unlocked_board': 'The whiteboard already unlocked',\n  },\n  'toast': {\n    'upload_log_failure': 'Upload Log Failure，ErrorName: {reason}，see more details in devtool',\n    'show_log_id': `Report your log ID: {reason}`,\n    'api_login_failured': 'Join Failured, Reason: {reason}',\n    'confirm': 'Confirm',\n    'cancel': 'Cancel',\n    'quit_room': 'Are you sure to exit the classroom?',\n    'kick': 'kicked',\n    'login_failure': 'login failure',\n    'whiteboard_lock': 'Whiteboard follow',\n    'whiteboard_unlock': 'Whiteboard nofollow',\n    'canceled_screen_share': 'Canceled screen sharing',\n    'screen_sharing_failed': 'Screen sharing failed, reason: {reason}',\n    'recording_failed': 'Start cloud recording failed, reason: {reason}',\n    'start_recording': 'Start cloud recording success',\n    'stop_recording': 'Stop cloud recording success',\n    'recording_too_short': 'Recording too short, at least 15 seconds',\n    'rtm_login_failed': 'login failure, please check your network',\n    'rtm_login_failed_reason': 'login failure, reason: {reason}',\n    'replay_failed': 'Replay Failed please refresh browser',\n    'teacher_exists': 'Teacher already exists, Please waiting for 30s or reopen new class',\n    'student_over_limit': 'Student have reached upper limit, , Please waiting for 30s or rejoin new class',\n    'teacher_and_student_over_limit': 'The number of students and teacher have reached upper limit',\n    'teacher_accept_whiteboard': 'Teacher already grant your whiteboard',\n    'teacher_cancel_whiteboard': 'Teacher already cancel your whiteboard',\n    'teacher_accept_co_video': 'Teacher already accept co-video',\n    'teacher_reject_co_video': 'Teacher already rejected co-video',\n    'teacher_cancel_co_video': 'Teacher already canceled co-video',\n    'student_cancel_co_video': 'Student canceled co-video',\n    'student_peer_leave': '\"{reason}\" Left',\n    'student_send_co_video_apply': '\"{reason}\" send the co-video request',\n    'stop_co_video': 'Stop \"{reason}\" co-video',\n    'reject_co_video': 'Reject co-video',\n    'close_co_video': 'Close co-video',\n    'close_youself_co_video': 'Stop co-video',\n    'accept_co_video': 'Accept co-video',\n    'successfully_joined_the_room': 'Successfully joined the room',\n    'failed_to_join_the_room': 'Failed to join the room',\n    'failed_to_authorize_whiteboard': 'Failed to authorize whiteboard',\n    'failed_to_deauthorize_whiteboard': 'Failed to deauthorize whiteboard',\n    'failed_to_query_playback_list': 'Failed to query playback list',\n    'audio_equipment_has_changed': 'Audio equipment has changed',\n    'video_equipment_has_changed': 'Video equipment has changed',\n    'failed_to_initiate_screen_sharing': 'Failed to initiate screen sharing',\n    'failed_to_end_screen_sharing': 'Failed to end screen sharing',\n    'failed_to_initiate_screen_sharing_to_remote': 'Failed to initiate screen sharing to remote',\n    'failed_to_enable_screen_sharing': 'Failed to enable screen sharing',\n    'failed_to_enable_screen_sharing_permission_denied': 'Open screen capture failed！Please grant permission for screen capture!',\n    'failed_to_send_chat': 'Failed to send chat',\n    'failed_to_join_rtc_please_refresh_and_try_again': 'Failed to join rtc, please refresh and try again',\n    'leave_rtc_channel': 'Leave rtc channel',\n    'failed_to_leave_rtc': 'Failed to leave rtc',\n    'co_video_close_success': 'CoVideo dismissed success',\n    'co_video_close_failed': 'CoVideo dismissed failure',\n    'publish_rtc_success': 'Publish RTC Success',\n    'open_whiteboard_follow': 'open whiteboard follow',\n    'close_whiteboard_follow': 'close whiteboard follow',\n    'i': 'I',\n    'teacher': 'Teacher',\n    'the_teacher_authorized_your_whiteboard': 'The teacher authorized your whiteboard',\n    'the_teacher_cancelled_your_whiteboard_permission': 'The teacher cancelled your whiteboard permission',\n    'publish_business_flow_successfully': 'Publish business flow successfully',\n    'media_method_call_failed': 'Media method call failed',\n    'successfully_left_the_business_channel': 'Successfully left the business channel',\n    'course_started_successfully': 'Course start successfully',\n    'setting_start_failed': 'Setting start failed',\n    'the_course_ends_successfully': 'Course end successfully',\n    'setting_ended_failed': 'Setting ended failed',\n    'start_recording_successfully': 'Start recording successfully',\n    'start_recording_failed': 'Start recording failed',\n    'successfully_ended_recording': 'Successfully_ended_recording',\n    'failed_to_end_recording': 'Failed to end recording',\n    'you_have_a_default_message': 'You have a default message',\n    'the_teacher_agreed': 'Teacher Agreed',\n    'student_applied': 'Student applied',\n    'you_were_dismissed_by_the_teacher': 'You were dismissed by the teacher',\n    'student_canceled': 'Student canceled',\n    'the_teacher_refused': 'Teacher refused',\n    'failed_to_initiate_a_raise_of_hand_application': 'Failed to initiate a raise of hand application',\n    'failed_to_end_the_call': 'Failed to end the call',\n  },\n  'notice': {\n    'student_interactive_apply': `\"{reason}\" wants to interact with you`\n  },\n  'chat': {\n    'placeholder': 'Input Message',\n    'banned': 'Banned',\n    'send': 'send'\n  },\n  'device': {\n    'camera': 'Camera',\n    'microphone': 'Microphone',\n    'speaker': 'Speaker',\n    'finish': 'Finish',\n    'detect': 'Detect',\n    'test_again': 'Test again',\n    'close': 'Close',\n    'test_report': 'Test report',\n    'is_look': 'Can you see the screen?',\n    'no': 'No',\n    'yes': 'Yes',\n    'is_hear': 'Can you hear the music while the music is playing?',\n    'click_play': 'Start to detect speakers after clicking play',\n    'test_microphone': 'What to say to the microphone, check if the microphone is normal'\n    \n  },\n  'nav': {\n    'delay': 'Delay: ',\n    'network': 'Network: ',\n    'cpu': 'CPU: ',\n    'class_end': 'Class end',\n    'class_start': 'Class start',\n    'back': 'Back',\n  },\n  'home': {\n    'entry-home': 'Join Classroom',\n    'teacher': 'teacher',\n    'student': 'student',\n    'assistant': 'tas',\n    'cover_class': 'cover-en',\n    'room_name': 'Room Name',\n    'nickname': 'Your Name',\n    'room_type': 'Room Type',\n    'room_join': 'Join',\n    'short_title': {\n      'title': 'Virtual Education Solution',\n      'subtitle': '',\n    },\n    'name_too_long': 'name too long, should <= 20 characters',\n    '1v1': 'One to One Classroom',\n    'mini_class': 'Small Classroom',\n    'large_class': 'Lecture Hall',\n   \n    'missing_room_name': 'missing room name',\n    'missing_your_name': 'missing your name',\n    'missing_password': 'missing password',\n    'missing_role': 'missing role',\n    'account': 'Name',\n    'password': 'Password',\n  },\n  'room': {\n    'show': 'Show',\n    'course_list': 'Room List',\n    'chat_room': 'Chat Room',\n    'student_list': 'Student List',\n    'uploading': 'Uploading...',\n    'converting': 'Converting...',\n    'upload_success': 'upload success',\n    'upload_failure': 'upload failure, check the network',\n    'convert_success': 'convert success',\n    'convert_failure': 'convert failure, check the network',\n  },\n  'replay': {\n    'loading': 'loading...',\n    'recording': 'In Recording',\n    'finished': 'Finished',\n    'finished_recording_to_be_download': 'Server prepare downloading',\n    'finished_download_to_be_convert': 'Server prepare converting',\n    'finished_convert_to_be_upload': 'Server prepare saving',\n  },\n  'assistant': {\n    'className': 'className',\n    'creatTime': 'creatTime',\n    'operation': 'operation',\n    'classList': 'classList',\n    'enterClassRoom': 'enterClassRoom',\n    'data_null_text': 'There is no class currently in session, you can refresh or exit the interface',\n    'refresh': 'refresh',\n    'exit': 'exit',\n  },\n  'course_recording': 'course recording',\n  // 'build_version': `build version: ${build_version}`,\n  'build_version': `Version 1.0`,\n}\n\nexport default en;","import { GlobalStorage } from './utils/custom-storage';\nimport {get, isEmpty} from 'lodash';\nimport zhCN from './i18n/zh';\nimport en from './i18n/en';\n\nexport const BUILD_VERSION = process.env.REACT_APP_BUILD_VERSION as string;\n\nexport const t = (name: string, options?: any): string => {\n  const lang = GlobalStorage.getLanguage().match(/zh/) ? zhCN : en;\n  let content = get(lang, name, null);\n  if (!content) {\n    console.error(`${lang}: ${name} has no match`);\n    return `${lang}.${name}`;\n  }\n\n  if (!isEmpty(options)) {\n    if (options.reason && content.match(/\\{.+\\}/)) {\n      content = content.replace(/\\{.+\\}/, options.reason);\n    }\n  }\n\n  return content;\n}","import React from 'react';\nimport { Theme, RadioGroup, Radio, FormControlLabel, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport './role-radio.scss';\nimport { t } from '../../i18n';\n\nconst useStyles = makeStyles ((theme: Theme) => ({\n  radioGroup: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  required: {\n    fontSize: '12px',\n    color: '#ff0000',\n    lineHeight: '17px',\n    position: 'absolute',\n    top: '23px',\n  }\n}));\n\nexport const RoleRadio: React.FC<any> = (props) => {\n  const classes = useStyles();\n  return (\n    <RadioGroup className={classes.radioGroup} row value={props.role} onChange={props.onChange}>\n      <FormControlLabel\n        className={\"custom-radio align-left\"}\n        value=\"teacher\"\n        control={<Radio className={\"custom-radio\"} color=\"primary\" />}\n        label={t(\"home.teacher\")}\n        labelPlacement=\"end\"\n      />\n      {\n        props.type === 3 ?\n        <FormControlLabel\n        className={\"custom-radio align-middle\"}\n        value=\"assistant\"\n        control={<Radio className={\"custom-radio\"} color=\"primary\" />}\n        label={t(\"home.assistant\")}\n        labelPlacement=\"end\"\n      /> : null\n      }\n      <FormControlLabel\n        className={\"custom-radio align-right\"}\n        value=\"student\"\n        control={<Radio className={\"custom-radio\"} color=\"primary\" />}\n        label={t(\"home.student\")}\n        labelPlacement=\"end\"\n      />\n      {props.requiredText ? <Typography className={classes.required}>{props.requiredText}</Typography> : null}\n    </RadioGroup>\n  )\n}","import React from 'react';\n\nexport const CustomIcon =  function ({data, icon, disable, className, onClick, active}: any) {\n  let iconClass = disable ? '' : (icon ? 'icon-btn' : 'icon');\n  iconClass = active ? iconClass + \" active\" : iconClass;\n\n  const dataName = data ? data : ''\n  return (\n    <div className={`${iconClass} ${className}`} onClick={onClick} data-name={dataName}></div>\n  )\n}","import React, { useRef , useState} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport { Theme, Typography, InputLabel, Input } from '@material-ui/core';\nimport { UAParser } from \"ua-parser-js\"\nimport { isElectron } from '@/utils/platform';\n\nconst parser = new UAParser()\n\nconst userAgentInfo = parser.getResult()\n\nconst useStyles = makeStyles ((theme: Theme) => ({\n  formInput: {\n    'ime-mode': 'disabled',\n    '&:after': {\n      borderBottom: '1px solid #44a2fc'\n    }\n  },\n  required: {\n    fontSize: '12px',\n    color: '#ff0000',\n    lineHeight: '17px',\n    position: 'absolute',\n    top: '48px'\n  }\n}));\n\nconst ALPHABETICAL = /^[a-zA-Z0-9]*/\nconst LIMIT_LENGTH = 20\nexport const FormInput = (props: any) => {\n  const classes = useStyles();\n\n  const imeLock = useRef<boolean>(false)\n  \n  const onCompositionStart = (evt: any) => {\n    imeLock.current = true\n  }\n\n  const updateValue = (value: string) => {\n    props.onChange(value)\n  }\n\n  const onCompositionEnd = (evt: any) => {\n    imeLock.current = false\n    updateValue(props.value.replace(/[^0-9a-zA-Z$]/g, '').slice(0, LIMIT_LENGTH))\n  }\n\n  const onChange = (evt: any) => {\n    const val = evt.target.value.replace(/[^0-9a-zA-Z$]/g, '').slice(0, LIMIT_LENGTH)\n    if (imeLock.current) {\n    } else {\n      evt.target.value = val\n      updateValue(evt.target.value)\n    }\n    imeLock.current = false\n  }\n  return (\n    <>\n      <InputLabel>{props.Label}</InputLabel>\n      <Input className={classes.formInput} value={props.value}\n        onCompositionStart={onCompositionStart}\n        onCompositionEnd={onCompositionEnd}\n        inputProps={{\n          maxLength: 20\n        }}\n        onChange={onChange}>\n      </Input>\n      {props.requiredText ? <Typography className={classes.required}>{props.requiredText}</Typography> : null}\n    </>\n  );\n}","import React from 'react';\nimport { Select, InputLabel, MenuItem } from '@material-ui/core';\n// import { t } from '../i18n';\n\nexport interface FormSelectItems {\n  text: string\n}\n\nexport interface FormSelect {\n  items: FormSelectItems[]\n  Label: string\n  value: any\n  onChange: (evt: any) => any\n}\n\nexport const FormSelect: React.FC<FormSelect> = ({\n  Label,\n  value,\n  onChange,\n  items\n}) => {\n  return (\n    <>\n      <InputLabel>{Label}</InputLabel>\n      <Select\n        value={value}\n        onChange={onChange}\n      >\n        {items.map((item: any, key: number) => \n          <MenuItem key={key} value={key}>{item.text}</MenuItem>\n        )}\n      </Select>\n    </>\n  );\n}","import React from 'react';\nimport { Select, MenuItem } from '@material-ui/core';\n\nexport const LangSelect: React.FC<any> = ({\n  value,\n  onChange,\n  items,\n}) => {\n  return (\n    <Select\n      value={value}\n      onChange={onChange}\n    >\n      {items.map((item: any, key: number) => \n        <MenuItem key={key} value={key}>{item.text}</MenuItem>\n      )}\n    </Select>\n  );\n}","import { MediaStore } from './../stores/app/media';\nimport { MobXProviderContext } from 'mobx-react';\nimport { useContext } from 'react';\nimport { \n  AppStore,\n  RoomStore,\n  BoardStore,\n  DeviceStore,\n  UIStore,\n  BreakoutRoomStore,\n  ReplayStore,\n  RecordingStore\n } from '@/stores/app';\n\nexport type appContext = Record<string, AppStore>\n\nexport const useAppStore = (): AppStore => {\n  const context = useContext<appContext>(MobXProviderContext);\n  return context.store\n}\n\nexport const useUIStore = (): UIStore => {\n  const context = useContext<appContext>(MobXProviderContext);\n  return context.store.uiStore\n}\n\nexport const useRoomStore = (): RoomStore => {\n  const context = useContext<appContext>(MobXProviderContext)\n  return context.store.roomStore;\n}\n\nexport const useBreakoutRoomStore = (): BreakoutRoomStore => {\n  const context = useContext<appContext>(MobXProviderContext)\n  return context.store.breakoutRoomStore;\n}\n\nexport const useBoardStore = (): BoardStore => {\n  const context = useContext<appContext>(MobXProviderContext)\n  return context.store.boardStore\n}\n\nexport const useRecordingStore = (): RecordingStore => {\n  const context = useContext<appContext>(MobXProviderContext)\n  return context.store.recordingStore\n}\n\nexport const useDeviceStore = (): DeviceStore => {\n  const context = useContext<appContext>(MobXProviderContext)\n  return context.store.deviceStore\n}\n\nexport const useReplayStore = (): ReplayStore => {\n  const context = useContext<appContext>(MobXProviderContext)\n  return context.store.replayStore\n}\n\nexport const useMediaStore = (): MediaStore => {\n  const context = useContext<appContext>(MobXProviderContext)\n  return context.store.mediaStore\n}","import {GlobalStorage} from '../utils/custom-storage';\n\nconst key = 'demo-i18n-error'\n\nexport function setIntlError (payload: any) {\n  if (payload) {\n    GlobalStorage.save(key, payload)\n  }\n}\n\nfunction _getIntlError (error: string) {\n  try {\n    const locale = GlobalStorage.getLanguage().match(/^zh/) ? 'zh-cn' : 'en-us';\n    const rawData: any = GlobalStorage.read(key)\n    const json = rawData || {}\n    return json[locale][error]\n  } catch(err) {\n    console.warn(err)\n    return null\n  }\n}\n\nexport function getIntlError (errorCode: string) {\n  const res = _getIntlError(errorCode)\n  // TODO: return errorCode when error message not reached \n  // TODO: 处理错误码\n  if (!res) {\n    return errorCode\n  }\n  return res;\n}","import { EduLogger } from \"../logger\"\n\nconst FETCH_TIMEOUT = 10000\n\n// @ts-ignore\nexport async function Fetch (input: RequestInfo, init?: RequestInit, retryCount: number = 0): Promise<any> {\n  return new Promise((resolve, reject) => {\n    const onResponse = (response: Response) => {\n      EduLogger.info(\"OnResponse success\")\n      // WARN: 需要考虑服务器异常情况\n      if (!response.ok) {\n        EduLogger.info('status', response.status, ' ok ', response.ok)\n        reject(new Error(response.statusText))\n      }\n      return response.json().then(resolve).catch(reject)\n    }\n\n    const onError = (error: any) => {\n      // retryCount--;\n      // if (retryCount) {\n      //   setTimeout(fetchRequest, delay);\n      // } else {\n        reject(error);\n      // }\n    }\n\n    const rescueError = (error: any) => {\n      EduLogger.warn(error)\n      throw error;\n    }\n\n    function fetchRequest() {\n      return fetch(input, init)\n        .then(onResponse)\n        .catch(onError)\n        .catch(rescueError)\n    }\n\n    fetchRequest();\n\n    if (FETCH_TIMEOUT) {\n      const err = new Error(\"request timeout\")\n      setTimeout(reject, FETCH_TIMEOUT, err)\n    }\n  })\n}\n\nexport async function AgoraFetch(input: RequestInfo, init?: RequestInit, retryCount: number = 0) {\n  try {\n    return await Fetch(input, init, retryCount);\n  } catch(err) {\n    if (err && err.message === 'request timeout') {\n      return {code: err.code, msg: null, response: null}\n    }\n    throw err\n  }\n}","export const APP_TOKEN = process.env.REACT_APP_AGORA_APP_TOKEN as string;\nexport const ENABLE_LOG = process.env.REACT_APP_AGORA_LOG as string;\nexport const APP_ID: string = process.env.REACT_APP_AGORA_APP_ID as string;\nconst genToken = (): string => {\n  return window.btoa(`${process.env.REACT_APP_AGORA_CUSTOMER_ID}:${process.env.REACT_APP_AGORA_CUSTOMER_CERTIFICATE}`)\n}\nexport const AUTHORIZATION: string = genToken();\nexport const RoomKeyIdentifier = 'agora_meeting_room';\nexport const GlobalKeyIdentifier = 'global_identifier';\nexport const UUIDKeyIdentifier = 'agora_meeting_uuid';\nexport const SessionKeyIdentifier = 'agora_demo_session_profile';","import { getIntlError } from \"@/services/intl-error-helper\";\nimport { AgoraFetch } from \"../utils/fetch\";\nimport OSS from \"ali-oss\";\nimport md5 from \"js-md5\";\nimport { t } from \"@/i18n\";\nimport { get } from \"lodash\";\nimport { AUTHORIZATION, APP_ID } from \"@/utils/config\";\n\nconst AgoraFetchJson = async ({url, method, data, token, outHeaders}:{url?: string, method: string, data?: any, token?: string, outHeaders?: any}) => {  \n  const opts: any = {\n    method,\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Basic ${AUTHORIZATION!.replace(/basic\\s+|basic/i, '')}`\n    }\n  }\n\n  if (token) {\n    opts.headers['token'] = token;\n  }\n  \n  if (outHeaders) {\n    Object.keys(outHeaders).forEach(k => {\n      opts.headers[k] = outHeaders[k]\n    })\n  }\n  if (data) {\n    opts.body = JSON.stringify(data);\n  }\n  \n  let resp = await AgoraFetch(`${url}`, opts);\n  \n  const {code, msg, data: responseData} = resp\n\n  if (code !== 0 && code !== 408) {\n    const error = getIntlError(`${code}`)\n    const isErrorCode = `${error}` === `${code}`\n    if (code === 401 || code === 1101012) {\n      return\n    }\n    throw {api_error: error, isErrorCode}\n  }\n\n  return responseData\n}\n\n\nexport class logUpload {\n\n  appID: string = APP_ID;\n  roomId: string = '';\n  public _userToken: string = '';\n  \n  async fetchStsToken(roomId: string, fileExt: string) {\n\n    const _roomId = roomId ? roomId : 0\n\n    let timestamp = new Date().getTime()\n    let body = {\n      appId: this.appID,\n      appVersion: t('build_version'),\n      deviceName: 'mac',\n      deviceVersion: '2.0',\n      fileExt: fileExt,\n      platform: 'web',\n      tag: {\n        roomId: _roomId,\n      },\n    }\n\n    let params = JSON.stringify(body)\n    let appSecret = REACT_APP_AGORA_APP_SDK_LOG_SECRET\n    let signStr = appSecret + params + timestamp\n    let sign =  md5(signStr)\n\n    let data = await AgoraFetchJson({\n      url: `${REACT_APP_AGORA_APP_SDK_DOMAIN}/monitor/v1/log/oss/policy`,\n      data: body,    \n      method: 'POST',\n      outHeaders: {\n        sign: sign,\n        timestamp: timestamp,\n      }\n    })\n    return {\n      bucketName: data.bucketName as string,\n      callbackBody: data.callbackBody as string,\n      callbackContentType: data.callbackContentType as string,\n      accessKeyId: data.accessKeyId as any,\n      accessKeySecret: data.accessKeySecret as string,\n      securityToken: data.securityToken as string,\n      ossKey: data.ossKey as string,\n    }\n  }\n\n  async uploadZipLogFile(\n    roomId: string,\n    file: any\n  ) {\n    const res = await this.uploadToOss(roomId, file, 'zip')\n    return res;\n  }\n\n  // upload log\n  async uploadLogFile(\n    roomId: string,\n    file: any\n  ) {\n    const res = await this.uploadToOss(roomId, file, 'log')\n    return res;\n  }\n\n  async uploadToOss(roomId: string, file: any, ext: string) {\n    let {\n      bucketName,\n      callbackBody,\n      callbackContentType,\n      accessKeyId,\n      accessKeySecret,\n      securityToken,\n      ossKey\n    } = await this.fetchStsToken(roomId, ext);\n    const ossParams = {\n      bucketName,\n      callbackBody,\n      callbackContentType,\n      accessKeyId,\n      accessKeySecret,\n      securityToken,\n    }\n    const ossClient = new OSS({\n      accessKeyId: ossParams.accessKeyId,\n      accessKeySecret: ossParams.accessKeySecret,\n      stsToken: ossParams.securityToken,\n      bucket: ossParams.bucketName,\n      secure: true,\n      // TODO: 请传递你自己的oss endpoint\n      // TODO: Please use your own oss endpoint\n      endpoint: 'oss-accelerate.aliyuncs.com',\n    })\n\n    try {\n      let res = await ossClient.put(ossKey, file, {\n        callback: {\n          url: `${REACT_APP_AGORA_APP_SDK_DOMAIN}/monitor/v1/log/oss/callback`,\n          body: callbackBody,\n          contentType: callbackContentType,\n        }\n      });\n      return get(res, 'data.data', -1)\n    } catch(err) {\n      throw err\n    }\n  }\n\n}\n\nexport const logApi = new logUpload();\n","console.log(`CURRENT RUNTIME: ${process.env.REACT_APP_RUNTIME_PLATFORM}`);\n\nexport const isElectron = process.env.REACT_APP_RUNTIME_PLATFORM === 'electron'\n\nexport const platform = process.env.REACT_APP_RUNTIME_PLATFORM as string;","import Dexie from 'dexie';\n\nconst db = new Dexie('webdemo_agora_edu');\n\ndb.version(1).stores({\n  logs: 'content'\n});\n\nexport default db;\n","import { logApi } from \"../services/log-upload\";\nimport { get } from \"http\";\nimport { isElectron } from \"@/utils/platform\";\nimport db from \"./db\";\nimport Dexie from \"dexie\";\n// eslint-disable\nimport LogWorker from 'worker-loader!./log.worker';\n\nexport enum EduLogLevel {\n  Debug = 'Debug',\n  None = 'None'\n}\n\nconst flat = (arr: any[]) => {\n  return arr.reduce((arr, elem) => arr.concat(elem), []);\n};\n\nexport class EduLogger {\n  static logLevel: EduLogLevel = EduLogLevel.Debug\n\n  private static get currentTime(): string {\n    const date = new Date();\n    return `${date.toTimeString().split(\" \")[0] + \":\" + date.getMilliseconds()}`;\n  }\n\n  static setLogLevel(v: EduLogLevel) {\n    this.logLevel = v\n  }\n\n  // static enableUpload() {\n\n  // }\n\n  static warn(...args: any[]) {\n    this.log(`WARN`, ...args)\n  }\n\n  static debug(...args: any[]) {\n    this.log(`DEBUG`, ...args)\n  }\n\n  static info(...args: any[]) {\n    this.log(`INFO`, ...args)\n  }\n\n  private static log(type: string, ...args: any[]) {\n    if (this.logLevel === EduLogLevel.None) {\n      return\n    }\n    const prefix = `${this.currentTime} %cAgoraEdu-SDK [${type}]: `\n\n    let loggerArgs: any[] = [] \n\n    const pattern: {[key: string]: any} = {\n      'WARN': {\n        call: () => {\n          loggerArgs = [prefix, \"color: #9C640C;\"].concat(args) as any\n          (console as any).log.apply(console, loggerArgs)\n        }\n      },\n      'DEBUG': {\n        call: () => {\n          loggerArgs = [prefix, \"color: #99CC66;\"].concat(args) as any\n          (console as any).log.apply(console, loggerArgs)\n        }\n      },\n      'INFO': {\n        call: () => {\n          loggerArgs = [prefix, \"color: #99CC99; font-weight: bold;\"].concat(args) as any\n          (console as any).log.apply(console, loggerArgs)\n        }\n      }\n    }\n  \n    if (pattern.hasOwnProperty(type)) {\n      (pattern[type] as any).call()\n    } else {\n      loggerArgs = [prefix, \"color: #64B5F6;\"].concat(args) as any\n      (console as any).log.apply(console, loggerArgs)\n    }\n  }\n\n  static originConsole = window.console;\n\n  static thread = null;\n\n  static init() {\n    if (!this.thread) {\n      //@ts-ignore\n      this.thread = new LogWorker()\n      this.debugLog();\n    }\n  }\n\n  static debugLog() {\n    const thread = this.thread as any;\n    function proxy(context: any, method: any) {\n      return function() {\n        let args = [...arguments];\n        flat(args).join('');\n        thread.postMessage({\n          type: 'log',\n          data: JSON.stringify([flat(args).join('')])\n        });\n        method.apply(context, args);\n      };\n    }\n\n    Object.keys(console)\n      .filter(e => ['info', 'error', 'warn', 'log', 'debug'].indexOf(e) >= 0)\n      .forEach((method: any, _) => {\n        //@ts-ignore\n        console[method] = proxy(console, console[method]);\n      });\n    //@ts-ignore\n    window.console = console;\n  }\n\n  static async uploadElectronLog(roomId: any) {\n    //@ts-ignore\n    let file = await window.doGzip();\n    const res = await logApi.uploadZipLogFile(\n      roomId,\n      file\n    )\n    return res;\n  }\n\n  static async enableUpload(roomUuid: string) {\n    const ids = [];\n    // Upload Electron log\n    if (isElectron) {\n      ids.push(await this.uploadElectronLog(roomUuid))\n    }\n    // Web upload log\n    ids.push(await this.uploadLog(roomUuid))\n    return ids.join(\"#\")\n  }\n\n  static async uploadLog(roomId: string) {\n    console.log('[upload] roomId: ', roomId)\n    // let ua = getUserAgent();\n    //@ts-ignore\n    let logs = await db.logs.toArray();\n    const logsStr = logs\n      .reverse()\n      .map((e: any) => JSON.parse(e.content))\n      .map((e: any) => (Array.isArray(e) ? e[0] : e))\n      .join('\\n');\n\n    //@ts-ignore\n    window.logsStr = logsStr\n\n    const file = await new File([logsStr], `${+Date.now()}`)\n\n    //@ts-ignore\n    window.file = file\n    \n    let res: any = await logApi.uploadLogFile(\n      roomId,\n      file,\n    )\n    await db.delete();\n    if (!(await Dexie.exists(db.name))) {\n      db.version(1).stores({\n        logs: 'content'\n      });\n    }\n    await db.open();\n    console.log(\">>>>> res\", res)\n    return res;\n  }\n}\n\n//@ts-ignore\nwindow.EduLogger = EduLogger","import { IAgoraRTCRemoteUser } from 'agora-rtc-sdk-ng';\nimport { IAgoraRTCClient, ICameraVideoTrack, IMicrophoneAudioTrack, ILocalVideoTrack, ILocalAudioTrack, IAgoraRTC, ILocalTrack, ITrack } from 'agora-rtc-sdk-ng';\nimport { EventEmitter } from \"events\";\nimport { IAgoraRTCModule, CameraOption, MicrophoneOption, PrepareScreenShareParams, StartScreenShareParams } from '../interfaces';\nimport { EduLogger } from '../../logger';\n\ninterface IWebRTCWrapper extends IAgoraRTCModule {\n\n  cameraTrack?: ICameraVideoTrack\n  audioTrack?: IMicrophoneAudioTrack\n\n  screenVideoTrack?: ILocalVideoTrack\n  screenAudioTrack?: ILocalAudioTrack\n  screenClient?: IAgoraRTCClient\n\n  client: IAgoraRTCClient\n}\n\n\n\ninterface RtcWrapperInitOption {\n  appId: string\n  uploadLog: boolean\n  agoraWebSdk: IAgoraRTC\n  webConfig: {\n    mode: string,\n    codec: string,\n    role: string\n  }\n}\n\nexport class AgoraWebRtcWrapper extends EventEmitter implements IWebRTCWrapper {\n\n  _client?: IAgoraRTCClient;\n\n  _subClient: Record<string, IAgoraRTCClient>;\n\n  _screenClient?: IAgoraRTCClient;\n\n  agoraWebSdk!: IAgoraRTC;\n\n  deviceList: any[] = []\n\n  localUid?: any;\n\n  clientConfig?: any;\n\n  joined: boolean\n  cameraTrack?: ICameraVideoTrack\n  microphoneTrack?: IMicrophoneAudioTrack\n\n  cameraTestTrack?: ICameraVideoTrack\n  microphoneTestTrack?: IMicrophoneAudioTrack\n\n  localScreenUid?: any;\n  screenVideoTrack?: ILocalVideoTrack\n  screenAudioTrack?: ILocalAudioTrack\n\n  publishedTrackIds: any[] = []\n\n  appId: string\n  intervalMap: Record<string, any> = {}\n\n  subscribeAudioList: any[] = []\n  subscribeVideoList: any[] = []\n  unsubscribeAudioList: any[] = []\n  unsubscribeVideoList: any[] = []\n\n  private videoMuted: boolean = false\n  private audioMuted: boolean = false\n\n  public publishedAudio: boolean = false\n  public publishedVideo: boolean = false\n\n  constructor(options: RtcWrapperInitOption) {\n    super();\n    this.agoraWebSdk = options.agoraWebSdk\n    this.clientConfig = options.webConfig\n    this.appId = options.appId\n    this.joined = false;\n    this.publishedAudio = false;\n    this.publishedVideo = false;\n    this._subClient = {}\n    // this.init()\n  }\n\n  clearAllInterval() {\n    for (let key of Object.keys(this.intervalMap)) {\n      this.closeInterval(key)\n    }\n  }\n\n  releaseAllClient() {\n    if (this.client) {\n      this.client.removeAllListeners()\n      this._client = undefined\n    }\n\n    if (this.screenClient) {\n      this.screenClient.removeAllListeners()\n      this._screenClient = undefined\n    }\n\n    if (this._subClient) {\n      for (let key of Object.keys(this._subClient)) {\n        if (this._subClient[key]) {\n          this._subClient[key].removeAllListeners()\n          delete this._subClient[key]\n        }\n      }\n      this._subClient = {}\n    }\n  }\n\n  reset() {\n    this.publishedVideo = false\n    this.publishedAudio = false\n    this.localUid = undefined\n    this.releaseAllClient()\n    this.clearAllInterval()\n    this.cameraTrack && this.closeMediaTrack(this.cameraTrack)\n    this.microphoneTrack && this.closeMediaTrack(this.microphoneTrack)\n    this.cameraTestTrack && this.closeTestTrack(this.cameraTestTrack)\n    this.microphoneTestTrack && this.closeTestTrack(this.microphoneTestTrack)\n    this.screenVideoTrack && this.closeScreenTrack(this.screenVideoTrack)\n    this.screenAudioTrack && this.closeScreenTrack(this.screenAudioTrack)\n    this.joined = false\n    this.publishedTrackIds = []\n    this.deviceList = []\n    this.subscribeVideoList = []\n    this.subscribeAudioList = []\n    this.unsubscribeAudioList = []\n    this.unsubscribeVideoList = []\n    this.videoMuted = false\n    this.audioMuted = false\n    this.channelName = ''\n    // this.init()\n  }\n\n  get client(): IAgoraRTCClient {\n    return this._client as IAgoraRTCClient\n  }\n\n  get screenClient(): IAgoraRTCClient {\n    return this._screenClient as IAgoraRTCClient\n  }\n\n  private fire(...eventArgs: any[]) {\n    const [eventName, ...args] = eventArgs\n    // EduLogger.info(eventName, ...args)\n    this.emit(eventName, ...args)\n  }\n\n  init () {\n    this._client = this.agoraWebSdk.createClient(this.clientConfig)\n    this.client.on('user-joined', (user) => {\n      // this.fire('user-joined', user)\n    })\n    this.client.on('user-left', (user) => {\n      // this.fire('user-left', user)\n    })\n    this.client.on('user-published', async (user, mediaType) => {\n        console.log(\"user-published \", user, mediaType)\n        if (user.uid !== this.localScreenUid) {\n          if (mediaType === 'audio') {\n            if (!this.audioMuted) {\n              console.log(\"subscribeAudio, user\", user)\n              await this.client.subscribe(user, 'audio')\n              // this.fire('user-published', {\n              //   user,\n              //   mediaType,\n              //   channel: this.channelName\n              // })\n              if (user.audioTrack) {\n                !user.audioTrack.isPlaying && user.audioTrack.play()\n              }\n            }\n          }\n\n          if (mediaType === 'video') {\n            if (!this.videoMuted) {\n              console.log(\"subscribeVideo, user\", user)\n              // await this.subscribeVideo(user)\n              await this.client.subscribe(user, 'video')\n              this.fire('user-published', {\n                user,\n                mediaType,\n                channel: this.channelName\n              })\n            }\n          }\n      }\n    })\n    this.client.on('user-unpublished', (user, mediaType) => {\n      if (user.uid === this.localScreenUid) return\n      this.fire('user-unpublished', {\n        user,\n        mediaType,\n        channel: this.channelName,\n      })\n    })\n    // this.client.on('user-info-updated', (uid, msg) => {\n    //   this.fire('user-info-updated', {\n    //     uid, msg\n    //   })\n    // })\n    this.client.on('token-privilege-did-expire', () => {\n      this.fire('token-privilege-did-expire')\n    })\n    this.client.on('token-privilege-will-expire', () => {\n      this.fire('token-privilege-will-expire')\n    })\n    this.client.on('connection-state-change', (curState, revState) => {\n      this.fire('connection-state-change', {\n        curState,\n        revState\n      })\n    })\n    this.client.on('exception', (err: any) => {\n      this.fire('exception', {\n        err\n      })\n    })\n    this.client.on('stream-fallback', (uid, isFallbackOrRecover) => {\n      this.fire('stream-fallback', {\n        uid, isFallbackOrRecover\n      })\n    })\n    this.client.on('network-quality', (evt: any) => {\n      // console.log('[web] network-quality', evt)\n      this.fire('network-quality', {\n        downlinkNetworkQuality: evt.downlinkNetworkQuality,\n        uplinkNetworkQuality: evt.uplinkNetworkQuality,\n      })\n    })\n    return\n  }\n\n  release () {\n    this.reset()\n  }\n\n  private channelName: string = ''\n\n  async join(option: any): Promise<any> {\n    const client = this.registerClientByChannelName(option.channel)\n    EduLogger.debug(`web#join ${JSON.stringify(option)}`)\n    this.localUid = await client.join(this.appId, option.channel, option.token, option.uid);\n    this.joined = true\n    this.channelName = option.channel\n    this._client = client;\n    return this.localUid;\n  }\n\n  registerClientByChannelName(channelName: string) {\n    const client = this.agoraWebSdk.createClient(this.clientConfig);\n    client.on('user-published', async (user, mediaType) => {\n      console.log(\"user-published \", user, mediaType)\n      if (user.uid !== this.localScreenUid) {\n        if (mediaType === 'audio') {\n          await client.subscribe(user, 'audio')\n          // this.fire('user-published', {\n          //   user,\n          //   mediaType,\n          //   channel: channelName\n          // })\n          if (user.audioTrack) {\n            !user.audioTrack.isPlaying && user.audioTrack.play()\n          }\n        }\n\n        if (mediaType === 'video') {\n          await client.subscribe(user, 'video')\n          this.fire('user-published', {\n            user,\n            mediaType,\n            channel: channelName\n          })\n        }\n      }\n    })\n    client.on('user-unpublished', (user, mediaType) => {\n      if (user.uid === this.localScreenUid) return\n      this.fire('user-unpublished', {\n        user,\n        mediaType,\n        channel: channelName\n      })\n    })\n    client.on('token-privilege-did-expire', () => {\n      // this.fire('token-privilege-did-expire')\n    })\n    client.on('token-privilege-will-expire', () => {\n      // this.fire('token-privilege-will-expire')\n    })\n    client.on('connection-state-change', (curState, revState) => {\n      this.fire('connection-state-change', {\n        curState,\n        revState,\n        channel: channelName\n      })\n    })\n    client.on('exception', (err: any) => {\n      this.fire('exception', {\n        err,\n        channel: channelName\n      })\n    })\n    client.on('stream-fallback', (uid, isFallbackOrRecover) => {\n      this.fire('stream-fallback', {\n        uid,\n        isFallbackOrRecover,\n        channel: channelName\n      })\n    })\n    client.on('network-quality', (evt: any) => {\n      this.fire('network-quality', {\n        downlinkNetworkQuality: evt.downlinkNetworkQuality,\n        uplinkNetworkQuality: evt.uplinkNetworkQuality,\n        channel: channelName\n      })\n    })\n    this.addInterval(() => {\n      const stats = client.getRTCStats()\n      this.fire('watch-rtt', {\n        RTT: stats.RTT,\n        channel: channelName\n      })\n    }, `watch-rtt-${channelName}`, null, 300)\n    return client\n  }\n\n  async joinChannel(option: any): Promise<any> {\n    const subChannel = this._subClient[option.channel]\n    if (!subChannel) {\n      let childChannel = this.registerClientByChannelName(option.channel)\n      await childChannel.join(this.appId, option.channel, option.token, option.uid)\n      this._subClient[option.channel] = childChannel\n      return childChannel\n    }\n  }\n\n  private releaseChannel(key: string) {\n    const client = this._subClient[key]\n    client.removeAllListeners()\n    delete this._subClient[key]\n  }\n\n  async leaveChannel(option: any): Promise<any> {\n    const subChannel = this._subClient[option.channel]\n    if (subChannel) {\n      await subChannel.leave()\n      this.releaseChannel(option.channel)\n    }\n  }\n  \n  // async publishChannel(option: any): Promise<any> {\n  //   const client = this._subClient[option.channel]\n  //   if (client) {\n  //     client.publish([this.cameraTrack])\n  //   }\n  // }\n\n  // async unpublishChannel(option: any): Promise<any> {\n    \n  // }\n\n  async leave(): Promise<any> {\n    await this.stopScreenShare()\n    await this.client.leave()\n    this.joined = false\n  }\n\n  private closeMediaTrack(track: ILocalTrack) {\n    if (track) {\n      track.stop()\n      track.close()\n    }\n    if (track.trackMediaType === 'video') {\n      this.cameraTrack = undefined\n    }\n    if (track.trackMediaType === 'audio') {\n      this.closeInterval('volume')\n      this.microphoneTrack = undefined\n    }\n  }\n\n  private closeTestTrack(track: ILocalTrack) {\n    if (track) {\n      track.stop()\n      track.close()\n    }\n    if (track.trackMediaType === 'video') {\n      this.cameraTestTrack = undefined\n    }\n    if (track.trackMediaType === 'audio') {\n      this.closeInterval('test-volume')\n      this.microphoneTestTrack = undefined\n    }\n  }\n\n  async muteAllVideo(val: boolean): Promise<any> {\n    const asyncList = [\n      this.muteLocalVideo(val)\n    ].concat(\n      this.subscribeVideoList.map((uid: any) => this.muteRemoteVideo(uid, val))\n    )\n    try {\n      await Promise.all(asyncList)\n      this.videoMuted = val\n    } catch(err) {\n      throw err\n    }\n  }\n\n  async muteAllAudio(val: boolean): Promise<any> {\n    const asyncList = [\n      this.muteLocalAudio(val)\n    ].concat(\n      this.subscribeAudioList.map((uid: any) => this.muteRemoteAudio(uid, val))\n    )\n    try {\n      await Promise.all(asyncList)\n      this.audioMuted = val\n    } catch(err) {\n      throw err\n    }\n  }\n\n  async muteLocalVideo(val: boolean): Promise<any> {\n    if (this.cameraTrack) {\n      await this.cameraTrack.setEnabled(val)\n    }\n  }\n  \n  async muteLocalAudio(val: boolean): Promise<any> {\n    if (this.microphoneTrack) {\n      await this.microphoneTrack.setEnabled(val)\n    }\n  }\n\n  updateVideoList(targetUid: any, type: string) {\n    if (type === 'subscribe') {\n      const subVideoIdx = this.subscribeVideoList.findIndex((uid: any) => uid === targetUid)\n      const subVideoExist = subVideoIdx === -1\n      if (subVideoExist) {\n        this.subscribeVideoList.push(targetUid)\n      }\n      const unsubVideoIdx = this.unsubscribeVideoList.findIndex((uid: any) => uid === targetUid)\n      const unsubVideoExist = unsubVideoIdx !== -1\n      if (unsubVideoExist) {\n        this.unsubscribeVideoList.splice(unsubVideoIdx, 1)\n      }\n    }\n\n    if (type === 'unsubscribe') {\n      const subVideoIdx = this.subscribeVideoList.findIndex((uid: any) => uid === targetUid)\n      const subVideoExist = subVideoIdx !== -1\n      if (subVideoExist) {\n        this.subscribeVideoList.splice(subVideoIdx, 1)\n      }\n      const unsubVideoIdx = this.unsubscribeVideoList.findIndex((uid: any) => uid === targetUid)\n      const unsubVideoExist = unsubVideoIdx === -1\n      if (unsubVideoExist) {\n        this.unsubscribeVideoList.push(targetUid)\n      }\n    }\n  }\n\n  updateAudioList(targetUid: any, type: string) {\n    if (type === 'subscribe') {\n      const subAudioIdx = this.subscribeAudioList.findIndex((uid: any) => uid === targetUid)\n      const subAudioExist = subAudioIdx === -1\n      if (subAudioExist) {\n        this.subscribeAudioList.push(targetUid)\n      }\n      const unsubAudioIdx = this.unsubscribeAudioList.findIndex((uid: any) => uid === targetUid)\n      const unsubVideoExist = unsubAudioIdx !== -1\n      if (unsubVideoExist) {\n        this.unsubscribeAudioList.splice(unsubAudioIdx, 1)\n      }\n    }\n\n    if (type === 'unsubscribe') {\n      const subAudioIdx = this.subscribeAudioList.findIndex((uid: any) => uid === targetUid)\n      const subAudioExist = subAudioIdx !== -1\n      if (subAudioExist) {\n        this.subscribeAudioList.splice(subAudioIdx, 1)\n      }\n      const unsubAudioIdx = this.unsubscribeAudioList.findIndex((uid: any) => uid === targetUid)\n      const unsubVideoExist = unsubAudioIdx === -1\n      if (unsubVideoExist) {\n        this.unsubscribeAudioList.push(unsubAudioIdx)\n      }\n    }\n  }\n\n  async subscribeAudio(user: any): Promise<any> {\n    await this.client.subscribe(user, 'audio');\n    this.updateAudioList(user.uid, 'subscribe')\n    // this.fire('user-published', {user})\n  }\n\n  private async unsubscribeAudio(user: any): Promise<any> {\n    await this.client.unsubscribe(user, 'audio');\n    this.updateAudioList(user.uid, 'unsubscribe')\n    // this.fire('user-unpublished', {user})\n  }\n\n  private async subscribeVideo(user: any): Promise<any> {\n    console.log(\"subscribe user\", user)\n    await this.client.subscribe(user, 'video')\n    // this.fire('user-published', {user})\n  }\n\n  private async unsubscribeVideo(user: any): Promise<any> {\n    await this.client.unsubscribe(user, 'video')\n    // this.fire('user-unpublished', {user})\n  }\n\n  async muteRemoteVideo(uid: any, val: boolean): Promise<any> {\n    const targetUser = this.client.remoteUsers.find(user => user.uid === +uid)\n    if (!targetUser) return\n    if (val) {\n      await this.unsubscribeVideo(targetUser)\n    } else {\n      console.log(\"call subscribeVideo\")\n    }\n  }\n\n  async muteRemoteVideoByClient(client: IAgoraRTCClient, uid: any, val: boolean): Promise<any> {\n    const targetUser = client.remoteUsers.find(user => user.uid === +uid)\n    if (!targetUser) return\n    if (val) {\n      await client.unsubscribe(targetUser, 'video')\n    } else {\n      console.log(\"call subscribeVideo\")\n    }\n  }\n\n  async muteRemoteAudioByClient(client: IAgoraRTCClient, uid: any, val: boolean): Promise<any> {\n    const targetUser = client.remoteUsers.find(user => user.uid === +uid)\n    if (!targetUser) return\n    if (val) {\n      await client.unsubscribe(targetUser, 'audio')\n      this.fire('user-unpublished')\n    } else {\n      console.log(\"call subscribeVideo\")\n    }\n  }\n\n  async muteRemoteAudio(uid: any, val: boolean): Promise<any> {\n    const targetUser = this.client.remoteUsers.find(user => user.uid === +uid)\n    if (!targetUser) return\n    if (val) {\n      await this.unsubscribeAudio(targetUser)\n    } else {\n      console.log(\"call subscribeAudio\")\n      // await this.subscribeAudio(targetUser)\n    }\n  }\n\n  async openCamera(option?: CameraOption): Promise<any> {\n    EduLogger.info('[agora-web] invoke web#openCamera')\n    if (!option) {\n      this.cameraTrack = await this.agoraWebSdk.createCameraVideoTrack()\n      this.cameraTrack.on('track-ended', () => {\n        this.cameraTrack && this.closeMediaTrack(this.cameraTrack)\n        this.fire('track-ended', {video: true})\n      })\n      EduLogger.info(`[agora-web] create default camera [${this.cameraTrack.getTrackId()}] video track success`)\n    } else {\n      this.cameraTrack = await this.agoraWebSdk.createCameraVideoTrack({\n        cameraId: option.deviceId,\n        encoderConfig: option.encoderConfig\n      })\n      const cameraId = this.cameraTrack.getTrackId()\n      this.cameraTrack.on('track-ended', () => {\n        this.cameraTrack && this.closeMediaTrack(this.cameraTrack)\n        this.fire('track-ended', {video: true})\n      })\n      EduLogger.info(`[agora-web] create camera [${cameraId}], option: ${JSON.stringify(option)} success`)\n    }\n    if (this.joined && this.publishedVideo) {\n      const cameraId = this.cameraTrack.getTrackId()\n      await this.client.publish([this.cameraTrack])\n      EduLogger.info(`[agora-web] publish camera [${cameraId}] success`)\n    }\n  }\n\n  async closeCamera() {\n    EduLogger.info('[agora-web] invoke close#openCamera')\n    if (this.cameraTrack) {\n      try {\n        await this.unpublishTrack(this.cameraTrack)\n        if (this.cameraTrack) {\n          const trackId = this.cameraTestTrack?.getTrackId()\n          this.cameraTrack.isPlaying && this.cameraTrack.stop()\n          this.cameraTrack.close()\n          EduLogger.info(`[agora-web] close camera [${trackId}] success`)\n          this.cameraTrack = undefined\n        }\n      } catch (err) {\n        if (this.cameraTrack) {\n          const trackId = this.cameraTestTrack?.getTrackId()\n          this.cameraTrack.isPlaying && this.cameraTrack.stop()\n          this.cameraTrack.close()\n          EduLogger.info(`[agora-web] close camera [${trackId}] success`)\n          this.cameraTrack = undefined\n        }\n        throw err\n      }\n    }\n  }\n\n  async changeCamera(deviceId: string): Promise<any> {\n    EduLogger.info('[agora-web] invoke close#changeCamera')\n    if (this.cameraTrack) {\n      await this.cameraTrack.setDevice(deviceId)\n      await this.agoraWebSdk.checkVideoTrackIsActive(this.cameraTrack as ILocalVideoTrack)\n      EduLogger.info(`[agora-web] changeCamera by deviceId: ${deviceId} success`)\n    } else {\n      throw 'no camera track found'\n    }\n  }\n\n  async openMicrophone(option?: MicrophoneOption): Promise<any> {\n    EduLogger.info('[agora-web] invoke web#openMicrophone')\n    if (!option) {\n      this.microphoneTrack = await this.agoraWebSdk.createMicrophoneAudioTrack()\n      this.microphoneTrack.on('track-ended', () => {\n        this.microphoneTrack && this.closeMediaTrack(this.microphoneTrack)\n        this.fire('track-ended', {audio: true})\n      })\n      EduLogger.info(`[agora-web] create audio track [${this.microphoneTrack.getTrackId()}] success`)\n    } else {\n      this.microphoneTrack = await this.agoraWebSdk.createMicrophoneAudioTrack({\n        microphoneId: option.deviceId\n      })\n      this.microphoneTrack.on('track-ended', () => {\n        this.microphoneTrack && this.closeMediaTrack(this.microphoneTrack)\n        this.fire('track-ended', {audio: true})\n      })\n      EduLogger.info(`[agora-web] create audio track with  by deviceId: ${option.deviceId} [${this.microphoneTrack.getTrackId()}] success`)\n    }\n    if (this.microphoneTrack) {\n      this.microphoneTrack.stop()\n      EduLogger.info(`[agora-web] create audio track stop playback [${this.microphoneTrack.getTrackId()}] success`)\n    }\n    if (this.joined && this.publishedAudio) {\n      await this.client.publish([this.microphoneTrack])\n      EduLogger.info(`[agora-web] publish audio track [${this.microphoneTrack.getTrackId()}] success`)\n    }\n  }\n\n  async changeResolution(config: any): Promise<any> {\n    await this.cameraTrack?.setEncoderConfiguration(config)\n  }\n\n  closeInterval(type: string) {\n    if (this.intervalMap[type]) {\n      clearInterval(this.intervalMap[type])\n      this.intervalMap[type] = undefined\n    }\n  }\n\n  addInterval(call: CallableFunction, type: string, args: any, delay: number) {\n    if (this.intervalMap[type]) {\n      this.closeInterval(type)\n    }\n    this.intervalMap[type] = setInterval(call, delay, args)\n  }\n\n  async closeMicrophone() {\n    EduLogger.info('[agora-web] close microphone')\n    if (this.microphoneTrack) {\n      try {\n        await this.unpublishTrack(this.microphoneTrack)\n        if (this.microphoneTrack) {\n          this.microphoneTrack.stop()\n          this.microphoneTrack.close()\n          EduLogger.info('[agora-web] close microphone success')\n          this.microphoneTrack = undefined\n        }\n      } catch (err) {\n        if (this.microphoneTrack) {\n          this.microphoneTrack.stop()\n          this.microphoneTrack.close()\n          EduLogger.info('[agora-web] close microphone success')\n          this.microphoneTrack = undefined\n        }\n        throw err\n      }\n    }\n  }\n\n  async changeMicrophone(deviceId: string): Promise<any> {\n    if (this.microphoneTrack) {\n      await this.microphoneTrack.setDevice(deviceId)\n      await this.agoraWebSdk.checkAudioTrackIsActive(this.microphoneTrack as ILocalAudioTrack)\n    } else {\n      throw 'no microphone track found'\n    }\n  }\n\n  private closeScreenTrack(track: ILocalTrack) {\n    if (track) {\n      track.stop()\n      track.close()\n      const index = this.publishedTrackIds.indexOf(track.getTrackId)\n      if (index !== -1) {\n        this.publishedTrackIds.splice(index, 1)\n      }\n    }\n    if (track.trackMediaType === 'video') {\n      this.screenVideoTrack = undefined\n    }\n    if (track.trackMediaType === 'audio') {\n      this.screenAudioTrack = undefined\n    }\n  }\n\n  async prepareScreenShare(options: PrepareScreenShareParams): Promise<any> {\n    try {\n      const screenClient = this.agoraWebSdk.createClient(this.clientConfig)\n\n      const tracks = await this.agoraWebSdk.createScreenVideoTrack({\n        encoderConfig: options.encoderConfig,\n      }, options.shareAudio)\n\n      if (options.shareAudio === 'enable') {\n        const screenTracks: [ILocalVideoTrack, ILocalAudioTrack] = tracks as [ILocalVideoTrack, ILocalAudioTrack]\n        this.screenVideoTrack = screenTracks[0]\n        this.screenAudioTrack = screenTracks[1]\n      } else {\n        this.screenVideoTrack = tracks as ILocalVideoTrack\n      }\n\n      (this.screenVideoTrack as ILocalTrack).on('track-ended', () => {\n        this.screenAudioTrack && this.closeScreenTrack(this.screenAudioTrack)\n        this.screenVideoTrack && this.closeScreenTrack(this.screenVideoTrack)\n        this.fire('track-ended', {screen: true})\n      })\n\n      this._screenClient = screenClient\n      return \n    } catch (err) {\n      throw err\n    }\n  }\n\n  async startScreenShare(option: StartScreenShareParams): Promise<any> {\n    if (!this.screenClient) return\n    const params = option.params\n    this.localScreenUid = await this.screenClient.join(this.appId, params.channel, params.token, params.uid)\n    if (this.screenAudioTrack) {\n      const trackId = this.screenAudioTrack.getTrackId()\n      if (this.publishedTrackIds.indexOf(trackId) < 0) {\n        await this.screenClient.publish([this.screenAudioTrack])\n        this.publishedTrackIds.push(trackId)\n      }\n    }\n\n    if (this.screenVideoTrack) {\n      const trackId = this.screenVideoTrack.getTrackId()\n      if (this.publishedTrackIds.indexOf(trackId) < 0) {\n        await this.screenClient.publish([this.screenVideoTrack])\n        this.publishedTrackIds.push(trackId)\n      }\n    }\n  }\n\n  async stopScreenShare(): Promise<any> {\n    if (!this.screenClient) return\n    if (this.screenAudioTrack) {\n      this.closeScreenTrack(this.screenAudioTrack)\n    }\n    if (this.screenVideoTrack) {\n      this.closeScreenTrack(this.screenVideoTrack)\n    }\n    await this.screenClient.leave()\n    this.screenClient.removeAllListeners()\n    this._screenClient = undefined\n    this.localScreenUid = undefined\n  }\n\n  async publish(): Promise<any> {\n    if (this.cameraTrack) {\n      const trackId = this.cameraTrack.getTrackId()\n      if (this.publishedTrackIds.indexOf(trackId) < 0) {\n        await this.client.publish([this.cameraTrack])\n        this.publishedVideo = true\n        this.publishedTrackIds.push(trackId)\n      }\n    }\n    if (this.microphoneTrack) {\n      const trackId = this.microphoneTrack.getTrackId()\n      if (this.publishedTrackIds.indexOf(trackId) < 0) {\n        await this.client.publish([this.microphoneTrack])\n        this.publishedAudio = true\n        this.publishedTrackIds.push(trackId)\n      }\n    }\n  }\n\n  private async unpublishTrack(track: ILocalTrack) {\n    const trackId = track.getTrackId()\n    const idx = this.publishedTrackIds.indexOf(trackId)\n    if (this.cameraTrack \n        && this.cameraTrack.getTrackId() === trackId) {\n      await this.client.unpublish([this.cameraTrack])\n      EduLogger.info(`[agora-web] unpublish camera track [${trackId}] success`)\n    }\n    if (this.microphoneTrack \n      && this.microphoneTrack.getTrackId() === trackId) {\n      await this.client.unpublish([this.microphoneTrack])\n      EduLogger.info(`[agora-web] unpublish microphone track [${trackId}] success`)\n    }\n    this.publishedTrackIds.splice(idx, 1)\n  }\n\n  async unpublish(): Promise<any> {\n    if (this.cameraTrack) {\n      const trackId = this.cameraTrack.getTrackId()\n      const idx = this.publishedTrackIds.indexOf(trackId)\n      if (idx !== -1) {\n        await this.client.unpublish([this.cameraTrack])\n        EduLogger.info('[agora-web] unpublish camera track success')\n        this.publishedTrackIds.splice(idx, 1)\n      }\n    }\n    if (this.microphoneTrack) {\n      const trackId = this.microphoneTrack.getTrackId()\n      const idx = this.publishedTrackIds.indexOf(trackId)\n      if (idx !== -1) {\n        await this.client.unpublish([this.microphoneTrack])\n        EduLogger.info('[agora-web] unpublish microphone track success')\n        this.publishedTrackIds.splice(idx, 1)\n      }\n    }\n  }\n\n  async getDevices() {\n    const list = await this.agoraWebSdk.getDevices()\n    this.deviceList = list\n    return list\n  }\n\n  async getMicrophones () {\n    const list = await this.agoraWebSdk.getMicrophones();\n    this.deviceList = list\n    return list;\n  }\n\n  async getCameras() {\n    const list = await this.agoraWebSdk.getCameras();\n    this.deviceList = list\n    return list;\n  }\n\n  changePlaybackVolume(volume: number) {\n    this.client.localTracks.forEach((t: ILocalTrack) => {\n      t.trackMediaType === 'audio' && (t as ILocalAudioTrack).setVolume(volume)\n    })\n    this.client.remoteUsers.forEach((user: IAgoraRTCRemoteUser) => {\n      user.audioTrack?.setVolume(volume)\n    })\n  }\n\n  async openTestCamera(option?: CameraOption): Promise<any> {\n    if (this.cameraTestTrack) throw 'camera test track already exists'\n    if (!option) {\n      this.cameraTestTrack = await this.agoraWebSdk.createCameraVideoTrack()\n      this.cameraTestTrack.on('track-ended', () => {\n        console.log(\"track-ended\")\n        this.cameraTestTrack && this.closeMediaTrack(this.cameraTestTrack)\n        this.fire('track-ended', {video: true})\n      })\n    } else {\n      this.cameraTestTrack = await this.agoraWebSdk.createCameraVideoTrack({\n        cameraId: option.deviceId,\n        encoderConfig: option.encoderConfig\n      })\n      this.cameraTestTrack.on('track-ended', () => {\n        console.log(\"track-ended\")\n        this.cameraTestTrack && this.closeMediaTrack(this.cameraTestTrack)\n        this.fire('track-ended', {video: true})\n      })\n    }\n  }\n  \n  closeTestCamera() {\n    if (this.cameraTestTrack) {\n      this.cameraTestTrack.isPlaying && this.cameraTestTrack.stop()\n      this.cameraTestTrack.close()\n    }\n    this.cameraTestTrack = undefined\n  }\n  \n  async changeTestCamera(deviceId: string): Promise<any> {\n    if (this.cameraTestTrack) {\n      await this.cameraTestTrack.setDevice(deviceId)\n      await this.agoraWebSdk.checkVideoTrackIsActive(this.cameraTestTrack as ILocalVideoTrack)\n    } else {\n      throw 'no camera test track found'\n    }\n  }\n  \n  async openTestMicrophone(option?: MicrophoneOption): Promise<any> {\n    if (this.microphoneTestTrack) throw 'microphone test track already exists'\n    if (!option) {\n      this.microphoneTestTrack = await this.agoraWebSdk.createMicrophoneAudioTrack()\n      this.microphoneTestTrack.on('track-ended', () => {\n        this.microphoneTestTrack && this.closeMediaTrack(this.microphoneTestTrack)\n        this.fire('track-ended', {audio: true})\n      })\n    } else {\n      this.microphoneTestTrack = await this.agoraWebSdk.createMicrophoneAudioTrack({\n        microphoneId: option.deviceId\n      })\n      this.microphoneTestTrack.on('track-ended', () => {\n        this.microphoneTestTrack && this.closeMediaTrack(this.microphoneTestTrack)\n        this.fire('track-ended', {audio: true})\n      })\n    }\n    if (this.microphoneTestTrack) {\n      this.addInterval((track: ILocalAudioTrack) => {\n        if (track) {\n          const totalVolume = track.getVolumeLevel()\n          this.fire('volume-indication', {totalVolume})\n        }\n      }, 'test-volume', this.microphoneTestTrack, 300)\n    }\n  }\n  \n  async changeTestResolution(config: any): Promise<any> {\n    await this.cameraTestTrack?.setEncoderConfiguration(config)\n  }\n  \n  closeTestMicrophone() {\n    if (this.microphoneTestTrack) {\n      this.closeInterval('test-volume')\n      this.microphoneTestTrack.isPlaying && this.microphoneTestTrack.stop()\n      this.microphoneTestTrack.close()\n    }\n    this.microphoneTestTrack = undefined\n  }\n  \n  async changeTestMicrophone(deviceId: string): Promise<any> {\n    if (this.microphoneTestTrack) {\n      await this.microphoneTestTrack.setDevice(deviceId)\n      await this.agoraWebSdk.checkAudioTrackIsActive(this.microphoneTestTrack as ILocalAudioTrack)\n    } else {\n      throw 'no microphone test track found'\n    }\n  }\n}","export const wait = (ms: number) => new Promise((_, reject) => setTimeout(reject, ms, new Error(`Timeout after ${ms} ms`)))\n","import OSS from 'ali-oss';\nimport {get} from 'lodash';\n\nexport interface OSSConfig {\n  accessKeyId: string,\n  accessKeySecret: string,\n  // region: string,\n  endpoint: string,\n  bucket: string,\n  folder: string,\n}\n\nexport interface UserAttrs {\n  uid: string\n  account: string\n  role: string\n  audio: number\n  video: number\n  chat: number\n  whiteboard_uid?: string\n  link_uid?: number\n  shared_uid?: number\n  mute_chat?: number\n  class_state?: number\n}\n\nexport const resolveFileInfo = (file: any) => {\n  const fileName = encodeURI(file.name);\n  const fileType = fileName.substring(fileName.length, fileName.lastIndexOf('.'));\n  return {\n    fileName,\n    fileType\n  }\n}\n\nconst level = [\n  'unknown',\n  'excellent',\n  'good',\n  'poor',\n  'bad',\n  'very bad',\n  'down'\n];\n\nexport function NetworkQualityEvaluation(evt: { downlinkNetworkQuality: number, uplinkNetworkQuality: number }) {\n  let defaultQuality = 'unknown';\n  const val = Math.max(evt.downlinkNetworkQuality, evt.uplinkNetworkQuality);\n  return level[val] ? level[val] : defaultQuality;\n}\n\nexport function CustomBtoa(input: any) {\n  let keyStr =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n  let output = \"\";\n  let chr1, chr2, chr3, enc1, enc2, enc3, enc4;\n  let i = 0;\n\n  while (i < input.length) {\n    chr1 = input[i++];\n    chr2 = i < input.length ? input[i++] : Number.NaN; // Not sure if the index\n    chr3 = i < input.length ? input[i++] : Number.NaN; // checks are needed here\n\n    enc1 = chr1 >> 2;\n    enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n    enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n    enc4 = chr3 & 63;\n\n    if (isNaN(chr2)) {\n      enc3 = enc4 = 64;\n    } else if (isNaN(chr3)) {\n      enc4 = 64;\n    }\n    output +=\n      keyStr.charAt(enc1) +\n      keyStr.charAt(enc2) +\n      keyStr.charAt(enc3) +\n      keyStr.charAt(enc4);\n  }\n  return output;\n}","import {IAgoraRtcEngine} from './types/agora_sdk'\nimport { EventEmitter } from 'events';\nimport { wait } from '../utils';\nimport { IAgoraRTCModule, CameraOption, StartScreenShareParams, MicrophoneOption } from '../interfaces';\nimport { CustomBtoa } from '@/utils/helper';\nimport { EduLogger } from '../../logger';\n\ninterface IElectronRTCWrapper extends IAgoraRTCModule {\n  client: IAgoraRtcEngine\n}\n\ninterface ScreenShareOption {\n  profile: number,\n  windowId: number,\n  joinInfo?: string,\n  appId: string,\n  uid: number,\n  channel: string,\n  token: string,\n  rect: {\n    x: number,\n    y: number,\n    width: number,\n    height: number,\n  },\n  param: {\n    width: number,\n    height: number,\n    bitrate: number,\n    frameRate: number\n  }\n}\n\nexport interface ElectronWrapperInitOption {\n  logPath: string\n  videoSourceLogPath: string\n  AgoraRtcEngine: any\n  appId: string\n}\n\nexport class AgoraElectronRTCWrapper extends EventEmitter implements IElectronRTCWrapper {\n  client!: IAgoraRtcEngine;\n  logPath: string;\n  videoSourceLogPath: string;\n\n  role: number\n  joined: boolean\n\n  videoMuted: boolean\n  audioMuted: boolean\n\n  localUid?: number\n  appId: string\n\n  subscribedList: number[] = []\n\n  cameraList: any[] = []\n  microphoneList: any[] = []\n\n  get deviceList(): any[] {\n    return this.cameraList.concat(this.microphoneList)\n  }\n\n  constructor(options: ElectronWrapperInitOption) {\n    super();\n    this.logPath = options.logPath\n    this.videoSourceLogPath = options.videoSourceLogPath\n    console.log(`[electron-log], logPath: ${this.logPath}, videoSourceLogPath: ${this.videoSourceLogPath}, appId: ${options.appId}`)\n    this.role = 2\n    this.joined = false\n    this.videoMuted = false\n    this.audioMuted = false\n    this.localUid = 0\n    this.appId = options.appId\n    this.subscribedList = []\n    //@ts-ignore\n    this.client = options.AgoraRtcEngine\n    let ret = this.client.initialize(this.appId)\n    if (ret < 0) {\n      throw {\n        message: `AgoraRtcEngine initialize with APPID: ${this.appId} failured`,\n        code: ret\n      }\n    }\n    this.client.setChannelProfile(1)\n    this.client.enableVideo()\n    this.client.enableAudio()\n    this.client.enableWebSdkInteroperability(true)\n    this.client.enableAudioVolumeIndication(1000, 3, true)\n    this.client.setVideoProfile(43, false);\n    this.client.setClientRole(2)\n    if (this.logPath) {\n      console.log(`[electron-log-path] set logPath: ${this.logPath}`)\n      this.client.setLogFile(this.logPath)\n    }\n    this.init()\n  }\n\n  public setAddonLogPath(payload: {logPath: string, videoSourceLogPath: string}) {\n    this.logPath = payload.logPath\n    this.videoSourceLogPath = payload.videoSourceLogPath\n  }\n\n  public enableLogPersist() {\n    if (this.logPath) {\n      console.log(`[electron-log-path] set logPath: ${this.logPath}`)\n      this.client.setLogFile(this.logPath)\n      //@ts-ignore\n      window.setNodeAddonLogPath = this.logPath\n    }\n  }\n  \n  changePlaybackVolume(volume: number): void {\n    let decibel = +((volume / 100) * 255).toFixed(0)\n    let ret = this.client.setAudioPlaybackVolume(decibel)\n    EduLogger.info(\"setAudioPlaybackVolume ret\", ret)\n  }\n\n  async muteLocalVideo(val: boolean): Promise<any> {\n    // let ret = this.client.muteLocalVideoStream(val)\n    this.client.enableLocalVideo(!val)\n    // EduLogger.info(\"muteLocalVideo ret\", ret)\n  }\n\n  async muteLocalAudio(val: boolean): Promise<any> {\n    let ret = this.client.muteLocalAudioStream(val)\n    this.client.enableLocalAudio(!val)\n    EduLogger.info(\"muteLocalAudio ret\", ret)\n  }\n  \n  async muteRemoteVideo(uid: any, val: boolean): Promise<any> {\n    let ret = this.client.muteRemoteVideoStream(uid, val)\n    EduLogger.info(\"muteRemoteVideoStream ret\", ret)\n  }\n\n  async muteRemoteAudio(uid: any, val: boolean): Promise<any> {\n    let ret = this.client.muteRemoteAudioStream(uid, val)\n    EduLogger.info(\"muteRemoteAudioStream ret\", ret)\n  }\n\n  reset () {\n    this.role = 2\n    this.joined = false\n    this.videoMuted = false\n    this.audioMuted = false\n    this.localUid = undefined\n    this.subscribedList = []\n  }\n\n  private fire(...eventArgs: any[]) {\n    const [eventName, ...args] = eventArgs\n    // EduLogger.info(eventName, ...args)\n    this.emit(eventName, ...args)\n  }\n\n  init() {\n    this.client.on('error', (err: any) => {\n      this.fire('exception', err)\n    })\n    this.client.on('groupAudioVolumeIndication', (speakers: any[], speakerNumber: number, totalVolume: number) => {\n      this.fire('volume-indication', {\n        speakers, speakerNumber, totalVolume\n      })\n    })\n    // this.client.on('audio-device-changed', (deviceId: string, deviceType: number, deviceState: number) => {\n    //   this.fire('audio-device-changed', {\n    //     deviceId,\n    //     deviceState,\n    //     deviceType\n    //   })\n    // })\n    // this.client.on('video-device-changed', (deviceId: string, deviceType: number, deviceState: number) => {\n    //   this.fire('video-device-changed', {\n    //     deviceId,\n    //     deviceState,\n    //     deviceType\n    //   })\n    // })\n    this.client.on('userjoined', (uid: number, elapsed: number) => {\n      EduLogger.info(\"userjoined\", uid)\n      this.fire('user-published', {\n        user: {\n          uid,\n        }\n      })\n    })\n    //or event removeStream\n    this.client.on('removestream', (uid: number, elapsed: number) => {\n      EduLogger.info(\"removestream\", uid)\n      this.fire('user-unpublished', {\n        user: {\n          uid\n        },\n      })\n    })\n    this.client.on('connectionStateChanged', (state: any, reason: any) => {\n      this.fire('connection-state-change', {\n        curState: state,\n        reason\n      })\n    })\n    this.client.on('networkquality', (...args: any[]) => {\n      console.log(\"network-quality, uid: \", args[0], \" downlinkNetworkQuality: \", args[1], \" uplinkNetworkQuality \", args[2])\n      this.fire('network-quality', {\n        downlinkNetworkQuality: args[1],\n        uplinkNetworkQuality: args[2]\n      })\n    })\n    this.client.on('remoteVideoStateChanged', (uid: number, state: number, reason: any) => {\n      console.log('remoteVideoStateChanged ', reason, uid)\n      if (reason === 5) {\n        this.fire('user-unpublished', {\n          user: {\n            uid,\n          },\n          mediaType: 'video',\n        })\n      }\n\n      if (reason === 6) {\n        this.fire('user-published', {\n          user: {\n            uid,\n          },\n          mediaType: 'video',\n        })\n      }\n    })\n    this.client.on('remoteAudioStateChanged', (uid: number, state: number, reason: any) => {\n      console.log('remoteAudioStateChanged ', reason, uid)\n\n      // remote user disable audio\n      if (reason === 5) {\n        this.fire('user-unpublished', {\n          user: {\n            uid,\n          },\n          mediaType: 'audio',\n        })\n      }\n\n      if (reason === 6) {\n        EduLogger.info('user-published audio', uid)\n        // this.fire('user-published', {\n        //   user: {\n        //     uid,\n        //   },\n        //   mediaType: 'audio',\n        // })\n      }\n      // this.fire('user-info-updated', {\n      //   uid,\n      //   msg: reason,\n      //   type: 'audio',\n      //   state\n      // })\n    })\n    this.client.on('joinedchannel', (channel: string, uid: number) => {\n      EduLogger.info('joinedchannel', uid)\n    })\n    this.client.on('localVideoStateChanged', (state: number, error: number) => {\n      this.fire('user-info-updated', {\n        uid: this.localUid,\n        state,\n        type: 'video',\n        msg: error\n      })\n    })\n    this.client.on('localAudioStateChanged', (state: number, error: number) => {\n      this.fire('user-info-updated', {\n        uid: this.localUid,\n        state,\n        type: 'audio',\n        msg: error\n      })\n    })\n    this.client.on('tokenPrivilegeWillExpire', () => {\n      this.fire('token-privilege-will-expire')\n    })\n    this.client.on('tokenPrivilegeDidExpire', () => {\n      this.fire('token-privilege-did-expire')\n    })\n    this.client.on('localPublishFallbackToAudioOnly', (isFallbackOrRecover: any) => {\n      this.fire('stream-fallback', {\n        uid: this.localUid,\n        isFallbackOrRecover\n      })\n    })\n    this.client.on('remoteSubscribeFallbackToAudioOnly', (uid: any, isFallbackOrRecover: boolean) => {\n      this.fire('stream-fallback', {\n        uid,\n        isFallbackOrRecover\n      })\n    })\n    this.client.on('rtcStats', (evt: any) => {\n      this.fire('rtcStats', evt)\n    })\n  }\n\n  async join(option: any): Promise<any> {\n    try {\n      let ret = this.client.joinChannel(option.token, option.channel, option.info, option.uid)\n      EduLogger.info(\"electron joinChannel \", ret)\n      if (ret < 0) {\n        throw {\n          message: `joinChannel failure`,\n          code: ret\n        }\n      }\n      this.joined = true;\n      return\n    } catch(err) {\n      throw err\n    }\n  }\n\n  async leave(): Promise<any> {\n    try {\n      let ret = this.client.setClientRole(2)\n      if (ret < 0) {\n        throw {\n          message: `setClientRole failure`,\n          code: ret\n        }\n      }\n      ret = this.client.leaveChannel()\n      if (ret < 0) {\n        throw {\n          message: `leaveChannel failure`,\n          code: ret\n        }\n      }\n      return\n    } catch(err) {\n      throw err\n    }\n  }\n\n  release() {\n    let ret = this.client.release()\n    if (ret < 0) {\n      throw {\n        message: 'release failure',\n        code: ret\n      }\n    }\n    this.reset()\n  }\n\n  async openCamera(option?: CameraOption): Promise<any> {\n    try {\n      let ret = this.client.enableLocalVideo(true)\n      if (ret < 0) {\n        throw {\n          message: `enableLocalVideo failure`,\n          code: ret\n        }\n      }\n      if (option) {\n        option.deviceId && this.client.setVideoDevice(option.deviceId)\n        option.encoderConfig && this.client.setVideoEncoderConfiguration(option.encoderConfig)\n      }\n      if (this.joined) {\n        ret = this.client.muteLocalVideoStream(false)\n        EduLogger.info(\"living muteLocalVideoStream, ret: \", ret)\n        this.videoMuted = false\n      }\n    } catch (err) {\n      throw err\n    }\n  }\n\n  closeCamera() {\n    try {\n      let ret = this.client.enableLocalVideo(false)\n      if (ret < 0) {\n        throw {\n          message: `enableLocalVideo failure`,\n          code: ret\n        }\n      }\n      EduLogger.info(\"electron: closeCamera\")\n      if (this.joined) {\n        ret = this.client.muteLocalVideoStream(true)\n        this.videoMuted = true\n        if (ret < 0) {\n          throw {\n            message: `enableLocalVideo failure`,\n            code: ret\n          }\n        }\n        EduLogger.info(\"electron: muteCamera\")\n      }\n    } catch (err) {\n      throw err\n    }\n  }\n\n  async changeCamera(deviceId: string): Promise<any> {\n    try {\n      let ret = this.client.setVideoDevice(deviceId)\n      if (ret < 0) {\n        throw {\n          message: 'changeCamera failure',\n          code: ret\n        }\n      }\n    } catch (err) {\n      throw err;\n    }\n  }\n\n\n  async getMicrophones (): Promise<any[]> {\n    const list = this.client.getAudioRecordingDevices();\n    const genList: any[] = list.map((it: any) => ({\n      deviceId: it.deviceid,\n      label: it.devicename,\n      kind: 'audioinput'\n    }))\n    this.microphoneList = genList\n    return genList\n  }\n\n  async getCameras(): Promise<any[]> {\n    const list = this.client.getVideoDevices()\n    const genList: any[] = list.map((it: any) => ({\n      deviceId: it.deviceid,\n      label: it.devicename,\n      kind: 'videoinput'\n    }))\n    this.cameraList = genList\n    return genList\n  }\n\n  async changeResolution(config: any): Promise<any> {\n    EduLogger.warn('changeResolution need implement', config)\n    // try {\n    //   let ret = this.client.setVideoEncoderConfiguration({\n    //     height: \n    //   })\n    //   if (ret < 0) {\n    //     throw {\n    //       message: 'changeCamera failure',\n    //       code: ret\n    //     }\n    //   }\n    // } catch (err) {\n    //   throw err;\n    // }\n  }\n\n  async openMicrophone(option?: MicrophoneOption): Promise<any> {\n    try {\n      let ret = this.client.enableLocalAudio(true)\n      if (ret < 0) {\n        throw {\n          message: `enableLocalAudio failure`,\n          code: ret\n        }\n      }\n      if (option) {\n        option.deviceId && this.client.setAudioRecordingDevice(option.deviceId)\n      }\n      if (this.joined) {\n        ret = this.client.muteLocalAudioStream(false)\n        this.audioMuted = false\n        EduLogger.info(\"living muteLocalAudioStream, ret: \", ret)\n      }\n    } catch (err) {\n      throw err\n    }\n  }\n\n  closeMicrophone() {\n    try {\n      let ret = this.client.enableLocalAudio(false)\n      if (ret < 0) {\n        throw {\n          message: `enableLocalAudio failure`,\n          code: ret\n        }\n      }\n      this.client.stopAudioRecordingDeviceTest()\n      if (this.joined) {\n        ret = this.client.muteLocalAudioStream(true)\n        this.audioMuted = true\n      }\n    } catch (err) {\n      throw err\n    }\n  }\n\n  async changeMicrophone(deviceId: string): Promise<any> {\n    try {\n      let ret = this.client.setAudioRecordingDevice(deviceId)\n      if (ret < 0) {\n        throw {\n          message: 'setAudioRecordingDevice failure',\n          code: ret\n        }\n      }\n    } catch (err) {\n      throw err\n    }\n  }\n\n  async prepareScreenShare(): Promise<any> {\n    try {\n      let items = this.client.getScreenWindowsInfo()\n      const noImageSize =items.filter((it: any) => !it.image).length\n      if (noImageSize) {\n        throw {code: 'ELECTRON_PERMISSION_DENIED'}\n      }\n      return items.map((it: any) => ({\n        ownerName: it.ownerName,\n        name: it.name,\n        windowId: it.windowId,\n        image: CustomBtoa(it.image),\n      }))\n    } catch (err) {\n      throw err\n    }\n  }\n\n  async startScreenShare(options: StartScreenShareParams): Promise<any> {\n    const startScreenPromise = new Promise((resolve, reject) => {\n      const config = options.config || {\n        profile: 50,\n        rect: {x: 0, y: 0, width: 0, height: 0},\n        param: {\n          width: 0, height: 0, bitrate: 500, frameRate: 15\n        }\n      }\n      EduLogger.info('startScreenShare#options', options)\n      try {\n        let ret = this.client.videoSourceInitialize(this.appId)\n        if (ret < 0) {\n          reject({\n            message: `videoSourceInitialize with APPID: ${this.appId} failured`,\n            code: ret\n          })\n        }\n        this.client.videoSourceSetChannelProfile(1)\n        this.client.videoSourceEnableWebSdkInteroperability(true)\n        this.client.videoSourceSetVideoProfile(config && config.profile ? config.profile : 50, false)\n        console.log(`[electron-log-path] checkout videoSourceLogPath: ${this.videoSourceLogPath}`)\n        if (this.videoSourceLogPath) {\n          this.client.videoSourceSetLogFile(this.videoSourceLogPath)\n          //@ts-ignore\n          window.setNodeAddonVideoSourceLogPath = this.videoSourceLogPath\n          console.log(`[electron-log-path] set videoSourceLogPath: ${this.videoSourceLogPath}`)\n        }\n        const handleVideoSourceJoin = (uid: number) => {\n          this.client.off('videoSourceJoinedSuccess', handleVideoSourceJoin)\n          EduLogger.info(\"startScreenShare#options uid, \", uid, \"  options\", options)\n          this.client.videoSourceStartScreenCaptureByWindow(options.windowId as number, config.rect, config.param)\n          this.client.startScreenCapturePreview()\n          resolve(uid)\n        }\n        this.client.on('videoSourceJoinedSuccess', handleVideoSourceJoin)\n        const params = options.params\n        ret = this.client.videoSourceJoin(params.token, params.channel, params.joinInfo ? params.joinInfo : '', params.uid)\n        EduLogger.info(\"videoSourceJoin ret\", ret, params)\n        if (ret < 0) {\n          this.client.off('videoSourceJoinedSuccess', handleVideoSourceJoin)\n          reject({\n            message: 'videoSourceJoin failure',\n            code: ret\n          })\n        }\n      } catch (err) {\n        this.client.off('videoSourceJoinedSuccess', () => {})\n        reject(err)\n      }\n    })\n\n    return await Promise.race([startScreenPromise, wait(8000)])\n  }\n\n  async stopScreenShare(): Promise<any> {\n    const stopScreenSharePromise = new Promise((resolve, reject) => {\n      const handleVideoSourceLeaveChannel = (evt: any) => {\n        this.client.off('videoSourceLeaveChannel', handleVideoSourceLeaveChannel)\n        setTimeout(resolve, 1)\n      }\n      try {\n        this.client.on('videoSourceLeaveChannel', handleVideoSourceLeaveChannel)\n        let ret = this.client.videoSourceLeave()\n        EduLogger.info(\"stopScreenShare leaveChannel\", ret)\n        wait(8000).catch((err: any) => {\n          this.client.off('videoSourceLeaveChannel', handleVideoSourceLeaveChannel)\n          reject(err)\n        })\n      } catch(err) {\n        this.client.off('videoSourceLeaveChannel', handleVideoSourceLeaveChannel)\n        reject(err)\n      }\n    })\n\n    try {\n      await stopScreenSharePromise\n    } catch(err) {\n      throw err\n    }\n  }\n\n  async publish(): Promise<any> {\n    EduLogger.info('Raw Message: media-service#publish, prepare')\n    if (this.joined) {\n      EduLogger.info('Raw Message: media-service#publish, publish')\n      this.client.setClientRole(1)\n    } else {\n      EduLogger.info(\"before invoke publish, please join channel first\")\n    }\n  }\n\n  async unpublish(): Promise<any> {\n    if (this.joined) {\n      this.client.setClientRole(2)\n    } else {\n      EduLogger.info(\"before invoke unpublish, please join channel first\")\n    }\n  }\n\n  async openTestCamera(option?: CameraOption): Promise<any> {\n    if (this.joined) {\n      throw 'electron not support openTestCamera'\n    }\n    await this.openCamera(option)\n  }\n  \n  closeTestCamera() {\n    if (this.joined) {\n      throw 'electron not support closeTestCamera'\n    }\n    this.closeCamera()\n  }\n  \n  async changeTestCamera(deviceId: string): Promise<any> {\n    if (this.joined) {\n      throw 'electron not support changeTestCamera'\n    }\n    await this.changeCamera(deviceId)\n  }\n  \n  async openTestMicrophone(option?: MicrophoneOption): Promise<any> {\n    if (this.joined) {\n      throw 'electron not support openTestMicrophone'\n    }\n    await this.openMicrophone(option)\n    this.client.startAudioRecordingDeviceTest(300)\n  }\n  \n  async changeTestResolution(config: any): Promise<any> {\n    if (this.joined) {\n      throw 'electron not support changeTestResolution'\n    }\n    await this.changeResolution(config)\n  }\n  \n  closeTestMicrophone() {\n    if (this.joined) {\n      throw 'electron not support closeTestMicrophone'\n    }\n    this.closeMicrophone()\n  }\n  \n  async changeTestMicrophone(deviceId: string): Promise<any> {\n    if (this.joined) {\n      throw 'electron not support changeTestMicrophone'\n    }\n    await this.changeMicrophone(deviceId)\n  }\n}","import { AgoraEduApi } from '../core/services/edu-api';\nimport { IAgoraRTC } from 'agora-rtc-sdk-ng';\nimport { EnumOnlineState } from '../core/services/interface';\nimport { isEmpty } from 'lodash';\n\nexport enum EduClassroomStateType {\n  EduClassroomStateTypeAllStudentsChat = 0,\n  EduClassroomStateTypeCourseState = 1,\n  EduClassroomStateTypeRoomAttrs = 2,\n};\n\nexport enum EduStreamAction {\n  add = 1,\n  modify = 2,\n  remove = 3\n}\n\nexport interface EduRoomAttrs {\n  [key: string]: any\n}\n\nexport enum EduChannelMessageCmdType {\n  courseState = 1,\n  roomMediaState = 2,\n  roomChatState = 3,\n  roomPropertiesStateChanged = 4,\n  userListChanged = 20,\n  userStateUpdated = 21,\n  streamListChanged = 40,\n  boardState = 60,\n  boardUserState = 61,\n  customMessage = 99,\n}\n\nexport enum EduPeerMessageCmdType {\n  peer = 1,\n  roomInfo = 2,\n  userStream = 3,\n  customMessage = 99\n}\n\nexport enum EduRoleTypeEnum {\n  teacher = 1,\n  student = 2,\n  assistant = 3,\n}\n\nexport enum EduRoleType {\n  teacher = 'host',\n  audience = 'audience',\n  student = 'broadcaster'\n}\n\nexport enum EduAudioSourceType {\n  none = 0,\n  mic = 1,\n}\n\nexport enum EduVideoSourceType {\n  none = 0,\n  camera = 1,\n  screen = 2\n}\n\nexport enum ConnectionState {\n\n}\n\nexport enum NetworkQuality {\n\n}\n\nexport enum ConnectionChangeReason {\n\n}\n\n\nexport enum LogLevel {\n\n}\n\nexport interface EduConfiguration {\n  appId: string;\n  customerId: string;\n  customerCertificate: string;\n  platform: 'web' | 'electron';\n  agoraRtc?: IAgoraRTC;\n  agoraRtm?: any;\n  agoraElectron?: any;\n  logLevel: LogLevel;\n  logDirectoryPath: string;\n  codec?: string\n}\n\nexport interface EduClassroomConfiguration extends EduConfiguration {\n  authorization: string\n}\n\nexport interface EduClassroomManagerInit {\n  apiService: AgoraEduApi\n  config: EduClassroomConfiguration\n}\n\nexport enum EduSceneType {\n  Scene1v1 = 0,\n  SceneSmall = 1,\n  SceneLarge = 2\n}\n\nexport interface EduClassroomParams {\n  userName: string\n  userUuid: string\n  roomName: string\n  roomUuid: string\n  role: EduRoleType\n}\n\nexport interface EduClassroomJoinOptions {\n  userName: string\n  userUuid: string\n  // mediaOptions: EduClassroomMediaOptions\n}\n\nexport enum EduClassroomType {\n  EduClassroomType1V1 = 0,\n  EduClassroomTypeSmall = 1,\n  EduClassroomTypeBig = 2,\n}\n\nexport interface InitClassroomManagerConfig {\n  roomName: string\n  roomUuid: string\n  streamUuid: string\n  classType: EduClassroomType\n  limit?: {\n    teacherLimit: number\n    studentHostLimit: number\n    studentAudienceLimit: number\n  }\n  // roleConfig: {\n  //   admin: {\n  //     limit: number\n  //     verifyType: number\n  //   }\n  // }\n}\n\nexport interface EduClassroomMediaOptions {\n  autoSubscribeVideo: boolean;\n  autoSubscribeAudio: boolean;\n  autoPublishCamera: boolean;\n  autoPublishMicrophone: boolean;\n}\n\nexport interface EduClassroomJoinOptions {\n  userName: string;\n  userUuid: string;\n  roomUuid: string;\n  sceneType?: EduSceneType;\n  autoPublish: boolean;\n  streamUuid?: string;\n  // mediaOptions: EduClassroomMediaOptions;\n}\n\nexport interface EduClassroomSubscribeOption {\n  autoSubscribeVideo: boolean\n  autoSubscribeAudio: boolean\n}\n\nexport interface ClassroomStateParams {\n  courseState: number\n  muteAllChat: number\n  muteAllVideo: number\n  muteAllAudio: number\n}\n\nexport interface UserQueryParams {\n  nextId?: string\n  count: number\n  updateTimeOffset?: number\n  includeOffline?: number\n}\n\nexport interface StreamQueryParams {\n  nextId?: string\n  count: number\n  updateTimeOffset?: number\n  includeOffline?: number\n}\n\nexport interface AgoraFetchParams {\n  url?: string\n  method: string\n  data?: any\n  token?: string\n  full_url?: string\n  type?: string\n}\n\nexport interface PeerMessageParams {\n  roomUuid: string\n  userId: string\n  msg: string\n}\n\nexport interface ChannelMessageParams {\n  msg: string\n  roomUuid: string\n}\n\nexport type EduClassroomInfo = {\n  roomUuid: string\n  roomName: string\n}\n\nexport interface InitEduRoomParams {\n  roomName: string\n  roomUuid: string\n  streamUuid: string\n  roleConfig: {\n    host: {\n      limit: number\n    },\n    broadcaster: {\n      limit: number\n    },\n    audience: {\n      limit: number\n    },\n    assistant: {\n      limit: number\n    }\n  }\n}\n\nexport type EduClassroomStatus = {\n  courseState: EduCourseState;\n  startTime: number;\n  isStudentChatAllowed: boolean;\n  onlineUsersCount: number;\n}\n\nexport interface EduClassroomAttrs {\n  roomInfo: EduClassroomInfo;\n  roomStatus: EduClassroomStatus;\n  roomProperties: Record<string, string>;\n  time: number;\n}\n\nexport interface EduClassroom {\n  roomInfo: EduClassroomInfo;\n  roomProperties: EduRoomAttrs;\n  roomStatus: EduClassroomStatus;\n}\n\nexport enum EduRenderMode {\n\n}\n\nexport interface EduRenderConfig {\n  renderMode: EduRenderMode;\n}\n\nexport interface EduVideoConfig {\n  resolution?: any;\n  fps?: string;\n}\n\nexport interface EduStreamConfig {\n  streamUuid: string;\n  streamName: string;\n  enableCamera: boolean;\n  sourceType: EduVideoSourceType;\n  enableMicrophone: boolean;\n  cameraDeviceId: string;\n  microphoneDeviceId: string;\n}\n\nexport interface EduSubscribeOptions {\n  \n}\nexport interface EduBoard {\n  isPublisher: boolean\n}\n\nexport interface EduBoardOperator {\n  user: EduUser\n  board: EduBoard\n}\n\nexport interface EduBoardRoomModel {\n  boardOperators: Array<EduBoardOperator>\n}\n\nexport interface EduReply {\n  appId: string\n  roomId: string\n  recordId: string\n}\n\nexport interface EduVideoEncoderConfiguration {\n  width: number\n  height: number\n  frameRate: number\n  bitrate: number\n}\n\nexport interface EduUserInfo {\n  userUuid: string\n  userName: string\n  role: string\n}\n\nexport interface EduCustomMessage {\n  fromUser: EduUserInfo\n  message: string\n  timestamp: number\n}\n\nexport interface EduTextMessage {\n  fromUser: EduUserInfo\n  message: string\n  type: number\n  timestamp: number\n}\n\nexport interface EduRenderConfig {\n  \n}\n\nexport enum EduCourseState {\n  EduCourseStatePending = 0,\n  EduCourseStateStart = 1,\n  EduCourseStateStop = 2\n}\n\nexport interface EduShareScreenConfig {\n  streamUuid: string;\n  streamName: string;\n}\n\nexport interface EduStreamParams {\n  streamUuid: string\n  userUuid: string\n  streamName: string\n  audioSourceType: EduAudioSourceType\n  videoSourceType: EduVideoSourceType\n  videoState: number\n  audioState: number\n}\n\n\nexport interface EduUser {\n  userUuid: string\n  userName: string\n  role: EduRoleType\n  isChatAllowed: boolean\n  userProperties: Record<any, any>\n}\n\nexport interface EduUserAttrs extends EduUser {\n  state?: EnumOnlineState\n  updateTime?: number\n  streamUuid?: string\n  rtcToken?: string\n  screenRtcToken?: string\n  rtmToken?: string\n}\n\nexport class EduUserData {\n\n  private _user?: EduUser\n\n  private _ts?: number\n\n  private _state?: number\n\n  private _streamUuid?: string\n\n  private _rtcToken?: string\n  private _screenRtcToken?: string\n\n  public _rtmToken?: string\n\n  get rtmToken(): string{\n    return this._rtmToken as string\n  }\n\n  constructor(data: EduUserAttrs) {\n    this.updateUser(data)\n    if (data.hasOwnProperty('rtcToken')) {\n      this._rtcToken = data.rtcToken as any\n    }\n    if (data.hasOwnProperty('screenRtcToken')) {\n      this._screenRtcToken = data.screenRtcToken as any\n    }\n    if (data.hasOwnProperty('rtmToken')) {\n      this._rtmToken = data.rtmToken as any\n    }\n  }\n\n  updateUser(args: Partial<EduUserAttrs>) {\n    const {updateTime, state, streamUuid, rtcToken, screenRtcToken, ...user} = args\n    // if (args.hasOwnProperty('user')) {\n    this._user = user as any;\n    // }\n    if (args.hasOwnProperty('updateTime')) {\n      this._ts = updateTime\n    }\n    if (args.hasOwnProperty('state')) {\n      this._state = state\n    }\n    if (args.hasOwnProperty('streamUuid')) {\n      this._streamUuid = streamUuid\n    }\n\n    if (rtcToken) {\n      this.setRtcToken(rtcToken)\n    }\n\n    if (screenRtcToken) {\n      this.setScreenRtcToken(screenRtcToken)\n    }\n  }\n\n  updateState(v: number) {\n    this._state = v\n  }\n\n  setRtcToken(v: string) {\n    this._rtcToken = v\n  }\n\n  setScreenRtcToken(v: string) {\n    this._screenRtcToken = v\n  }\n\n  get rtcToken(): string {\n    return this._rtcToken as string;\n  }\n\n  get screenRtcToken(): string {\n    return this._screenRtcToken as string;\n  }\n\n  get streamUuid(): string {\n    return this._streamUuid as string;\n  }\n\n  get user(): EduUser {\n    return this._user as EduUser\n  }\n\n  get ts(): number {\n    return this._ts as number;\n  }\n\n  get state(): number {\n    return this._state as number;\n  }\n\n  private _streamsMap: Record<any, any> = {}\n\n  get streams(): Record<any, any> {\n    return this._streamsMap;\n  }\n\n  updateStreamsMap(map: any) {\n    this._streamsMap = map\n  }\n\n  static fromArray(list: any[]): EduUserData[] {\n    return list.reduce((acc: EduUserData[], item: any) => {\n      acc.push(new EduUserData({\n        state: item.state,\n        updateTime: item.updateTime,\n        userUuid: item.userUuid,\n        userName: item.userName,\n        role: item.role,\n        userProperties: item.userProperties,\n        isChatAllowed: item.isChatAllowed,\n        streamUuid: item.streamUuid\n      }))\n      return acc;\n    }, []);\n  }\n\n  static combineLatest(list: any[]): EduUserData[] {\n    const array = this.fromArray(list)\n    return array.reduce((acc: EduUserData[], it: EduUserData) => {\n      const idx = acc.findIndex((t: EduUserData) => t.user.userUuid === it.user.userUuid)\n      if (idx !== -1) {\n        acc[idx] = it;\n      } else {\n        acc.push(it)\n      }\n      return acc\n    }, [])\n  }\n}\n\nexport interface EduStreamEvent {\n  modifiedStream: EduStream\n  operatorUser: EduUser\n}\n\nexport interface EduStream {\n  streamUuid: string;\n  streamName: string;\n  videoSourceType: number;\n  audioSourceType: number;\n  hasVideo: boolean;\n  hasAudio: boolean;\n  userInfo: {\n    userUuid: string\n    userName: string\n    role: EduRoleType\n  }\n}\n\nexport interface EduStreamAttrs extends EduStream {\n  updateTime?: number\n  state?: EnumOnlineState\n  token?: string\n}\n\nexport class EduStreamData {\n\n  private _stream?: EduStream\n\n  private _rtcToken?: string\n\n  private _ts?: number\n\n  private _state?: number\n\n  constructor(data: EduStreamAttrs) {\n    this.updateStream(data)\n  }\n\n  updateStreamUuid(uuid: string) {\n    if (this._stream) {\n      this._stream.streamUuid = uuid\n    }\n  }\n\n  updateMediaState(args: any) {\n    if (this._stream) {\n      if (args.hasOwnProperty('hasAudio')) {\n        this._stream.hasAudio = args['hasAudio']\n      }\n      if (args.hasOwnProperty('hasVideo')) {\n        this._stream.hasVideo = args['hasVideo']\n      }\n    }\n  }\n\n  updateStream(args: Partial<EduStreamAttrs>) {\n    const {updateTime, state, token, ...stream} = args\n    if (!this._stream) {\n      this._stream = stream as any\n    } else {\n      this._stream = {\n        ...this._stream,\n        ...stream\n      }\n    }\n    console.log(\"...stream\", this._stream)\n    if (args.hasOwnProperty('updateTime')) {\n      this._ts = updateTime\n    }\n    if (args.hasOwnProperty('state')) {\n      this._state = state\n    }\n    if (args.hasOwnProperty('token')) {\n      this._rtcToken = token\n    }\n  }\n\n  updateTime(time: number) {\n    this._ts = time\n  }\n\n  update(newData: EduStreamData) {\n    this.updateStream({\n      updateTime: newData.ts,\n      token: newData.token,\n      state: newData.state,\n      streamUuid: newData.stream.streamUuid,\n      streamName: newData.stream.streamName,\n      videoSourceType: newData.stream.videoSourceType,\n      audioSourceType: newData.stream.audioSourceType,\n      hasVideo: newData.stream.hasVideo,\n      hasAudio: newData.stream.hasAudio,\n      userInfo: newData.stream.userInfo\n    })\n  }\n\n  modifyStream(args: Partial<EduStreamAttrs>) {\n    const {updateTime, state, token, ...stream} = args\n    if (args.hasOwnProperty('updateTime')) {\n      this._ts = updateTime\n    }\n    if (args.hasOwnProperty('state')) {\n      this._state = state\n    }\n    if (args.hasOwnProperty('token')) {\n      this._rtcToken = token\n    }\n\n    if (!isEmpty(stream)) {\n      this._stream = {\n        ...this._stream as any,\n        ...stream\n      }\n    }\n  }\n\n  setRtcToken(token: string) {\n    this._rtcToken = token\n  }\n\n  get token() {\n    return this._rtcToken as string\n  }\n\n  get state(): number {\n    return this._state as number;\n  }\n\n  get stream(): EduStream {\n    return this._stream as EduStream\n  }\n\n  get ts(): number {\n    return this._ts as number;\n  }\n\n  static fromArray(list: any[]): EduStreamData[] {\n    return list.reduce((acc: EduStreamData[], item: any) => {\n      acc.push(new EduStreamData({\n        streamUuid: item.streamUuid,\n        streamName: item.streamName,\n        videoSourceType: item.videoSourceType,\n        audioSourceType: item.audioSourceType,\n        hasVideo: item.videoState,\n        hasAudio: item.audioState,\n        userInfo: item.userInfo,\n        // updateTime: item.updateTime,\n        state: item.state\n      }))\n      return acc;\n    }, []);\n  }\n\n  static combineLatest(list: any[]): EduStreamData[] {\n    const array = this.fromArray(list)\n    return array.reduce((acc: EduStreamData[], it: EduStreamData) => {\n      const idx = acc.findIndex((t: EduStreamData) => t.stream.streamUuid === it.stream.streamUuid)\n      if (idx !== -1) {\n        acc[idx] = it;\n      } else {\n        acc.push(it)\n      }\n      return acc\n    }, [])\n  }\n}\n\ndeclare function event_user_init_online(user: EduUser, count: number, fromClassroom: EduClassroom): void;\n\ndeclare function event_remote_user_joined (user: EduUser, count: number, fromClassroom: EduClassroom): void;\n\ndeclare function event_remote_user_left (user: EduUser, count: number, fromClassroom: EduClassroom): void;\n\ndeclare function event_update_classroom (reason: EduClassroomStateType, fromClassroom: EduClassroom): void;\n\ndeclare function event_user_message (textMessage: EduTextMessage, fromClassroom: EduClassroom): void;\n\ndeclare function event_room_message (textMessage: EduTextMessage, fromClassroom: EduClassroom): void;\n\ndeclare function event_connection_state_changed (state: ConnectionState, reason: ConnectionChangeReason, fromClassroom: EduClassroom): void;\n\ndeclare function event_network_quality(quality: NetworkQuality): void;\n\ndeclare function event_remote_stream_init_online(remoteStream: EduStream, count: number, fromClassroom: EduClassroom): void;\n\ndeclare function event_remote_stream_added(remoteStream: EduStream, count: number, fromClassroom: EduClassroom): void;\n\ndeclare function event_remote_stream_updated(remoteStream: EduStream, count: number, fromClassroom: EduClassroom): void;\n\ndeclare function event_remote_stream_removed(remoteStream: EduStream, count: number, fromClassroom: EduClassroom): void;\n\nexport interface IEduClassroomManager {\n\n  // emit once\n  once(event: 'user-init-online', listener: typeof event_user_init_online): void\n\n  on(event: 'remote-user-joined', listener: typeof event_remote_user_joined): void\n  on(event: 'remote-user-left', listener: typeof event_remote_user_left): void\n\n  // message\n  on(event: 'room-message', listener: typeof event_room_message): void\n  on(event: 'user-message', listener: typeof event_user_message): void\n\n  // stream\n  once(event: 'remote-stream-init-online', listener: typeof event_remote_stream_init_online): void\n\n  on(event: 'remote-stream-added', listener: typeof event_remote_stream_added): void\n  on(event: 'remote-stream-updated', listener: typeof event_remote_stream_updated): void\n  on(event: 'remote-stream-removed', listener: typeof event_remote_stream_removed): void\n\n  // class room\n  on(event: 'update-classroom', listener: typeof event_update_classroom): void\n\n  // state\n  on(event: 'network-quality', listener: typeof event_network_quality): void;\n  on(event: 'connection-state-change', listener: typeof event_connection_state_changed): void\n\n  getLocalUser(): EduUserData;\n  // getClassroomInfo(): EduClassroomInfo;\n  getStudentCount(): number;\n  getTeacherCount(): number;\n  getTeacherList(): EduUser[];\n  getStudentList(): EduUser[];\n  getFullUserList(): EduUser[];\n\n  getFullStreamList(): EduStream[];\n\n  joinClassroomAsTeacher(option: EduClassroomJoinOptions): Promise<void>;\n  joinClassroomAsStudent(option: EduClassroomJoinOptions): Promise<void>;\n\n  // joinClassroom(config: EduClassroomSubscribeOption): Promise<EduUserService>;\n  leaveClassroom(): Promise<any>\n}","import { AppStore } from '@/stores/app/index';\nimport { AgoraWebRtcWrapper } from '../../sdk/education/core/media-service/web/index';\nimport { MediaService } from '../../sdk/education/core/media-service/index';\nimport { IMicrophoneAudioTrack } from 'agora-rtc-sdk-ng';\nimport { observable, computed, action, runInAction } from 'mobx';\nimport { AgoraElectronRTCWrapper } from '@/sdk/education/core/media-service/electron';\nimport { StartScreenShareParams, PrepareScreenShareParams } from '@/sdk/education/core/media-service/interfaces';\nimport { LocalUserRenderer } from '@/sdk/education/core/media-service/renderer';\n\nexport class DeviceStore {\n\n  static resolutions: any[] = [\n    {\n      name: '480p',\n      value: '480p_1',\n    },\n    {\n      name: '720p',\n      value: '720p_1',\n    },\n    {\n      name: '1080p',\n      value: '1080p_1'\n    }\n  ]\n\n  @observable\n  settingVisible: boolean = false\n\n  @action \n  showSetting() {\n    this.settingVisible = true\n  }\n\n  @action \n  hideSetting() {\n    this.settingVisible = false\n  }\n\n  @observable\n  activeDeviceItem: string = 'video'\n\n  @action\n  setActiveItem(type: string) {\n    this.activeDeviceItem = type\n  }\n\n  @observable\n  cameraTestResult: string = 'default'\n  \n  @observable\n  microphoneTestResult: string = 'default'\n\n  @observable\n  speakerTestResult: string = 'default'\n\n  @action\n  setCameraTestResult(v: string) {\n    this.cameraTestResult = v\n  }\n\n  @action\n  setMicrophoneTestResult(v: string) {\n    this.microphoneTestResult = v\n  }\n\n  @action\n  setSpeakerTestResult(v: string) {\n    this.speakerTestResult = v\n  }\n\n  @observable\n  resolutionIdx: number = 0\n\n  @observable\n  deviceList: any[] = []\n\n  @observable\n  cameraLabel: string = '';\n\n  @observable\n  microphoneLabel: string = '';\n  _totalVolume: any;\n\n  @observable\n  _cameraId: string = '';\n\n  @observable\n  _microphoneId: string = '';\n\n  @computed\n  get cameraId(): string {\n    const defaultValue = ''\n    const idx = this.cameraList.findIndex((it: any) => it.label === this.cameraLabel)\n    if (this.cameraList[idx]) {\n      return this.cameraList[idx].deviceId\n    }\n    return defaultValue\n  }\n\n  @computed\n  get microphoneId(): string {\n    const defaultValue = ''\n    const idx = this.microphoneList.findIndex((it: any) => it.label === this.microphoneLabel)\n    if (this.microphoneList[idx]) {\n      return this.microphoneList[idx].deviceId\n    }\n    return defaultValue\n  }\n\n  @observable\n  resolution: string = '480p_1'\n\n  @computed\n  get playbackVolume(): number {\n    if (this._playbackVolume) {\n      return this._playbackVolume\n    }\n    return this.mediaService.getPlaybackVolume()\n  }\n\n  @observable\n  _playbackVolume: number = 0\n\n  @action\n  changePlaybackVolume(volume: number) {\n    this.mediaService.changePlaybackVolume(volume)\n    this._playbackVolume = volume\n  }\n\n  @observable\n  _cameraRenderer?: LocalUserRenderer = undefined;\n  @observable\n  _microphoneTrack?: IMicrophoneAudioTrack = undefined;\n  @observable\n  _screenVideoRenderer?: LocalUserRenderer = undefined;\n\n  @computed\n  get cameraRenderer(): LocalUserRenderer | undefined {\n    return this._cameraRenderer;\n  }\n\n  @observable\n  totalVolume: number = 0;\n\n  appStore: AppStore;\n\n  constructor(appStore: AppStore) {\n    this.appStore = appStore\n  }\n\n  @action\n  resetCameraTrack () {\n    this._cameraRenderer = undefined\n  }\n\n  @action\n  resetMicrophoneTrack () {\n    this._microphoneTrack = undefined\n  }\n\n  @action\n  reset() {\n    this.resolutionIdx = 0\n    this.totalVolume = 0\n    this.cameraLabel = ''\n    this.microphoneLabel = ''\n    this.web.reset()\n    this.resetCameraTrack()\n    this.resetMicrophoneTrack()\n    this.activeDeviceItem = 'video'\n    this.cameraTestResult = 'default'\n    this.microphoneTestResult = 'default'\n    this.speakerTestResult = 'default'\n  }\n\n  @observable\n  cameraList: any[] = []\n\n  @observable\n  microphoneList: any[] = []\n\n  init(option: {video?: boolean, audio?: boolean} = {video: true, audio: true}) {\n    if (option.video) {\n      this.mediaService.getCameras().then((list: any[]) => {\n        runInAction(() => {\n          this.cameraList = list\n        })\n      })\n    }\n    if (option.audio) {\n      this.mediaService.getMicrophones().then((list: any[]) => {\n        runInAction(() => {\n          this.microphoneList = list\n        })\n      })\n    }\n  }\n\n  get mediaService(): MediaService {\n    return this.appStore.eduManager.mediaService as MediaService;\n  }\n\n  get web(): AgoraWebRtcWrapper {\n    return (this.mediaService.sdkWrapper as AgoraWebRtcWrapper)\n  }\n\n  get isWeb(): boolean {\n    return this.mediaService.sdkWrapper instanceof AgoraWebRtcWrapper\n  }\n\n  get isElectron(): boolean {\n    return this.mediaService.sdkWrapper instanceof AgoraElectronRTCWrapper\n  }\n\n  @action\n  async openTestCamera() {\n    const deviceId = this._cameraId\n    await this.mediaService.openTestCamera({deviceId})\n    this._cameraRenderer = this.mediaService.cameraTestRenderer\n    this.cameraLabel = this.mediaService.getTestCameraLabel()\n    this._cameraId = this.cameraId\n  }\n\n  @action\n  closeTestCamera() {\n    this.mediaService.closeTestCamera()\n    this.resetCameraTrack()\n  }\n\n  @action\n  async changeTestCamera(deviceId: string) {\n    await this.mediaService.changeTestCamera(deviceId)\n    this.cameraLabel = this.mediaService.getTestCameraLabel()\n    this._cameraId = deviceId\n  }\n\n  @action\n  async openTestMicrophone() {\n    const deviceId = this._microphoneId\n    await this.mediaService.openTestMicrophone({deviceId})\n    if (this.isWeb) {\n      this._microphoneTrack = this.web.microphoneTrack\n    }\n    this.microphoneLabel = this.mediaService.getTestMicrophoneLabel()\n    this.mediaService.on('volume-indication', ({speakers, speakerNumber, totalVolume}: any) => {\n      runInAction(() => {\n        if (this.isElectron) {\n          this.totalVolume = Number((totalVolume / 255).toFixed(3))\n        } else {\n          this.totalVolume = totalVolume;\n        }\n      })\n    })\n    this._microphoneId = this.microphoneId\n  }\n\n  @action\n  closeTestMicrophone() {\n    this.mediaService.closeTestMicrophone()\n    this.resetMicrophoneTrack()\n    this.mediaService.off('volume-indication', ({speakers, speakerNumber, totalVolume}: any) => {\n    })\n  }\n\n  @action\n  async changeTestMicrophone(deviceId: string) {\n    await this.mediaService.changeTestMicrophone(deviceId)\n    this.microphoneLabel = this.mediaService.getTestMicrophoneLabel()\n    this._microphoneId = deviceId\n  }\n\n  @action\n  async changeTestResolution(resolution: any) {\n    await this.mediaService.changeTestResolution(resolution)\n    runInAction(() => {\n      this.resolution = resolution\n    })\n  }\n\n  @computed\n  get speakerLabel(): string {\n    if (this.appStore.uiStore.isElectron) {\n      return this.appStore.eduManager.mediaService.getSpeakerLabel()\n    }\n    return '默认'\n  }\n}","import { GlobalStorage } from '../../utils/custom-storage';\nimport { observable, action, computed } from 'mobx';\nimport { AppStore } from '.';\nimport { DialogMessage, DialogType } from '@/components/dialog';\n\nconst platform = process.env.REACT_APP_RUNTIME_PLATFORM as string;\n\ninterface NoticeMessage {\n  type: string\n  message: string\n}\n\n\nexport class UIStore {\n\n  static roomTypes: any[] = [\n    {\n      path: 'one-to-one',\n      text: 'home.1v1',\n      value: 0,\n    },\n    {\n      path: 'small-class',\n      text: 'home.mini_class',\n      value: 1,\n    },\n    {\n      path: 'big-class',\n      text: 'home.large_class',\n      value: 2,\n    }, \n  ]\n\n  static languages: any[] = [\n    {\n      text: '中文', name: 'zh-CN',\n    },\n    {\n      text: 'En', name: 'en'\n    }\n  ]\n\n\n  @observable\n  loading?: boolean = false;\n\n  @observable\n  boardLoading?: boolean = false;\n\n  @observable\n  uploading?: boolean = false;\n\n  @observable\n  converting?: boolean = false;\n\n  @observable\n  notice?: NoticeMessage\n\n  @observable\n  dialog?: DialogMessage\n\n  @observable\n  settingDialog: boolean = false\n\n  @observable\n  toastQueue: string[] = []\n\n  @action\n  addToast(message: string) {\n    this.toastQueue.push(message)\n  }\n\n  @action\n  removeToast(message: string) {\n    const idx = this.toastQueue.findIndex((it: any) => (it === message))\n    if (idx !== -1) {\n      this.toastQueue.splice(idx, 1)\n    }\n  }\n\n  @observable\n  autoplayToast: boolean = false\n\n  @action\n  showAutoplayNotification() {\n    this.autoplayToast = true\n  }\n\n  @action\n  removeAutoplayNotification() {\n    this.autoplayToast = false\n  }\n\n  appStore!: AppStore\n\n  constructor(appStore: AppStore) {\n    this.appStore = appStore\n  }\n\n  get platform(): string {\n    return platform;\n  }\n\n  get isElectron(): boolean {\n    return this.platform === 'electron'\n  }\n\n  get isWeb(): boolean {\n    return this.platform === 'web'\n  }\n\n  @action\n  reset () {\n    this.settingDialog = false\n    this.loading = false;\n    this.uploading = false;\n    this.boardLoading = false;\n    this.converting = false;\n    this.notice = undefined;\n    this.dialog = undefined;\n    this.toastQueue = []\n    this.autoplayToast = false\n    this.dialogs = []\n  }\n\n  @action\n  startLoading () {\n    this.loading = true;\n  }\n\n  @action\n  stopLoading() {\n    this.loading = false;\n  }\n\n  @action\n  startBoardLoading() {\n    this.loading = false;\n  }\n\n  @action\n  stopBoardLoading () {\n    this.loading = true;\n  }\n\n  @action\n  startConverting() {\n    this.converting = true\n  }\n  \n  @action\n  stopConverting() {\n    this.converting = false;\n  }\n\n  @action\n  startUploading() {\n    this.uploading = true\n  }\n  \n  @action\n  stopUploading() {\n    this.uploading = false\n  }\n\n  @action\n  showNotice (notice: NoticeMessage) {\n    this.notice = notice\n  }\n\n  @action\n  removeNotice () {\n    this.notice = undefined\n  }\n\n  @observable\n  dialogs: DialogType[] = []\n\n  @action\n  showDialog (dialog: DialogMessage) {\n    this.addDialog(dialog)\n  }\n\n  @action\n  addDialog (dialog: DialogMessage) {\n    this.dialogs.push({dialog, id: this.dialogs.length})\n  }\n\n  @action\n  removeDialog (id: number) {\n    const idx = this.dialogs.findIndex(it => it.id === id)\n    if (idx !== -1) {\n      this.dialogs.splice(idx, 1)\n    }\n  }\n\n  get ipc() {\n    //@ts-ignore\n    return window.ipc\n  }\n\n  windowMinimum() {\n    if (this.isElectron && this.ipc) {\n      this.ipc.send('minimum')\n    }\n  }\n\n  windowMaximum() {\n    if (this.isElectron && this.ipc) {\n      this.ipc.send('maximum')\n    }\n  }\n\n  windowClose() {\n    if (this.isElectron && this.ipc) {\n      this.ipc.send('close')\n    }\n  }\n\n  @observable\n  _language: string = GlobalStorage.getLanguage();\n\n  @computed\n  get language(): string {\n    return this._language;\n  }\n\n  @action\n  setLanguage(language: string) {\n    this._language = language\n    GlobalStorage.setLanguage(this._language)\n  }\n\n  hasDialog(type: string) {\n    return this.dialogs.find(it => it.dialog.type === type)\n  }\n\n  @observable\n  curSeqId: number = 0\n\n  @action\n  updateCurSeqId(v: number) {\n    this.curSeqId = v\n  }\n\n  @observable\n  lastSeqId: number = 0\n\n  updateLastSeqId(v: number) {\n    this.lastSeqId = v\n  }\n}","import { EduTextMessage, EduCustomMessage, EduStream, EduUser, EduStreamData, EduUserData } from './../../interfaces/index';\nimport { EventEmitter } from 'events';\nimport AgoraRTM from 'agora-rtm-sdk'\nimport { RtmLogLevel } from './constants';\nimport { get } from 'lodash';\nimport { EduLogger } from '../logger';\n\n// const logFilter = ENABLE_LOG ? AgoraRTM.LOG_FILTER_DEBUG : AgoraRTM.LOG_FILTER_OFF;\nconst logFilter = AgoraRTM.LOG_FILTER_OFF\n\nexport enum StepPhase {\n  isFinished = 1\n}\n\ninterface RTMWrapperInitConfig {\n  logLevel: typeof RtmLogLevel[0]\n  uploadLog: boolean\n  appId: string\n  channelName: string\n  uid: string\n  token: string\n}\n\nexport class RTMWrapper extends EventEmitter {\n\n  public localUid?: string\n\n  public logged?: boolean\n\n  public connectionState: string = \"DISCONNECTED\";\n\n  public prevConnectionState: string = '';\n\n  public channels: Record<string, any> = {}\n\n  public _client?: ReturnType<typeof AgoraRTM.createInstance>\n\n  public _streamList: EduStream[] = []\n  public _userList: EduUser[] = []\n\n  constructor(\n    public readonly agoraRtm: typeof AgoraRTM) {\n    super()\n    this.localUid = undefined\n    this.logged = false\n    this.connectionState = \"DISCONNECTED\"\n    this.prevConnectionState = \"\"\n    this.channels = {}\n    this._client = undefined\n    this._streamList = []\n    this._userList = []\n  }\n\n  get client(): ReturnType<typeof AgoraRTM.createInstance> {\n    return this._client as any;\n  }\n\n  private releaseChannels() {\n    for (let key of Object.keys(this.channels)) {\n      if (this.channels[key]) {\n        this.release(this.channels[key])\n      }\n      this.channels[key] = undefined\n    }\n  }\n\n  private releaseClient() {\n    this._client && this.release(this._client)\n  }\n\n  reset () {\n    this.localUid = undefined\n    this.logged = false\n    this.connectionState = \"DISCONNECTED\"\n    this.prevConnectionState = \"\"\n    this.releaseClient()\n    this.releaseChannels()\n    this.channels = {}\n    if (this.client) {\n      this.client.removeAllListeners()\n      console.log('[rtmWrapper] removeAllListeners')\n    }\n    this._client = undefined\n    this.removeAllListeners()\n    console.log('[rtmWrapper] self removeAllListeners')\n    this._streamList = []\n    this._userList = []\n  }\n\n  addStream(stream: EduStream) {\n    this._streamList.push(stream)\n  }\n\n  updateStream(stream: EduStream) {\n    const streamIndex = this._streamList.findIndex((t: EduStream) => t.streamUuid === stream.streamUuid)\n    const targetStream = this._streamList[streamIndex]\n    if (targetStream && targetStream) {\n      this._streamList[streamIndex]\n    }\n  }\n\n  resetDataList () {\n    this._streamList = []\n    this._userList = []\n  }\n\n  release(eventClient: any) {\n    eventClient.removeAllListeners()\n    console.log('[rtmWrapper]  eventClient removeAllListeners ')\n  }\n\n  async login(config: any) {\n    const client = this.agoraRtm.createInstance(config.appId, { enableLogUpload: config.uploadLog, logFilter: logFilter})\n    client.on('ConnectionStateChanged', (newState: string, reason: string) => {\n      this.prevConnectionState = this.connectionState\n      this.connectionState = newState\n      this.emit(\"ConnectionStateChanged\", {newState, reason});\n    });\n    client.on(\"MessageFromPeer\", (message: any, peerId: string, props: any) => {\n      this.emit(\"MessageFromPeer\", {message, peerId, props});\n    });\n    await client.login({\n      uid: config.userUuid,\n      token: config.rtmToken\n    })\n    this._client = client\n  }\n\n  async init(\n    config: RTMWrapperInitConfig,\n  ) {\n    const client = this.agoraRtm.createInstance(config.appId, { enableLogUpload: config.uploadLog, logFilter: logFilter})\n    let channel = null;\n    console.log('[rtm]  wrapper init')\n    try {\n      client.on('ConnectionStateChanged', (newState: string, reason: string) => {\n        console.log(\"[rtm] [Wrapper] ConnectionStateChanged\")\n        this.prevConnectionState = this.connectionState\n        this.connectionState = newState\n        this.emit(\"ConnectionStateChanged\", {newState, reason});\n      });\n      client.on(\"MessageFromPeer\", (message: any, peerId: string, props: any) => {\n        console.log(\"[rtm] [Wrapper] MessageFromPeer\")\n        this.emit(\"MessageFromPeer\", {message, peerId, props});\n      });\n      await client.login({uid: config.uid, token: config.token})\n      this._client = client\n      this.channels[config.channelName] = channel\n      this.logged = true\n    } catch(err) {\n      if (client) {\n        await client.logout()\n      }\n      this.reset()\n      throw err\n    }\n  }\n\n  public createObserverChannel(config: any): any[] {\n    const client = this.client\n    return [client.createChannel(config.channelName), new EventEmitter()]\n  }\n\n  private _channels: Record<string, any> = {}\n\n  public async join(channel: any, bus: any, config: any) {\n    try {\n      channel.on('ChannelMessage', (message: any, memberId: string, messagePros: any) => {\n        console.log(\"[rtm] ChannelMessage\", message)\n        bus\n        .emit('ChannelMessage', {\n          channelName: config.channelName,\n          message,\n          memberId,\n          messagePros,\n        })\n        // this.emit('ChannelMessage', {\n        //   channelName: config.channelName,\n        //   message,\n        //   memberId,\n        //   messagePros,\n        // })\n      })\n      channel.on('MemberJoined', (memberId: string) => {\n        bus\n        .emit('MemberJoined', {\n          channelName: config.channelName,\n          memberId,\n        })\n      })\n      channel.on('MemberLeft', (memberId: string) => {\n        bus.emit('MemberLeft', {\n          channelName: config.channelName,\n          memberId,\n        })\n      })\n      channel.on('MemberCountUpdated', (memberCount: number) => {\n        bus.emit('MemberCountUpdated', {\n          channelName: config.channelName,\n          memberCount: memberCount\n        })\n      })\n      await channel.join()\n      this.channels[config.channelName] = channel\n    } catch (err) {\n      throw err\n    }\n  }\n\n  public async leave(config: any) {\n    try {\n      const channel = this.channels[config.channelName]\n      if (channel) {\n        await channel.leave()\n        channel.removeAllListeners()\n        delete this.channels[config.channelName]\n      }\n    } catch (err) {\n      throw err\n    }\n  }\n\n  public async destroyRtm() {\n    if (this.client) {\n      await this.client.logout()\n    }\n    for (let channelName of Object.keys(this.channels)) {\n      if (this.channels[channelName]) {\n        this.channels[channelName].removeAllListeners()\n        console.log('[rtmWrapper]  removeAllListeners ', channelName)\n        this.channels[channelName] = undefined\n      }\n    }\n    this.reset()\n  }\n\n  async sendChannelMessage(channelName: string, message: any, options: any) {\n    const channel = this.channels[channelName]\n    await channel.sendMessage(message, {enableHistoricalMessaging: options.enableHistoricalMessaging})\n  }\n\n  async sendPeerMessage(peerId: string, message: any, options: any): Promise<boolean> {\n    let result = await this.client.sendMessageToPeer(message, peerId, {enableHistoricalMessaging: options.enableHistoricalMessaging})\n    return result.hasPeerReceived\n  }\n}\n\nexport { RtmLogLevel } from './constants';","import { get } from \"lodash\"\nimport { EduStreamData, EduCustomMessage, EduTextMessage, EduUserData } from \"../../interfaces\"\nimport { EduLogger } from \"../logger\"\n\nexport class MessageSerializer {\n\n  static readMessage(message: string) {\n    try {\n      return JSON.parse(message)\n    } catch (err) {\n      EduLogger.warn(err)\n      return null\n    }\n  }\n\n  static getStreamsFromUserList(data: any) {\n    console.log('getStreamsFromUserList#data', data)\n    const streamList: EduStreamData[] = []\n    return streamList\n  }\n\n  static getOperator(data: any) {\n    return {\n      userUuid: get(data, 'operator.userUuid'),\n      userName: get(data, 'operator.userName'),\n      role: get(data, 'operator.role'),\n    }\n  }\n  \n  static getFromUser(data: any) {\n    return {\n      userUuid: get(data, 'fromUser.userUuid') as string,\n      userName: get(data, 'fromUser.userName') as string,\n      role: get(data, 'fromUser.role') as any,\n    }\n  }\n  \n  static getEduCustomMessage(data: any): EduCustomMessage {\n    return {\n      fromUser: this.getFromUser(data),\n      message: get(data, 'message'),\n      timestamp: get(data, 'ts'),\n    }\n  }\n  \n  static getEduTextMessage(data: any): EduTextMessage {\n    return {\n      fromUser: this.getFromUser(data),\n      type: get(data, 'type'),\n      message: get(data, 'message'),\n      timestamp: get(data, 'ts'),\n    }\n  }\n  \n  static getRoomInfo(data: any): any {\n    return {\n      roomInfo: get(data, 'roomInfo'),\n      roomState: get(data, 'roomState')\n    }\n  }\n  \n  static getUserStream(data: any): any {\n    return {\n      step: get(data, 'step'),\n      count: get(data, 'count'),\n      total: get(data, 'total'),\n      nextId: get(data, 'nextId'),\n      nextTs: get(data, 'nextTs'),\n      isFinished: get(data, 'isFinished'),\n      list: get(data, 'list'),\n    }\n  }\n\n  static roomStatus(data: any) {\n    return {\n      courseState: data.state,\n      startTime: data.startTime,\n      isStudentChatAllowed: this.isStudentChatAllowed(data),\n      onlineUsersCount: this.onlineUsersCount(data)\n    }\n  }\n\n  static onlineUsersCount(data: any) {\n    return get(data.users, 'length', 0)\n  }\n  \n  static isStudentChatAllowed(data: any) {\n    const audience = get(data, 'muteChat.audience')\n    const broadcaster = get(data, 'muteChat.broadcaster')\n    if (audience || broadcaster) {\n      return false\n    }\n    return true\n  }\n\n  static getUsersStreams(data: any) {\n    console.log(\"[serializer] getUserStreams: \", data)\n    let eduStreams: EduStreamData[] = [];\n    const rawOnlineUsers = get(data, 'onlineUsers', [])\n      .reduce((acc: any, it: any) => {\n        acc.push({\n          userUuid: it.userUuid,\n          userName: it.userName,\n          role: it.role,\n          isChatAllowed: it.muteChat,\n          userProperties: it.userProperties,\n          streamUuid: it.streamUuid,\n          updateTime: it.updateTime,\n          state: it.state,\n        })\n\n        const rawStreams = get(it, 'streams', [])\n\n        const tmpStreams = rawStreams.map((stream: any) => ({\n          streamUuid: stream.streamUuid,\n          streamName: stream.streamName,\n          videoSourceType: stream.videoSourceType,\n          audioSourceType: stream.audioSourceType,\n          videoState: stream.videoState,\n          audioState: stream.audioState,\n          userInfo: {\n            userUuid: it.userUuid,\n            userName: it.userName,\n            role: it.role,\n          },\n          state: stream.state,\n        }))\n\n\n        eduStreams = eduStreams.concat(EduStreamData.fromArray(tmpStreams))\n        return acc\n      }, [])\n\n      const rawOfflineUsers = get(data, 'offlineUsers', [])\n      .reduce((acc: any, it: any) => {\n        acc.push({\n          userUuid: it.userUuid,\n          userName: it.userName,\n          role: it.role,\n          isChatAllowed: it.muteChat,\n          userProperties: it.userProperties,\n          streamUuid: it.streamUuid,\n          updateTime: it.updateTime,\n          state: it.state,\n        })\n\n        const rawStreams = get(it, 'streams', [])\n\n        const tmpStreams = rawStreams.map((stream: any) => ({\n          streamUuid: stream.streamUuid,\n          streamName: stream.streamName,\n          videoSourceType: stream.videoSourceType,\n          audioSourceType: stream.audioSourceType,\n          videoState: stream.videoState,\n          audioState: stream.audioState,\n          userInfo: {\n            userUuid: it.userUuid,\n            userName: it.userName,\n            role: it.role,\n          },\n          state: stream.state,\n        }))\n        eduStreams = eduStreams.concat(EduStreamData.fromArray(tmpStreams))\n        return acc\n      }, [])\n\n    const onlineUsers = EduUserData.fromArray(rawOnlineUsers)\n    const offlineUsers = EduUserData.fromArray(rawOfflineUsers)\n\n    const onlineStreams = eduStreams.filter((it: EduStreamData) => it.state !== 0)\n    const offlineStreams = eduStreams.filter((it: EduStreamData) => it.state === 0)\n\n    console.log(\"[EduUsersStreams] onlineUsers: \", onlineUsers)\n    console.log(\"[EduUsersStreams] offlineUsers: \", offlineUsers)\n\n    console.log(\"[EduUsersStreams] onlineStreams: \", onlineStreams)\n    console.log(\"[EduUsersStreams] offlineStreams: \", offlineStreams)\n    \n    return {\n      onlineUsers: onlineUsers,\n      onlineStreams: onlineStreams,\n      offlineUsers: offlineUsers,\n      offlineStreams: offlineStreams,\n    }\n  }\n  \n  static getUsers(data: any) {\n    const onlineUsers = EduUserData\n      .fromArray(\n        get(data, 'onlineUsers', []).map((it: any) => ({\n          userUuid: it.userUuid,\n          userName: it.userName,\n          role: it.role,\n          isChatAllowed: it.muteChat,\n          userProperties: it.userProperties,\n          streamUuid: it.streamUuid,\n          updateTime: it.updateTime,\n          state: it.state,\n        }))\n      )\n    const offlineUsers = EduUserData\n      .fromArray(\n        get(data, 'offlineUsers', []).map((it: any) => ({\n          userUuid: it.userUuid,\n          userName: it.userName,\n          state: it.state,\n          role: it.role,\n          isChatAllowed: it.muteChat,\n          userProperties: it.userProperties,\n          streamUuid: it.streamUuid,\n          updateTime: it.updateTime,\n        }))\n      )\n    return {\n      onlineUsers: onlineUsers,\n      offlineUsers: offlineUsers,\n    }\n  }\n  \n  static getChangedUser(data: any): EduUserData {\n    const attrs = {\n      userUuid: get(data, 'userUuid'),\n      userName: get(data, 'userName'),\n      role: get(data, 'role'),\n      updateTime: get(data, 'updateTime'),\n      state: get(data, 'state', 1),\n      isChatAllowed: get(data, 'muteChat'),\n      userProperties: get(data, 'userProperties'),\n      streamUuid: get(data, 'streamUuid'),\n    }\n    return new EduUserData(attrs)\n  }\n  \n  static getAction(data: any) {\n    return get(data, 'action')\n  }\n  \n  static getStreams(data: any): EduStreamData[] {\n    const eduStream = new EduStreamData({\n      streamUuid: get(data, 'streamUuid') as string,\n      streamName: get(data, 'streamName') as string,\n      videoSourceType: +get(data, 'videoSourceType', 0),\n      audioSourceType: +get(data, 'audioSourceType', 0),\n      hasVideo: !!get(data, 'videoState', 0),\n      hasAudio: !!get(data, 'audioState', 0),\n      updateTime: get(data, 'updateTime'),\n      state: get(data, 'state'),\n      userInfo: this.getFromUser(data)\n    })\n    return [eduStream]\n  }\n  \n  static getFollowMode(data: any) {\n    return +get(data, 'followMode') as number\n  }\n  \n  static getBoardUsersState(data: any) {\n    return data.reduce((acc: any, user: any) => {\n      if (user.userUuid) {\n        acc.push(user) \n      }\n      return acc\n    },[])\n  }\n}","import AgoraRTM from 'agora-rtm-sdk'\n\nexport const RtmLogLevel = [\n  AgoraRTM.LOG_FILTER_OFF,\n  AgoraRTM.LOG_FILTER_ERROR,\n  AgoraRTM.LOG_FILTER_INFO,\n  AgoraRTM.LOG_FILTER_WARNING,\n  //@ts-ignore\n  AgoraRTM.LOG_FILTER_DEBUG\n]","import { EduLogger } from './../logger';\nimport { LocalUserRenderer, RemoteUserRenderer } from './renderer/index';\nimport { EventEmitter } from 'events';\nimport { IMediaService, RTCWrapperProvider, RTCProviderInitParams, CameraOption, MicrophoneOption, PrepareScreenShareParams, StartScreenShareParams } from './interfaces';\nimport { AgoraElectronRTCWrapper } from './electron';\nimport { AgoraWebRtcWrapper } from './web';\nimport AgoraRTC, { ITrack, ILocalTrack } from 'agora-rtc-sdk-ng';\n\nenum ElectronFillMode {\n  fillContentMode = 0,\n  fitContentMode = 1\n}\n\ntype JoinOption = {\n  channel: string\n  token?: string | null\n  uid: number\n  info?: string\n}\n\nexport class MediaService extends EventEmitter implements IMediaService {\n  sdkWrapper!: RTCWrapperProvider;\n\n  cameraTestRenderer?: LocalUserRenderer;\n\n  cameraRenderer?: LocalUserRenderer;\n\n  microphoneTrack?: ILocalTrack;\n\n  screenRenderer?: LocalUserRenderer;\n\n  remoteUsersRenderer: RemoteUserRenderer[] = [];\n\n  screenShareIds: any[] = []\n\n  constructor(rtcProvider: RTCProviderInitParams) {\n    super();\n    EduLogger.info(`[rtcProvider] appId: ${rtcProvider.appId}, platform: ${rtcProvider.platform}`)\n    if (rtcProvider.platform === 'electron') {\n      const electronLogPath = rtcProvider.electronLogPath as any;\n      this.sdkWrapper = new AgoraElectronRTCWrapper({\n        logPath: electronLogPath.logPath,\n        videoSourceLogPath: electronLogPath.videoSourceLogPath,\n        AgoraRtcEngine: rtcProvider.agoraSdk,\n        appId: rtcProvider.appId,\n      })\n      //@ts-ignore\n      window.ipc && window.ipc.once(\"initialize\", (events: any, args: any) => {\n        const logPath = args[0]\n        const videoSourceLogPath = args[2];\n        //@ts-ignore\n        window.videoSourceLogPath = videoSourceLogPath;\n        //@ts-ignore\n        window.logPath = logPath\n        console.log(`[media-service] set logPath: ${logPath}, ${videoSourceLogPath}`)\n        this.electron.setAddonLogPath({logPath, videoSourceLogPath})\n        this.electron.enableLogPersist()\n      })\n    } else {\n      this.sdkWrapper = new AgoraWebRtcWrapper({\n        uploadLog: true,\n        agoraWebSdk: rtcProvider.agoraSdk,\n        webConfig: {\n          mode: 'live',\n          codec: rtcProvider.codec,\n          role: 'host',\n        },\n        appId: rtcProvider.appId\n      })\n    }\n    this.sdkWrapper.on('watch-rtt', (evt: any) => {\n      this.fire('watch-rtt', evt)\n    })\n    this.sdkWrapper.on('network-quality', (quality: any) => {\n      // console.log(\"[media-service] network quality >>>>>>>>>>>\", quality)\n      this.fire('network-quality', quality)\n    })\n    this.sdkWrapper.on('connection-state-change', (curState: any) => {\n      console.log(\"[media-service] connection-state-change >>>>>>>>>>>\", curState)\n      this.fire('connection-state-change', {curState})\n    })\n    this.sdkWrapper.on('volume-indication', ({totalVolume}: any) => {\n      this.fire('volume-indication', {totalVolume})\n    })\n    this.sdkWrapper.on('exception', (err: any) => {\n      this.fire('exception', err)\n    })\n    this.sdkWrapper.on('user-unpublished', (evt: any) => {\n      const user = evt.user\n      if (evt.mediaType === 'audio') return\n      EduLogger.debug(\"sdkwrapper user-unpublished\", user)\n      const userIndex = this.remoteUsersRenderer.findIndex((it: any) => it.uid === user.uid)\n      if (userIndex !== -1) {\n        const userRenderer = this.remoteUsersRenderer[userIndex]\n        this.remoteUsersRenderer.splice(userIndex, 1)\n        this.fire('user-unpublished', {\n          remoteUserRender: userRenderer\n        })\n      }\n    })\n    this.sdkWrapper.on('user-published', (evt: any) => {\n      const user = evt.user\n      EduLogger.debug(\"sdkwrapper user-published\", user)\n      const userIndex = this.remoteUsersRenderer.findIndex((it: any) => it.uid === user.uid)\n      if (userIndex === -1) {\n        this.remoteUsersRenderer.push(new RemoteUserRenderer({\n          context: this,\n          uid: +user.uid,\n          videoTrack: user.videoTrack,\n          sourceType: 'default',\n        }))\n      } else {\n        if (user.videoTrack) {\n          this.remoteUsersRenderer[userIndex].videoTrack = user.videoTrack\n        }\n      }\n      this.fire('user-published', {\n        remoteUserRender: this.remoteUsersRenderer[userIndex]\n      })\n    })\n    this.sdkWrapper.on('rtcStats', (evt: any) => {\n      this.fire('rtcStats', evt)\n    })\n    this.cameraRenderer = undefined\n    this.screenRenderer = undefined\n    this.remoteUsersRenderer = []\n    AgoraRTC.onCameraChanged = (info) => {\n      this.fire('video-device-changed', (info))\n    }\n    AgoraRTC.onMicrophoneChanged = (info) => {\n      this.fire('audio-device-changed', (info))\n    }\n    AgoraRTC.onAudioAutoplayFailed = () => {\n      this.fire('audio-autoplay-failed')\n    }\n  }\n\n  private fire(...params: any[]) {\n    const [message, ...args] = params\n    if (!['volume-indication', 'watch-rtt', 'network-quality'].includes(message)) {\n      EduLogger.info(args[0], args)\n    }\n    this.emit(message, ...args)\n  }\n\n  get isWeb (): boolean {\n    return this.sdkWrapper instanceof AgoraWebRtcWrapper\n  }\n\n  get isElectron (): boolean {\n    return this.sdkWrapper instanceof AgoraElectronRTCWrapper\n  }\n\n  getTestCameraLabel(): string {\n    const defaultLabel = '';\n    if (this.isWeb) {\n      if (this.web.cameraTestTrack) {\n        return this.web.cameraTestTrack.getTrackLabel()\n      }\n    }\n    if (this.isElectron) {\n      const deviceId = this.electron.client.getCurrentVideoDevice()\n      const videoDeviceList = this.electron.client.getVideoDevices()\n      const videoDevice: any = videoDeviceList.find((d: any) => d.deviceid === deviceId)\n      if (videoDevice) {\n        return videoDevice.devicename\n      }\n    }\n    return defaultLabel\n  }\n\n  getTestMicrophoneLabel(): string {\n    const defaultLabel = '';\n    if (this.isWeb) {\n      if (this.web.microphoneTestTrack) {\n        return this.web.microphoneTestTrack.getTrackLabel()\n      }\n    }\n    if (this.isElectron) {\n      const deviceId = this.electron.client.getCurrentAudioRecordingDevice()\n      const audioDeviceList = this.electron.client.getAudioRecordingDevices()\n      const audioDevice: any = audioDeviceList.find((d: any) => d.deviceid === deviceId)\n      if (audioDevice) {\n        return audioDevice.devicename\n      }\n    }\n    return defaultLabel\n  }\n\n  getCameraLabel(): string {\n    const defaultLabel = '';\n    if (this.isWeb) {\n      if (this.web.cameraTrack) {\n        return this.web.cameraTrack.getTrackLabel()\n      }\n    }\n    if (this.isElectron) {\n      const deviceId = this.electron.client.getCurrentVideoDevice()\n      const videoDeviceList = this.electron.client.getVideoDevices()\n      const videoDevice: any = videoDeviceList.find((d: any) => d.deviceid === deviceId)\n      if (videoDevice) {\n        return videoDevice.devicename\n      }\n    }\n    return defaultLabel\n  }\n\n  getSpeakerLabel(): string {\n    if (this.isElectron) {\n      const deviceItem = this.electron.client.getPlaybackDeviceInfo()[0]\n      return deviceItem.devicename\n    }\n\n    return ''\n  }\n\n  getMicrophoneLabel(): string {\n    const defaultLabel = '';\n    if (this.isWeb) {\n      if (this.web.microphoneTrack) {\n        return this.web.microphoneTrack.getTrackLabel()\n      }\n    }\n    if (this.isElectron) {\n      const deviceId = this.electron.client.getCurrentAudioRecordingDevice()\n      const audioDeviceList = this.electron.client.getAudioRecordingDevices()\n      const audioDevice: any = audioDeviceList.find((d: any) => d.deviceid === deviceId)\n      if (audioDevice) {\n        return audioDevice.devicename\n      }\n    }\n    return defaultLabel\n  }\n\n  changePlaybackVolume(volume: number): void {\n    if (this.isWeb) {\n      this.sdkWrapper.changePlaybackVolume(volume)\n    }\n    if (this.isElectron) {\n      this.sdkWrapper.changePlaybackVolume(volume)\n    }\n  }\n  \n  async muteLocalVideo(val: boolean): Promise<any> {\n    if (this.isWeb) {\n      await this.sdkWrapper.muteLocalVideo(val)\n    }\n    if (this.isElectron) {\n      await this.sdkWrapper.muteLocalVideo(val)\n    }\n  }\n\n  async muteLocalAudio(val: boolean): Promise<any> {\n    if (this.isWeb) {\n      await this.sdkWrapper.muteLocalAudio(val)\n    }\n    if (this.isElectron) {\n      await this.sdkWrapper.muteLocalAudio(val)\n    }\n  }\n\n  async muteRemoteVideo(uid: any, val: boolean): Promise<any> {\n    if (this.isWeb) {\n      await this.sdkWrapper.muteRemoteVideo(uid, val)\n    }\n    if (this.isElectron) {\n      await this.sdkWrapper.muteRemoteVideo(uid, val)\n    }\n  }\n\n  async muteRemoteAudio(uid: any, val: boolean): Promise<any> {\n    if (this.isWeb) {\n      await this.sdkWrapper.muteRemoteAudio(uid, val)\n    }\n    if (this.isElectron) {\n      await this.sdkWrapper.muteRemoteAudio(uid, val)\n    }\n  }\n\n  async muteRemoteVideoByClient(client: any, uid: any, val: boolean): Promise<any> {\n    if (this.isWeb) {\n      await this.sdkWrapper.muteRemoteVideoByClient(client, uid, val)\n    } else {\n      throw 'electron not implemented'\n    }\n  }\n  async muteRemoteAudioByClient(client: any, uid: any, val: boolean): Promise<any> {\n    if (this.isWeb) {\n      await this.sdkWrapper.muteRemoteAudioByClient(client, uid, val)\n    } else {\n      throw 'electron not implemented'\n    }\n  }\n\n  get web (): AgoraWebRtcWrapper {\n    return (this.sdkWrapper as AgoraWebRtcWrapper)\n  }\n\n  get electron (): AgoraElectronRTCWrapper {\n    return (this.sdkWrapper as AgoraElectronRTCWrapper)\n  }\n\n  init() {\n    if (this.isWeb) {\n      this.sdkWrapper.init()\n    }\n\n    if (this.isElectron) {\n      this.sdkWrapper.init()\n    }\n  }\n\n  release () {\n    if (this.isWeb) {\n      this.sdkWrapper.release()\n    }\n\n    if (this.isElectron) {\n      this.sdkWrapper.release()\n    }\n  }\n\n  async join(option: JoinOption): Promise<any> {\n    if (this.isWeb) {\n      await this.sdkWrapper.join(option)\n    }\n    if (this.isElectron) {\n      await this.sdkWrapper.join(option)\n    }\n  }\n\n  async leave(): Promise<any> {\n    if (this.isWeb) {\n      await this.sdkWrapper.leave()\n    }\n    if (this.isElectron) {\n      await this.sdkWrapper.leave()\n    }\n  }\n\n  async joinChannel(option: JoinOption): Promise<any> {\n    if (this.isWeb) {\n      await this.sdkWrapper.joinChannel(option)\n    } else {\n      throw 'electron no implement'\n    }\n  }\n\n  async leaveChannel(option: JoinOption): Promise<any> {\n    if (this.isWeb) {\n      await this.sdkWrapper.leaveChannel(option)\n    } else {\n      throw 'electron no implement'\n    }\n  }\n\n  // async publishChannel(): Promise<any> {\n  //   if (this.isWeb) {\n  //     await this.sdkWrapper.publishChannel()\n  //   } else {\n  //     throw 'electron no implement'\n  //   }\n  // }\n\n  // async unpublishChannel(): Promise<any> {\n  //   if (this.isWeb) {\n  //     await this.sdkWrapper.unpublishChannel()\n  //   } else {\n  //     throw 'electron no implement'\n  //   }\n  // }\n\n  async publish(): Promise<any> {\n    if (this.isWeb) {\n      await this.sdkWrapper.publish()\n    }\n    if (this.isElectron) {\n      await this.sdkWrapper.publish()\n    }\n  }\n\n  async unpublish(): Promise<any> {\n    if (this.isWeb) {\n      await this.sdkWrapper.unpublish()\n    }\n    if (this.isElectron) {\n      await this.sdkWrapper.unpublish()\n    }\n  }\n\n  async openCamera(option?: CameraOption): Promise<any> {\n    if (this.isWeb) {\n      await this.sdkWrapper.openCamera(option)\n      if (!this.web.cameraTrack) return\n\n      if (!this.cameraRenderer) {\n        this.cameraRenderer = new LocalUserRenderer({\n          context: this,\n          uid: 0,\n          sourceType: 'default',\n          videoTrack: this.web.cameraTrack\n        })\n      } else {\n        this.cameraRenderer.videoTrack = this.web.cameraTrack\n      }\n    }\n    if (this.isElectron) {\n      await this.sdkWrapper.openCamera()\n\n      if (!this.cameraRenderer) {\n        this.cameraRenderer = new LocalUserRenderer({\n          context: this,\n          uid: 0,\n          sourceType: 'default',\n        })\n      }\n    }\n  }\n\n  async changeCamera(deviceId: string): Promise<any> {\n    if (this.isWeb) {\n      await this.sdkWrapper.changeCamera(deviceId)\n    }\n    if (this.isElectron) {\n      await this.sdkWrapper.changeCamera(deviceId)\n    }\n  }\n\n  async closeCamera() {\n    if (this.isWeb) {\n      await this.sdkWrapper.closeCamera()\n    }\n    if (this.isElectron) {\n      await this.sdkWrapper.closeCamera()\n    }\n    if (this.cameraRenderer) {\n      this.cameraRenderer.stop()\n      this.cameraRenderer = undefined\n    }\n  }\n\n  async openMicrophone(option?: MicrophoneOption): Promise<any> {\n    if (this.isWeb) {\n      await this.sdkWrapper.openMicrophone(option)\n      this.microphoneTrack = this.web.microphoneTrack\n    }\n    if (this.isElectron) {\n      await this.sdkWrapper.openMicrophone(option)\n      //@ts-ignore\n      this.microphoneTrack = {}\n    }\n  }\n\n  async changeMicrophone(deviceId: string): Promise<any> {\n    if (this.isWeb) {\n      await this.sdkWrapper.changeMicrophone(deviceId)\n    }\n    if (this.isElectron) {\n      await this.sdkWrapper.changeMicrophone(deviceId)\n    }\n  }\n\n  async closeMicrophone() {\n    await this.sdkWrapper.closeMicrophone()\n    this.microphoneTrack = undefined\n  }\n\n  async openTestCamera(option: CameraOption): Promise<any> {\n    if (this.isWeb) {\n      await this.sdkWrapper.openTestCamera(option)\n      if (!this.web.cameraTestTrack) return\n\n      if (!this.cameraTestRenderer) {\n        this.cameraTestRenderer = new LocalUserRenderer({\n          context: this,\n          uid: 0,\n          sourceType: 'default',\n          videoTrack: this.web.cameraTestTrack\n        })\n      } else {\n        this.cameraTestRenderer.videoTrack = this.web.cameraTestTrack\n      }\n    }\n    if (this.isElectron) {\n      await this.sdkWrapper.openTestCamera()\n\n      if (!this.cameraTestRenderer) {\n        this.cameraTestRenderer = new LocalUserRenderer({\n          context: this,\n          uid: 0,\n          sourceType: 'default',\n        })\n      }\n    }\n  }\n\n  closeTestCamera() {\n    this.sdkWrapper.closeTestCamera()\n    if (this.cameraTestRenderer) {\n      this.cameraTestRenderer.stop()\n      this.cameraTestRenderer = undefined\n    }\n  }\n\n  async changeTestCamera(deviceId: string): Promise<any> {\n    if (this.isWeb) {\n      await this.sdkWrapper.changeTestCamera(deviceId)\n    }\n    if (this.isElectron) {\n      await this.sdkWrapper.changeTestCamera(deviceId)\n    }\n  }\n\n  async changeTestResolution(config: any) {\n    if (this.isWeb) {\n      await this.web.changeTestResolution(config)\n    }\n    if (this.isElectron) {\n      await this.electron.changeTestResolution(config)\n    }\n  }\n\n  async openTestMicrophone(option?: MicrophoneOption): Promise<any> {\n    await this.sdkWrapper.openTestMicrophone(option)\n  }\n\n  closeTestMicrophone() {\n    this.sdkWrapper.closeTestMicrophone()\n  }\n\n  async changeTestMicrophone(id: string): Promise<any> {\n    await this.sdkWrapper.changeTestMicrophone(id)\n  }\n\n  async getCameras(): Promise<any> {\n    if (this.isWeb) {\n      return await this.web.getCameras()\n    }\n\n    if (this.isElectron) {\n      return await this.electron.getCameras()\n    }\n  }\n\n  async getMicrophones(): Promise<any> {\n    if (this.isWeb) {\n      return await this.web.getMicrophones()\n    }\n\n    if (this.isElectron) {\n      return await this.electron.getMicrophones()\n    }\n  }\n\n  async prepareScreenShare(params: PrepareScreenShareParams = {}): Promise<any> {\n    if (this.isWeb) {\n      await this.sdkWrapper.prepareScreenShare(params)\n      this.screenRenderer = new LocalUserRenderer({\n        context: this,\n        uid: 0,\n        videoTrack: this.web.screenVideoTrack as ITrack,\n        sourceType: 'screen',\n      })\n    }\n    if (this.isElectron) {\n      let items = await this.sdkWrapper.prepareScreenShare()\n      return items\n    }\n  }\n\n  async startScreenShare(option: StartScreenShareParams): Promise<any> {\n    if (this.isWeb) {\n      await this.sdkWrapper.startScreenShare(option)\n    }\n    if (this.isElectron) {\n      await this.sdkWrapper.startScreenShare(option)\n      this.screenRenderer = new LocalUserRenderer({\n        context: this,\n        uid: 0,\n        videoTrack: undefined,\n        sourceType: 'screen',\n      })\n    }\n  }\n\n  async stopScreenShare(): Promise<any> {\n    if (this.isWeb) {\n      await this.sdkWrapper.stopScreenShare()\n    }\n    if (this.isElectron) {\n      await this.sdkWrapper.stopScreenShare()\n    }\n  }\n\n  async changeResolution(config: any) {\n    if (this.isWeb) {\n      await this.web.changeResolution(config)\n    }\n    if (this.isElectron) {\n      await this.electron.changeResolution(config)\n    }\n  }\n\n  getPlaybackVolume(): number {\n    if (this.isElectron) {\n      return +(this.electron.client.getAudioPlaybackVolume() / 255 * 100).toFixed(1) \n    }\n    return 100;\n  }\n\n  reset(): void {\n    if (this.isWeb) {\n      this.web.reset()\n    }\n    if (this.isElectron) {\n      this.electron.reset()\n    }\n  }\n}","import { EduLogger } from './../../logger/index';\nimport { ILocalVideoTrack, ITrack } from 'agora-rtc-sdk-ng';\nimport { AgoraWebRtcWrapper } from \"../web\";\nimport { AgoraElectronRTCWrapper } from \"../electron\";\nimport { MediaService } from '../index';\nimport uuidv4 from 'uuid/v4';\n\ntype SourceType = 'default' | 'screen';\n\nexport interface IMediaRenderer {\n  context: MediaService;\n  _playing: boolean;\n  local: boolean;\n  sourceType: SourceType;\n  uid: any;\n  videoTrack?: ITrack;\n\n  play(dom: HTMLElement, fit?: boolean): void;\n  stop(isPreview?: boolean): void;\n}\n\nexport interface UserRendererInit {\n  context: MediaService\n  uid: any\n  videoTrack?: ITrack\n  sourceType: SourceType;\n}\n\nexport abstract class UserRenderer implements IMediaRenderer {\n  context: MediaService\n  _playing: boolean = false;\n  local: boolean = false;\n  sourceType: SourceType = 'screen';\n  uid: any = 0;\n  videoTrack?: ITrack;\n  uuid: string;\n\n  constructor(config: UserRendererInit) {\n    this.context = config.context\n    this.uid = config.uid\n    if (config.videoTrack) {\n      this.videoTrack = config.videoTrack\n    }\n    this.uuid = uuidv4()\n    this.sourceType = config.sourceType\n  }\n\n  play(dom: HTMLElement, fit?: boolean): void {\n    throw new Error(\"Method not implemented.\");\n  }\n  stop(): void {\n    throw new Error(\"Method not implemented.\");\n  }\n\n  get isWeb (): boolean {\n    return this.context.sdkWrapper instanceof AgoraWebRtcWrapper\n  }\n\n  get isElectron (): boolean {\n    return this.context.sdkWrapper instanceof AgoraElectronRTCWrapper\n  }\n\n  get web(): AgoraWebRtcWrapper {\n    return this.context.sdkWrapper as AgoraWebRtcWrapper\n  }\n\n  get electron(): AgoraElectronRTCWrapper {\n    return this.context.sdkWrapper as AgoraElectronRTCWrapper\n  }\n}\n\nexport class LocalUserRenderer extends UserRenderer {\n  constructor(config: UserRendererInit) {\n    super(config)\n    this.local = true\n  }\n\n  play(dom: HTMLElement, fit?: boolean): void {\n    if (this.isWeb) {\n      if (this.videoTrack) {\n        this.videoTrack.play(dom)\n      }\n    }\n    if (this.isElectron) {\n      // @ts-ignore\n      if (this.sourceType === 'default') {\n        this.electron.client.setupLocalVideo(dom)\n        //@ts-ignore\n        this.electron.client.setupViewContentMode(+this.uid, 0);\n      } else {\n        this.electron.client.setupLocalVideoSource(dom)\n        //@ts-ignore\n        this.electron.client.setupViewContentMode('videosource', 1);\n      }\n      this.electron.client.setClientRole(1)\n      EduLogger.info('Raw Message: setClientRole(1) in LocalUserRenderer')\n      this.electron.client.startPreview();\n    }\n    this._playing = true\n  }\n\n  stop(isPreview?: boolean) {\n    if (this.isWeb) {\n      if (this.videoTrack) {\n        this.videoTrack.stop()\n      }\n      (this.videoTrack as ILocalVideoTrack)\n    }\n    if (this.isElectron && this.sourceType === 'default') {\n      this.electron.client.stopPreview()\n      if (isPreview) {\n        this.electron.client.setClientRole(2)\n      }\n    }\n    this._playing = false\n  }\n\n\n  getUuid() {\n    return this.uuid\n  }\n}\n\nexport class RemoteUserRenderer extends UserRenderer {\n  constructor(config: UserRendererInit) {\n    super(config)\n    this.local = false\n    this.uid = config.uid\n  }\n\n  play(dom: HTMLElement, fit?: boolean) {\n    if (this.isWeb) {\n      if (this.videoTrack) {\n        this.videoTrack.play(dom)\n      }\n    }\n    if (this.isElectron) {\n      this.electron.client.subscribe(+this.uid, dom)\n      if (!fit) {\n        //@ts-ignore\n        this.electron.client.setupViewContentMode(+this.uid, 0);\n      } else {\n        //@ts-ignore\n        this.electron.client.setupViewContentMode(+this.uid, 1);\n      }\n    }\n    this._playing = true\n  }\n\n  stop() {\n    if (this.isWeb) {\n      if (this.videoTrack) {\n        this.videoTrack.stop()\n      }\n    }\n    if (this.isElectron) {\n    }\n    this._playing = false\n  }\n\n\n  getUuid() {\n    return this.uuid\n  }\n}","import { EduLogger } from './../core/logger/index';\nimport { EduClassroomDataController } from './../room/edu-classroom-data-controller';\nimport { EduClassroomManager } from '@/sdk/education/room/edu-classroom-manager';\nimport { EventEmitter } from 'events';\nimport { EduStreamData, EduVideoConfig, EduRoleType, EduVideoSourceType, EduAudioSourceType, EduCourseState, EduShareScreenConfig, EduUserData } from '../interfaces';\nimport { EduRenderConfig, EduStream, EduUser, EduSubscribeOptions, EduStreamConfig } from '../interfaces';\nimport { AgoraEduApi } from '../core/services/edu-api';\n\nexport interface EduModelViewOption {\n  dom: HTMLElement\n  stream: EduStream\n  config?: EduRenderConfig\n}\n\nexport enum PeerInviteEnum {\n  studentApply = 1,\n  teacherReject = 2,\n  studentCancel = 3,\n  teacherAccept = 4,\n  teacherStop = 5,\n  studentStop = 6\n}\nexport interface IEduUserService {\n  // setVideoConfig(config: EduVideoConfig): void;\n\n  // startOrUpdateLocalStream(eduStreamConfig: EduStreamConfig): Promise<any>;\n\n  // switchCamera(label: string): Promise<any>;\n\n  // switchMicrophone(label: string): Promise<any>;\n\n  // subscribeStream(stream: EduStream, options: EduSubscribeOptions): Promise<any>;\n\n  // unsubscribeStream(stream: EduStream, options: EduSubscribeOptions): Promise<any>;\n\n  publishStream(stream: EduStream): Promise<any>;\n\n  unpublishStream(stream: EduStream): Promise<any>;\n\n  sendRoomMessage(message: string): Promise<any>;\n\n  sendUserMessage(message: string, remoteUser: EduUser): Promise<any>;  \n\n  sendRoomChatMessage(message: string, remoteUser: EduUser): Promise<any>;\n\n  sendUserChatMessage(message: string, remoteUser: EduUser): Promise<any>;\n}\n\nexport class EduUserService extends EventEmitter implements IEduUserService {\n\n  roomManager!: EduClassroomManager;\n\n  constructor(roomManager: EduClassroomManager) {\n    super();\n    this.roomManager = roomManager;\n  }\n\n  get roomUuid(): string {\n    return this.roomManager.roomUuid\n  }\n\n  get apiService(): AgoraEduApi {\n    return this.roomManager.apiService;\n  }\n\n  get localUser(): EduUser {\n    if (this.roomManager.data.localUser) {\n      return this.roomManager.data.localUser.user\n    }\n    return {} as EduUser\n  }\n\n  get localUserUuid(): string {\n    return this.localUser.userUuid\n  }\n\n  get localStream(): EduStreamData {\n    return this.roomManager.data.localStreamData\n  }\n\n  get screenStream(): EduStreamData {\n    return this.roomManager.data.localScreenShareStream\n  }\n\n  get data(): EduClassroomDataController {\n    return this.roomManager.data\n  }\n\n  public async publishStream(stream: EduStream) {\n    let res = await this.apiService.upsertBizStream({\n      roomUuid: this.roomUuid,\n      userUuid: this.localUserUuid,\n      streamUuid: stream.streamUuid,\n      streamName: stream.streamName,\n      audioState: +stream.hasAudio as number,\n      videoState: +stream.hasVideo as number,\n      videoSourceType: stream.videoSourceType,\n      audioSourceType: stream.audioSourceType,\n    })\n    const screenStreamData = new EduStreamData({\n      state: 1,\n      streamUuid: stream.streamUuid,\n      streamName: stream.streamName,\n      hasAudio: stream.hasAudio,\n      hasVideo: stream.hasVideo,\n      videoSourceType: stream.videoSourceType,\n      audioSourceType: stream.audioSourceType,\n      token: res.rtcToken,\n      userInfo: {\n        userUuid: this.data.localUser.user.userUuid,\n        userName: this.data.localUser.user.userName,\n        role: this.data.localUser.user.role\n      },\n      updateTime: res.ts,\n    })\n    this.data.upsertLocalStream('main', screenStreamData)\n    return {\n      streamUuid: res.streamUuid,\n      rtcToken: res.rtcToken\n    }\n  }\n\n  public async unpublishStream(stream: Pick<EduStream, 'streamUuid'>) {\n    let res = await this.apiService.deleteBizStream({\n      roomUuid: this.roomUuid,\n      userUuid: this.localUserUuid,\n      streamUuid: stream.streamUuid\n    })\n    EduLogger.info('[EDU-STATE] unpublish stream remove local stream, streamUuid: ', stream.streamUuid)\n    this.data.removeLocalStream(stream.streamUuid)\n  }\n\n  async sendRoomMessage(message: string) {\n    await this.apiService.sendChannelMessage({\n      roomUuid: this.roomUuid,\n      msg: message\n    })\n  }\n\n  async sendUserMessage(message: string, remoteUser: EduUser) {\n    await this.apiService.sendPeerMessage({\n      roomUuid: this.roomUuid,\n      userId: remoteUser.userUuid,\n      msg: message\n    })\n  }\n\n  async sendRoomChatMessage(message: string): Promise<any> {\n    await this.apiService.sendRoomChatMessage({\n      message,\n      roomUuid: this.roomUuid,\n    })\n  }\n  \n  async sendUserChatMessage(message: string, remoteUser: EduUser): Promise<any> {\n    await this.apiService.sendUserChatMessage({\n      message,\n      remoteUser,\n      roomUuid: this.roomUuid,\n    })\n  }\n\n  public async updateRoomProperties(record: Record<string, any>) {\n    await this.apiService.updateRoomProperties({\n      roomUuid: this.roomUuid,\n      key: record.key,\n      value: record.value,\n      cause: record.cause\n    })\n  }\n\n  public async updateCourseState(courseState: EduCourseState) {\n    await this.apiService.updateCourseState({\n      roomUuid: this.roomUuid,\n      courseState: +courseState\n    })\n  }\n\n  public async kickUser(userUuid: string) {\n    await this.apiService.kickUser({\n      roomUuid: this.roomUuid,\n      userUuid\n    })\n  }\n\n  public async allowStudentChatByRole(enable: boolean, roles: string[]) {\n    await this.apiService.allowStudentChatByRole({\n      roomUuid: this.roomUuid,\n      enable,\n      roles,\n    })\n  }\n\n  public async allowRemoteStudentChat(enable: boolean, user: EduUser) {\n    await this.apiService.allowRemoteStudentChat({\n      roomUuid: this.roomUuid,\n      userUuid: user.userUuid,\n      muteChat: enable,\n    })\n  }\n\n  public async startShareScreen() {\n    if (this.screenStream && this.screenStream.stream && this.screenStream.stream.streamUuid) {  \n      const { rtcToken, streamUuid, ts } = await this.apiService.upsertBizStream({\n        roomUuid: this.roomUuid,\n        userUuid: this.localUserUuid,\n        streamName: this.screenStream.stream.streamName,\n        streamUuid: this.screenStream.stream.streamUuid,\n        videoSourceType: this.screenStream.stream.videoSourceType,\n        audioSourceType: this.screenStream.stream.audioSourceType,\n        videoState: this.screenStream.stream.hasVideo,\n        audioState: this.screenStream.stream.hasAudio,\n      } as any)\n      const screenStreamData = new EduStreamData({\n        state: 1,\n        streamUuid: streamUuid,\n        streamName: this.screenStream.stream.streamName,\n        hasAudio: true,\n        hasVideo: true,\n        videoSourceType: EduVideoSourceType.screen,\n        audioSourceType: EduAudioSourceType.mic,\n        token: rtcToken,\n        userInfo: {\n          userUuid: this.data.localUser.user.userUuid,\n          userName: this.data.localUser.user.userName,\n          role: this.data.localUser.user.role\n        },\n        updateTime: ts\n      })\n      this.data.upsertLocalStream('screen', screenStreamData)\n    } else {\n      const stream: EduStreamData = new EduStreamData({\n        state: 1,\n        streamUuid: `0`,\n        streamName: `${this.localUser.userName}的屏幕共享`,\n        hasAudio: true,\n        hasVideo: true,\n        videoSourceType: EduVideoSourceType.screen,\n        audioSourceType: EduAudioSourceType.mic,\n        token: '',\n        userInfo: {\n          userUuid: this.data.localUser.user.userUuid,\n          userName: this.data.localUser.user.userName,\n          role: this.data.localUser.user.role\n        }\n      })\n      const params = {\n        roomUuid: this.roomUuid,\n        userUuid: this.localUserUuid,\n        streamName: stream.stream.streamName,\n        streamUuid: stream.stream.streamUuid,\n        audioState: +stream.stream.hasAudio,\n        videoState: +stream.stream.hasVideo,\n        videoSourceType: EduVideoSourceType.screen,\n        audioSourceType: EduAudioSourceType.mic,\n      }\n      const { rtcToken, streamUuid, ts } = await this.apiService.upsertBizStream(params)\n      stream.setRtcToken(rtcToken)\n      stream.updateStreamUuid(streamUuid)\n      stream.updateTime(ts)\n      this.data.upsertLocalStream('screen', stream)\n    }\n  }\n\n  public async stopShareScreen() {\n    if (this.screenStream) {\n      await this.apiService.stopShareScreen(this.roomUuid, this.screenStream.stream.streamUuid, this.data.localUser.user.userUuid)\n      EduLogger.info('[EDU-STATE] unpublish stream remove local screen stream, streamUuid: ', this.screenStream.stream.streamUuid)\n      this.data.removeLocalStream(this.screenStream.stream.streamUuid)\n    }\n  }\n\n  public async remoteStartStudentCamera(stream: EduStream) {\n    await this.apiService.remoteStartStudentCamera({\n      roomUuid: this.roomUuid,\n      userUuid: (stream.userInfo as any).userUuid,\n      streamUuid: stream.streamUuid\n    })\n  }\n\n  public async remoteStopStudentCamera(stream: EduStream) {\n    await this.apiService.remoteStopStudentCamera({\n      roomUuid: this.roomUuid,\n      userUuid: (stream.userInfo as any).userUuid,\n      streamUuid: stream.streamUuid\n    })\n  }\n\n  public async remoteStartStudentMicrophone(stream: EduStream) {\n    await this.apiService.remoteStartStudentMicrophone({\n      roomUuid: this.roomUuid,\n      userUuid: (stream.userInfo as any).userUuid,\n      streamUuid: stream.streamUuid\n    })\n  }\n\n  public async remoteStopStudentMicrophone(stream: EduStream) {\n    await this.apiService.remoteStopStudentMicrophone({\n      roomUuid: this.roomUuid,\n      userUuid: (stream.userInfo as any).userUuid,\n      streamUuid: stream.streamUuid\n    })\n  }\n\n  public async remoteCloseStudentStream(stream: EduStream) {\n    await this.apiService.remoteCloseStudentStream({\n      roomUuid: this.roomUuid,\n      userUuid: (stream.userInfo as any).userUuid,\n      streamUuid: stream.streamUuid\n    })\n  }\n\n  public async updateMainStreamState(args: Record<string, boolean>) {\n    const prevAudioState = +this.localStream.stream.hasAudio\n    const prevVideoState = +this.localStream.stream.hasVideo\n    const curAudioState = args.hasOwnProperty('audioState') ? +args['audioState']: prevAudioState\n    const curVideoState = args.hasOwnProperty('videoState') ? +args['videoState'] : prevVideoState\n    console.log(\"args>>> \", args, this.localStream.stream, args)\n    await this.apiService.updateBizStream({\n      roomUuid: this.roomUuid,\n      userUuid: this.localUserUuid,\n      streamUuid: this.data.streamMap['main'].streamUuid,\n      videoSourceType: this.localStream.stream.videoSourceType,\n      audioSourceType: this.localStream.stream.audioSourceType,\n      videoState: curVideoState,\n      audioState: curAudioState,\n      streamName: this.localStream.stream.streamName\n    })\n    // this.localStream.updateMediaState({\n    //   hasVideo: curVideoState,\n    //   hasAudio: curAudioState,\n    // })\n  }\n\n  public async muteStudentChatByRoles(roles: string[]) {\n    await this.apiService.allowStudentChatByRole({enable: true, roomUuid: this.roomUuid, roles})\n  }\n\n  public async unmuteStudentChatByRoles(roles: string[]) {\n    await this.apiService.allowStudentChatByRole({enable: false, roomUuid: this.roomUuid, roles})\n  }\n\n  public async sendCoVideoApply(teacher: EduUser) {\n    const msg = JSON.stringify({\n      cmd: 1,\n      data: {\n        userUuid: teacher.userUuid,\n        userName: teacher.userName,\n        type: PeerInviteEnum.studentApply,\n      }\n    })\n    await this.apiService.sendUserChatMessage({\n      message: msg,\n      remoteUser: teacher,\n      roomUuid: this.roomUuid\n    })\n  }\n\n  public async acceptCoVideoApply(student: EduUser) {\n    const msg = JSON.stringify({\n      cmd: 1,\n      data: {\n        userUuid: student.userUuid,\n        userName: student.userName,\n        type: PeerInviteEnum.teacherAccept,\n      }\n    })\n    await this.apiService.sendUserChatMessage({\n      message: msg,\n      remoteUser: student,\n      roomUuid: this.roomUuid\n    })\n  }\n\n  public async rejectCoVideoApply(student: EduUser) {\n    const msg = JSON.stringify({\n      cmd: 1,\n      data: {\n        userUuid: student.userUuid,\n        userName: student.userName,\n        type: PeerInviteEnum.teacherReject,\n      }\n    })\n    await this.apiService.sendUserChatMessage({\n      message: msg,\n      remoteUser: student,\n      roomUuid: this.roomUuid\n    })  \n  }\n\n  public async inviteStreamBy(args: any) {\n    await this.apiService.inviteUserPublishStream(args)\n  }\n\n  public async studentCancelApply(teacher: EduUser) {\n    const msg = JSON.stringify({\n      cmd: 1,\n      data: {\n        userUuid: teacher.userUuid,\n        userName: teacher.userName,\n        type: PeerInviteEnum.studentCancel,\n      }\n    })\n    await this.apiService.sendUserChatMessage({\n      message: msg,\n      remoteUser: teacher,\n      roomUuid: this.roomUuid\n    })\n  }\n\n  public async studentCloseStream(me: EduUser) {\n    const msg = JSON.stringify({\n      cmd: 1,\n      data: {\n        userUuid: me.userUuid,\n        userName: me.userName,\n        type: PeerInviteEnum.studentCancel,\n      }\n    })\n    await this.apiService.sendUserChatMessage({\n      message: msg,\n      remoteUser: me,\n      roomUuid: this.roomUuid\n    })\n  }\n\n  public async teacherCloseStream(student: EduUser) {\n    const msg = JSON.stringify({\n      cmd: 1,\n      data: {\n        userUuid: student.userUuid,\n        userName: student.userName,\n        type: PeerInviteEnum.teacherStop,\n      }\n    })\n    await this.apiService.sendUserChatMessage({\n      message: msg,\n      remoteUser: student,\n      roomUuid: this.roomUuid\n    })\n  }\n}\n\n","import { MessageSerializer } from './../core/rtm/message-serializer';\nimport uuidv4 from 'uuid/v4';\nimport { EduVideoSourceType, EduUserAttrs, EduAudioSourceType, EduUser, EduChannelMessageCmdType, EduClassroomStateType, EduTextMessage, EduStreamAction, EduCustomMessage, EduStream } from './../interfaces/index';\nimport { EduClassroomManager } from '../room/edu-classroom-manager';\nimport { EduStreamData, EduUserData, EduClassroomAttrs, EduRoomAttrs } from '../interfaces/index';\nimport { EduLogger } from '../core/logger';\nimport { get } from 'lodash';\nimport { diff } from 'deep-diff';\n\nenum DataEnumType {\n  users = 1,\n  streams = 2,\n  classRoom = 3,\n  chat = 4\n}\n\nexport type SeqData = {\n  seqId: number\n  data: any\n  cmd: number\n}\n\nexport type SeqRawData = Pick<SeqData, 'data' | 'cmd'>\n\ntype SeqDataMap = Record<string, SeqRawData>\n\nexport class EduClassroomDataController {\n\n  private _roomAttrs?: EduRoomAttrs = undefined\n  private _localUser?: EduUserData = undefined;\n  private _streamList: EduStreamData[] = [];\n  private _userList: EduUserData[] = [];\n\n  private _localUserUuid: string = ''\n\n  setLocalUserUuid(v: string) {\n    this._localUserUuid = v\n  }\n\n  get localUserUuid(): string {\n    return this._localUserUuid as string\n  }\n\n  private _userToken?: string = undefined\n\n  get userToken(): string {\n    return this._userToken as string;\n  }\n\n  public setUserToken(t: string) { \n    this._userToken = t\n  }\n\n  get roomAttrs(): EduRoomAttrs {\n    return this._roomAttrs as EduRoomAttrs\n  }\n\n  get roomUuid(): string {\n    return this._roomInfo?.roomUuid\n  }\n\n  private roomManager: EduClassroomManager\n\n  private _id: string\n\n  private _curSeqId: number | null;\n\n  private _bufferMap: SeqDataMap\n\n  public setCurrentSeqId(v: number) {\n    this._curSeqId = v\n    this._latestSeqId = Math.max(this._latestSeqId, this._curSeqId)\n    EduLogger.info(\"[seqId] setCurrentSeqId, curSeqId: \", this._curSeqId, \" latestSeqId: \", this._latestSeqId)\n    this.roomManager.emit('seqIdChanged', {\n      curSeqId: this._curSeqId,\n      latestSeqId: this._latestSeqId\n    })\n  }\n\n  public get curSeqId(): number {\n    return this._curSeqId as number;\n  }\n\n  private _latestSeqId = 0\n\n  public get missingSeqId(): boolean {\n    if (this._curSeqId !== this._latestSeqId && this._latestSeqId !== 0) {\n      return true\n    }\n    return false\n  }\n  public syncSequenceTimes: number = 0\n\n  // public async sendSyncData(full: boolean) {\n  //   if (!full && this.syncSequenceTimes > 0) {\n  //     await this.syncFromCurrentSequenceId()\n  //   } else {\n  //     await this.syncFullSequence()\n  //   }\n  // }\n\n  public syncingData: boolean = false\n\n  public async syncData(full: boolean, delay: number) {\n    if (this.syncingData) {\n      EduLogger.warn('already syncing data')\n      return\n    }\n\n    this.syncingData = true\n\n    if (!full) {\n      await this.syncFromCurrentSequenceId()\n      this.syncingData = false\n    } else {\n      await this.syncFullSequence()\n      this.syncingData = false\n    }\n    this.asyncBatchUpdateData(delay)\n  }\n\n  private syncTimer: any = null\n\n  public asyncBatchUpdateData(delay: number) {\n    if (this.syncTimer === null) {\n      this.syncTimer = setTimeout(() => {\n        this.BatchUpdateData()\n        clearTimeout(this.syncTimer)\n        this.syncTimer = null\n      }, delay)\n    }\n  }\n\n  public BatchUpdateData() {\n    const bufferMap = this._bufferMap\n    const taskBuffer = []\n    for (let seqId of Object.keys(bufferMap)) {\n      const buffer = bufferMap[`${seqId}`]\n      if (buffer) {\n        if (this._curSeqId) {\n          if (+seqId <= +this._curSeqId) {\n            delete this._bufferMap[`${seqId}`]\n            continue;\n          } else {\n            if (+seqId === this._curSeqId+1) {\n              taskBuffer.push({\n                seqId: +seqId,\n                ...buffer\n              })\n              this.setCurrentSeqId(+seqId)\n              // this._curSeqId = +seqId\n              delete this._bufferMap[`${seqId}`]\n            } else {\n              if (+seqId === +this._curSeqId) break;\n              EduLogger.info(\"[seqId] greaterThanSeqId, is consequence\")\n              EduLogger.warn('is consequence', this._curSeqId)\n              const onSuccess = () => {\n                EduLogger.warn('[seqId] syncData success', this._curSeqId, this._latestSeqId)\n              }\n              const onFailure = () => {\n                EduLogger.warn('[seqId] syncData missingSeqId failure', this._curSeqId, this._latestSeqId)\n              }\n              this.syncData(false, 300)\n                .then(onSuccess)\n                .catch(onFailure)\n              break;\n            }\n          }\n        } else {\n          taskBuffer.push({\n            seqId: +seqId,\n            ...buffer\n          })\n          this.setCurrentSeqId(+seqId)\n          delete this._bufferMap[`${seqId}`]\n        }\n      } else {\n        EduLogger.info(\"gap>>>>>> !!!\")\n        break;\n      }\n    }\n    EduLogger.info(`[${this._id}] [seqId] fetch bufferMap `, bufferMap, ' taskBuffer ', taskBuffer)\n    for (let it of taskBuffer) {\n\n      const {cmd, data, seqId} = it as any\n\n      EduLogger.info(\"[seqId] data \", it)\n\n      switch(cmd) {\n        // init full user\n        case 0: {\n          this.setRoomInfo(data.roomInfo)\n          this.setRoomStatus(MessageSerializer.roomStatus(data.roomState))\n          this.setRoomProperties(data.roomProperties)\n          this.setRawUsers(data.users)\n          EduLogger.info(`[${this._id}] [${seqId}] set latest currentId, seqId: `)\n          // this.setCurrentSeqId(seqId)\n          break;\n        }\n        // classroom-property-updated\n        // course state\n        // classroom-property-updated\n        // room media state\n        case EduChannelMessageCmdType.courseState: {\n          this.setRoomStatus({\n            courseState: data.state,\n            startTime: data.startTime,\n          })\n          EduLogger.info(`[${this._id}] [${seqId}]#setRoomStatus: `, data)\n          break;\n        }\n        case EduChannelMessageCmdType.roomMediaState: {\n          EduLogger.info(`[${this._id}] before [${seqId}]#setRoomStatus: `, data)\n          this.setRoomStatus({\n            isStudentChatAllowed: MessageSerializer.isStudentChatAllowed(data),\n          })\n          EduLogger.info(`[${this._id}] after [${seqId}]#setRoomStatus: `, data)\n          break;\n        }\n        // room user list changed\n        // user-joined\n        // user-removed\n        case EduChannelMessageCmdType.userListChanged: {\n          const {\n            onlineUsers,\n            offlineUsers,\n            onlineStreams,\n            offlineStreams,\n          } = MessageSerializer.getUsersStreams(data)\n\n          EduLogger.info(`[${this._id}] before [${seqId}]#updateUsersStreams: `, data)\n          EduLogger.info(`[${this._id}] before [${seqId}]#updateUsersStreams: `,             onlineUsers,\n          offlineUsers,\n          onlineStreams,\n          offlineStreams,)\n          this.updateUserList(onlineUsers, offlineUsers, seqId)\n          this.updateStreamList(onlineStreams, offlineStreams, null, seqId)\n\n          EduLogger.info(`[${this._id}] after [${seqId}]#updateUsersStreams: `, data)\n          EduLogger.info(`[${this._id}] after [${seqId}]#updateUsersStreams: userList, streamList,`, this._userList, this._streamList)\n          break;\n        }\n        // users-updated\n        case EduChannelMessageCmdType.userStateUpdated: {\n          EduLogger.info(`[${this._id}] before [${seqId}]#updateUserState: `, data)\n          EduLogger.info(`[${this._id}] before [${seqId}]#updateUserState: `)\n          const user = MessageSerializer.getChangedUser(data)\n          this.updateUserState(user)\n\n          EduLogger.info(`[${this._id}] after [${seqId}]#updateUserState: `, data)\n          EduLogger.info(`[${this._id}] after [${seqId}]#updateUserState: `, user)\n          break;\n        }\n\n        // users-room-properties\n        // case EduChannelMessageCmdType: {\n\n        case EduChannelMessageCmdType.streamListChanged: {\n          const action = MessageSerializer.getAction(data)\n          const streams = MessageSerializer.getStreams(data)\n          const operatorUser = MessageSerializer.getOperator(data)\n\n          const onlineStreams = streams.filter((it: EduStreamData) => it.state !== 0)\n          const offlineStreams = streams.filter((it: EduStreamData) => it.state === 0)\n          EduLogger.info(`[${this._id}] before [${seqId}]#updateStreamList: data`, data)\n          EduLogger.info(`[${this._id}] before [${seqId}]#updateStreamList: onlineStreams`, onlineStreams,  ' offlineStreams', onlineStreams, ' operatorUser', operatorUser)\n          this.updateStreamList(onlineStreams, offlineStreams, operatorUser, seqId)\n          EduLogger.info(`[${this._id}] after [${seqId}]#updateUsersStreams: userList, streamList,`, this._userList, this._streamList)\n          break;\n        }\n\n        case EduChannelMessageCmdType.roomPropertiesStateChanged: {\n          this.setRoomProperties(data.changeProperties)\n          break;\n        }\n\n        // room chat message\n        case EduChannelMessageCmdType.roomChatState: {\n          const textMessage: EduTextMessage = MessageSerializer.getEduTextMessage(data)\n          if (this.userIds.includes(textMessage.fromUser.userUuid)) {\n            if (!this.isLocalUser(textMessage.fromUser.userUuid)) {\n              EduLogger.info(`EDU-STATE [${this._id}], ${JSON.stringify(textMessage)}`)\n              this.fire('room-chat-message', {\n                textMessage\n              })\n            }\n          }\n          break;\n        }\n\n        // custom message\n        case EduChannelMessageCmdType.customMessage: {\n          const textMessage: EduTextMessage = MessageSerializer.getEduTextMessage(data)\n          if (this.userIds.includes(textMessage.fromUser.userUuid)) {\n            this.fire('room-message', {\n              textMessage\n            })\n          }\n          break;\n        }\n      }\n    }\n\n  }\n\n  public dispatchBatchMessage(map: any) {\n    for (let cmd of Object.keys(map)) {\n      const data = map[cmd]\n      switch(+cmd) {\n        // classroom-property-updated\n        case EduChannelMessageCmdType.courseState: {\n          // data\n          break;\n        }\n        // classroom-property-updated\n        // room media state\n        case EduChannelMessageCmdType.roomMediaState: {\n          break;\n        }\n        // room user list changed\n        // user-joined\n        // user-removed\n        case EduChannelMessageCmdType.userListChanged: {\n          break;\n        }\n        // users-updated\n        case EduChannelMessageCmdType.userStateUpdated: {\n          break;\n        }\n\n        case EduChannelMessageCmdType.streamListChanged: {\n          break;\n        }\n\n        case EduChannelMessageCmdType.roomPropertiesStateChanged: {\n          break;\n        }\n\n        // room chat message\n        case EduChannelMessageCmdType.roomChatState: {\n          break;\n        }\n\n        // custom message\n        case EduChannelMessageCmdType.customMessage: {\n          break;\n        }\n      }\n    }\n  }\n\n  public async syncFullSequence() {\n    let times = 3\n    do {\n      try {\n        const roomUuid = this.roomManager.roomUuid\n        const res = await this.roomManager.apiService.syncSnapShot(roomUuid)\n        const {seq, roomInfo, roomState, roomProperties, users} = res\n        this.appendBuffer({\n          cmd: 0,\n          seqId: seq,\n          data: {\n            roomInfo,\n            roomState,\n            roomProperties,\n            users\n          }\n        })\n        EduLogger.info(`[${this._id}] [seqId] : ${seq} syncFullSequences data succeed`)\n        return\n      } catch (err) {\n        EduLogger.warn('syncFullSequences ', err.msg, err)\n        --times\n      }\n    } while(times > 0)\n\n    if (this.retryTimer) {\n      return\n    } else {\n      this.retryTimer = setTimeout(() => {\n        const onSuccess = () => {\n          EduLogger.info(`[${this._id}] [seqId] retryTimer success`)\n          if (this.retryTimer) {\n            clearTimeout(this.retryTimer)\n            this.retryTimer = null\n          }\n        }\n        const onFailure = () => {\n          EduLogger.info(`[${this._id}] [seqId] retryTimer failure`)\n          if (this.retryTimer) {\n            clearTimeout(this.retryTimer)\n            this.retryTimer = null\n          }\n        }\n        this.syncFullSequence()\n          .then(onSuccess)\n          .catch(onFailure)\n      }, 2000)\n    }\n    // this.setRoomInfo(roomInfo)\n    // this.setRoomStatus(roomState)\n    // this.setRoomProperties(roomProperties)\n    // this.setRawUsers(users)\n    // this.setCurrentSeqId(seq)\n  }\n\n  private async syncSequence(roomUuid: string, curSeqId: number, count?: number): Promise<any> {\n    let results: any = []\n\n    EduLogger.info(`[EDU-STATE] [syncSequence] [${this._id}], start: [${curSeqId}] acquire, roomUuid: ${roomUuid}, nextId: ${curSeqId}, count: ${count} `)\n\n    let lastId = 0\n\n    do {\n      const {nextId, list} = await this.roomManager.apiService.syncSequence(roomUuid, curSeqId, count)\n      EduLogger.info(`[EDU-STATE] [syncSequence] [${this._id}], cur_nextId: [${curSeqId}], nex_nextId: [${nextId}]  acquire, roomUuid: ${roomUuid}, nextId: ${curSeqId}, count: ${count} `, JSON.stringify(results))\n      results = results.concat(list)\n      lastId = list.slice(-1)\n      curSeqId = nextId\n    } while (!!curSeqId)\n\n    return {\n      list: results\n    }\n  }\n\n  public async syncFromCurrentSequenceId() {\n    let times = 3\n    do {\n      try {\n        const roomUuid = this.roomManager.roomUuid\n        const curSeqId = this.curSeqId\n        const count = Math.abs(this.curSeqId - this._latestSeqId)\n        if (count > 1000) {\n          throw ''\n        }\n        // EDU-STATE-NOTE: ignore count\n        let res = await this.syncSequence(roomUuid, curSeqId)\n        const {list} = res\n        for (let item of list) {\n          this.appendBuffer({\n            seqId: item.sequence,\n            ...item\n          })\n        }\n        return EduLogger.warn(`[EDU-STATE] [${this._id}] [seqId] res syncSequence done`)\n      } catch (err) {\n        --times\n      }\n    } while (times > 0)\n    await this.syncFullSequence()\n  }\n\n  setLatestSeqId(v: number) {\n    this._latestSeqId = v\n    EduLogger.info(\"[seqId] setLatestSeqId \", this._latestSeqId)\n  }\n\n  public appendBuffer(buffer: SeqData) {\n    this._bufferMap[buffer.seqId] = {\n      cmd: buffer.cmd,\n      data: buffer.data\n    }\n    EduLogger.info('Raw ChannelMessage, buffer >>> ', JSON.stringify(this._bufferMap[buffer.seqId]))\n    if (!buffer.hasOwnProperty('seqId')) {\n      console.error(\"buffer\", buffer)\n      throw 'seqId not exists'\n    }\n\n    this._minSeqId = Math.min(buffer.seqId, this._minSeqId)\n    this.setLatestSeqId(Math.max(buffer.seqId, this._latestSeqId))\n    this.roomManager.emit('seqIdChanged', {\n      curSeqId: this._curSeqId,\n      latestSeqId: this._latestSeqId\n    })\n  }\n\n  private _minSeqId: number = 0\n\n  private retryTimer: any = null\n\n  constructor(context: EduClassroomManager) {\n    this.roomManager = context\n    this._curSeqId = null\n    this._minSeqId = 0\n    this._latestSeqId = 0\n    this._bufferMap = {}\n    this.retryTimer = null\n    this._id = `roomUuid:${this.roomManager.roomUuid}#ins:${uuidv4()}`\n    EduLogger.info(`EDU-STATE EduDataController: [${this._id}]`)\n  }\n\n  public upsertLocalUser(user: EduUserAttrs, streamMap?: Record<string, any>) {\n    if (this.localUser) {\n      this.localUser.updateUser(user)\n      this.fire('local-user-updated', {\n        user: this._localUser\n      })\n      EduLogger.info(`EDU-STATE EduDataController: [${this._id}] upsert local user ${user.userUuid}`, this.localUser,  `id: ${this._id}`)\n    } else {\n      this.localUser = new EduUserData(user)\n      if (this.localUser.state) {\n        this.fire('local-user-added', {\n          user: this._localUser\n        })\n        EduLogger.info(`EDU-STATE EduDataController: [${this._id}] added local user ${user.userUuid}`, this.localUser)\n      }\n    }\n    if (streamMap) {\n      this.localUser.updateStreamsMap(streamMap)\n      // this.fire('local-user-updated', {\n      //   user: this._localUser\n      // })\n      EduLogger.info(`EDU-STATE EduDataController: [${this._id}] update streams local user ${user.userUuid}`, this.localUser)\n    }\n    EduLogger.info(\"invoke upsertLocalUser \", user, streamMap, this)\n  }\n\n  private _cachedLocalStreams: Record<string, any> = {}\n\n  public get streamMap(): Record<string, any> {\n    return get(this.localUser, 'streams', {})\n  }\n\n  public get streamIds(): any[] {\n    return Object.keys(this._cachedLocalStreams).reduce((ids: any, key: string) => {\n      const streamUuid = this._cachedLocalStreams[key].stream.streamUuid\n      ids.push(streamUuid)\n      return ids\n    }, [])\n  }\n\n  //@ts-ignore\n  public get streamList(): EduStreamData[] {\n    return this._streamList\n  }\n\n  public get userList(): EduUserData[] {\n    return this._userList;\n  }\n\n  public get userIds(): string[] {\n    return this._userList.map((user: EduUserData) => user.user.userUuid)\n  }\n\n  public set localUser(v: EduUserData) {\n    this._localUser = v\n    EduLogger.info(`EDU-STATE EduDataController: [${this._id}]  access localUser: `, v, ` _localUser: `, JSON.stringify(this._localUser))\n  }\n\n  public get localUser(): EduUserData {\n    return this._localUser as EduUserData\n  }\n\n  public get localStreamData(): EduStreamData {\n    return this._cachedLocalStreams['main'] as EduStreamData\n  }\n\n  public get localScreenShareStream(): EduStreamData {\n    return this._cachedLocalStreams['screen'] as EduStreamData\n  }\n\n  public isLocalStreams(stream: EduStream) {\n    return this.localUserUuid === stream.userInfo.userUuid\n    // return this.streamIds.includes(streamUuid)\n  }\n\n  public isLocalUser(userUuid: string) {\n    return this.localUserUuid === userUuid\n  }\n\n  addStreams(rawStreams: EduStreamData[], seqId?: number) {\n    const cachedUserIds: string[] = this._userList.map((it: EduUserData) => it.user.userUuid).concat([this.localUserUuid])\n    const streams = rawStreams.filter((it: EduStreamData) => cachedUserIds.includes(it.stream.userInfo.userUuid))\n    EduLogger.info(`[${this._id}] before [${seqId}]#addStreams: `, ' user List ', this._userList, ' stream List ', this._streamList, ' streams ', streams)\n    for (let newItem of streams) {\n      const newStream = newItem.stream\n      const targetIdx = this._streamList.findIndex((it: EduStreamData) => it.stream.streamUuid === newStream.streamUuid)\n      const targetStream = this._streamList[targetIdx]\n      if (targetStream) {\n        EduLogger.info(`EDU-STATE addStreams: [${this._id}] before [${seqId}]#addStreams: `, this._userList, this._streamList, ' targetStream ', targetStream, ' newItem ', newItem)\n        if (this.streamIsOffline(newItem)) {\n          // 删除stream\n          EduLogger.info(`EDU-STATE addStreams: [${this._id}] streamIsOffline: `, newItem, targetStream)\n          this._streamList.splice(targetIdx, 1)\n          // update local\n          if (this.isLocalStreams(targetStream.stream)) {\n            EduLogger.info(`EDU-STATE addStreams: [${this._id}] before [${seqId}]#addStreams: `, this._userList, this._streamList, ' targetStream ', targetStream, ' newItem ', newItem)\n            this.removeLocalStream(targetStream.stream.streamUuid, `addStreams[${seqId}]`)\n          } else {\n            // sync remote user\n            // if (!this.roomManager.syncingData) {\n            this.fire('remote-stream-removed', {stream: newItem.stream})\n            // }\n          }\n        } else {\n          // 更新stream\n          EduLogger.info(`EDU-STATE EduDataController: [${this._id}] update stream addStreams`, newItem)\n          this._streamList[targetIdx] = newItem;\n          if (this.isLocalStreams(targetStream.stream)) {\n            if (this.isScreenShare(targetStream.stream.streamUuid)) {\n              this.upsertLocalStream('screen', newItem, seqId)\n            }\n            if (this.isMainStream(targetStream.stream.streamUuid)) {\n              this.upsertLocalStream('main', newItem, seqId)\n            }\n          } else {\n            this.fire('remote-stream-updated', {stream: newItem.stream})\n          }\n        }\n      }\n      if (!targetStream) {\n        // 新增stream\n        EduLogger.info(`EDU-STATE EduDataController: [${this._id}] add stream addStreams`, newItem)\n        this._streamList.push(newItem)\n        if (this.isLocalStreams(newItem.stream)) {\n          if (this.isScreenShare(newItem.stream.streamUuid)) {\n            this.upsertLocalStream('screen', newItem, seqId)\n          }\n          if (this.isMainStream(newItem.stream.streamUuid)) {\n            this.upsertLocalStream('main', newItem, seqId)\n          }\n        } else {\n          this.fire('remote-stream-added', {stream: newItem.stream})\n        }\n      }\n    }\n  }\n\n  // updateStreams(streams: EduStreamData[]) {\n  //   for (let newItem of streams) {\n  //     const newStream = newItem.stream\n  //     const targetIdx = this._streamList.findIndex((it: EduStreamData) => it.stream.streamUuid === newStream.streamUuid)\n  //     const targetStream = this._streamList[targetIdx]\n  //     if (targetStream && targetStream.ts <= newItem.ts) {\n  //       if (newItem.state === 0) {\n  //         // 删除stream\n  //         EduLogger.info(\"删除stream updateStreams\", \" new \", newItem, \" prev \", targetStream)\n  //         this._streamList.splice(targetIdx, 1)\n  //         if (this.isLocalStreams(targetStream.stream.streamUuid)) {\n  //           this.removeLocalStream(targetStream.stream.streamUuid)\n  //         } else {\n  //           // if (!this.roomManager.syncingData) {\n  //           this.fire('remote-stream-removed', {stream: newItem.stream})\n  //           // }\n  //         }\n  //       } else {\n  //         // 更新stream\n  //         EduLogger.info(\"更新stream updateStreams\", newItem)\n  //         this._streamList[targetIdx] = newItem;\n  //         if (this.isLocalStreams(targetStream.stream.streamUuid)) {\n  //           if (this.isMainStream(targetStream.stream.streamUuid)) {\n  //             this.upsertLocalStream('main', newItem)\n  //           }\n  //           if (this.isScreenShare(targetStream.stream.streamUuid)) {\n  //             this.upsertLocalStream('screen', newItem)\n  //           }\n  //         } else {\n  //           // if (!this.roomManager.syncingData) {\n  //           this.fire('remote-stream-updated', {stream: newItem.stream})\n  //           // }\n  //         }\n  //       }\n  //     }\n  //     if (!targetStream) {\n  //       // 新增stream\n  //       EduLogger.info(\"新增stream updateStreams\", newItem)\n  //       this._streamList.push(newItem)\n  //       if (this.isLocalStreams(newItem.stream.streamUuid)) {\n  //         if (this.isScreenShare(newItem.stream.streamUuid)) {\n  //           this.upsertLocalStream('screen', newItem)\n  //         }\n  //         if (this.isMainStream(newItem.stream.streamUuid)) {\n  //           this.upsertLocalStream('main', newItem)\n  //         }\n  //       } else {\n  //         // if (!this.roomManager.syncingData) {\n  //         //   EduLogger.info(\"remote-stream-added\", newItem, targetStream)\n  //         this.fire('remote-stream-added', {stream: newItem.stream})\n  //         // }\n  //       }\n  //     }\n  //   }\n  // }\n\n  private isMainStream(streamUuid: string): boolean {\n    const mainStream = this._cachedLocalStreams['main']\n    if (mainStream && mainStream.stream.streamUuid === streamUuid) {\n      return true\n    }\n    return false\n  }\n\n  private isScreenShare(streamUuid: string): boolean {\n    const screenStream = this._cachedLocalStreams['screen']\n    if (screenStream && screenStream.stream.streamUuid === streamUuid) {\n      return true\n    }\n    return false\n  }\n\n  removeTargetStream(targetStream: EduStreamData) {\n    const targetIndex = this._streamList\n    .findIndex((it: EduStreamData) => \n      it.stream.streamUuid === targetStream.stream.streamUuid)\n    if (targetIndex !== -1) {\n      this._streamList.splice(targetIndex, 1)\n    }\n  }\n\n  removeLocalStream(streamUuid: string, seqId?: any): void {\n    EduLogger.info(`[EDU-STATE] [${this._id}] seqId: [${seqId}] removeLocalStream remove after, streamUuid `, streamUuid)\n    let type = 'main'\n    if (this.isMainStream(streamUuid)) {\n      type = 'main'\n    }\n    if (this.isScreenShare(streamUuid)) {\n      type = 'screen'\n    }\n\n    switch(type) {\n      case 'main': {\n        const mainStream = this._cachedLocalStreams['main']\n        if (mainStream) {\n          EduLogger.info(`[EDU-STATE] [${this._id}] seqId: [${seqId}] removeLocalStream, streamList: `, JSON.stringify(this._streamList), 'userList: ', JSON.stringify(this._userList), ' cachedLocalStreams ', JSON.stringify(this._cachedLocalStreams))\n          mainStream.modifyStream({\n            streamUuid: streamUuid,\n            hasAudio: false,\n            hasVideo: false,\n            videoSourceType: EduVideoSourceType.camera,\n            audioSourceType: EduAudioSourceType.mic,\n            state: 0,\n            token: '',\n            userInfo: {\n              userUuid: this.localUser.user.userUuid,\n              userName: this.localUser.user.userName,\n              role: this.localUser.user.role,\n            }\n          })\n          this.removeTargetStream(mainStream)\n          EduLogger.info(`${Date.now()} local-stream-removed local-stream`, mainStream, this._userList)\n          // TODO: removed\n          // this.fire('local-stream-updated', {\n          //   action: 'removed',\n          //   stream: mainStream.stream,\n          //   type: 'main',\n          //   seqId\n          // })\n          this.fire('local-stream-removed', {\n            stream: mainStream.stream,\n            type: 'main',\n            seqId\n          })\n        }\n        break;\n      }\n      case 'screen': {\n        const screenStream = this._cachedLocalStreams['screen'] as EduStreamData\n        if (screenStream) {\n          screenStream.modifyStream({\n            streamUuid: streamUuid,\n            hasAudio: false,\n            hasVideo: false,\n            videoSourceType: EduVideoSourceType.screen,\n            audioSourceType: EduAudioSourceType.mic,\n            state: 0,\n            token: '',\n            userInfo: {\n              userUuid: this.localUser.user.userUuid,\n              userName: this.localUser.user.userName,\n              role: this.localUser.user.role,\n            }\n          })\n          this.removeTargetStream(screenStream)\n          EduLogger.info(`${Date.now()} local-stream-removed screen`, screenStream, this._userList)\n          // TODO: removed\n          // this.fire('local-stream-updated', {\n          //   action: 'removed',\n          //   stream: screenStream.stream,\n          //   type: 'screen',\n          //   seqId\n          // })\n          this.fire('local-stream-removed', {\n            stream: screenStream.stream,\n            type: 'screen'\n          })\n        }\n        break;\n      }\n    }\n  }\n\n  removeStreams(streams: EduStreamData[], seqId?: number) {   \n    EduLogger.info(`[EDU-STATE] [${this._id}] seqId: [${seqId}] before removeStreams in target: `,  ' streams ', streams, ' _userList ', this._userList, ' _streamList ', this._streamList) \n    for (let newItem of streams) {\n      const newStream = newItem.stream\n      const targetIdx = this._streamList.findIndex((it: EduStreamData) => it.stream.streamUuid === newStream.streamUuid)\n      const targetStream = this._streamList[targetIdx]\n      EduLogger.info(`[EDU-STATE] [${this._id}] seqId: [${seqId}] before removeStreams in target: `,  ' streams ', streams, ' _userList ', this._userList, ' _streamList ', this._streamList) \n      if (targetStream) {\n        EduLogger.info(`[EDU-STATE] [${this._id}] seqId: [${seqId}] removeStreams in condition, streamUuid`, targetStream.stream.streamUuid, \" newItem\", JSON.stringify(newItem), ' streams', JSON.stringify(streams))\n        EduLogger.info(`[EDU-STATE] [${this._id}] seqId: [${seqId}] removeStreams`, newItem)\n        this._streamList.splice(targetIdx, 1)\n        EduLogger.info(`[EDU-STATE] [${this._id}] seqId: [${seqId}] removeStreams remove after, streamUuid`, targetStream, \" newItem\", JSON.stringify(newItem), ' streams', JSON.stringify(streams), this.isLocalStreams(targetStream.stream))\n        if (this.isLocalStreams(targetStream.stream)) {\n          EduLogger.info(`[EDU-STATE] [${this._id}] seqId: [${seqId}] before removeLocalStream, streamUuid`, targetStream, \" newItem\", JSON.stringify(newItem), ' streams', JSON.stringify(streams), this.isLocalStreams(targetStream.stream))\n          this.removeLocalStream(targetStream.stream.streamUuid, `removeStreams[${seqId}]`)\n        } else {\n          this.fire('remote-stream-removed', {stream: newItem.stream})\n        }\n      }\n    }\n  }\n\n  userIsOffline(user: EduUserData) {\n    return user.state === 0\n  }\n\n  streamIsOffline(stream: EduStreamData) {\n    return stream.state === 0\n  }\n\n  addUserList(list: EduUserData[], seqId?: number) {\n    for (let newTargetItem of list) {\n      const idx = this._userList.findIndex((it: EduUserData) => it.user.userUuid === newTargetItem.user.userUuid)\n      const target = this._userList[idx]\n      // update user in list\n      if (target) {\n        if (this.userIsOffline(newTargetItem)) {\n          EduLogger.info(\"[EDU-STATE] remove user in addUserList before\", JSON.stringify(list))\n          this._userList.splice(idx, 1)\n          this.removeStreams(this._streamList.filter((it: EduStreamData) => it.stream.userInfo.userUuid === newTargetItem.user.userUuid), seqId)\n          EduLogger.info(\"[EDU-STATE] remove user in addUserList after \", JSON.stringify(newTargetItem))\n          this.setRoomStatus({\n            onlineUsersCount: MessageSerializer.onlineUsersCount({\n              users: this._userList\n            })\n          })\n\n          if (this.isLocalUser(target.user.userUuid)) {\n            this.localUser.updateState(0)\n            this.fire('local-user-removed', {user: newTargetItem.user})\n          } else {\n            this.fire('remote-user-removed', {user: newTargetItem.user})\n          }\n        } else {\n          this._userList[idx] = newTargetItem\n          EduLogger.info(\"[EDU-STATE] update user in addUserList before\", JSON.stringify(newTargetItem))\n\n          this.setRoomStatus({\n            onlineUsersCount: MessageSerializer.onlineUsersCount({\n              users: this._userList\n            })\n          })\n\n          if (this.isLocalUser(target.user.userUuid)) {\n            this.localUser.updateUser({\n              ...this.localUser.user,\n              ...newTargetItem.user,\n              updateTime: newTargetItem.ts,\n              rtmToken: newTargetItem.hasOwnProperty('rtmToken') ? newTargetItem.rtmToken : this.localUser.rtmToken\n            })\n            this.fire('local-user-updated', {user: newTargetItem.user})\n          } else {\n            this.fire('remote-user-updated', {user: newTargetItem.user})\n          }\n        }\n      }\n      // add user to list\n      if (!target) {\n        EduLogger.info(\"[EDU-STATE] add user in addUserList before\", JSON.stringify(newTargetItem))\n        this._userList.push(newTargetItem)\n\n        this.setRoomStatus({\n          onlineUsersCount: MessageSerializer.onlineUsersCount({\n            users: this._userList\n          })\n        })\n        if (this.isLocalUser(newTargetItem.user.userUuid)) {\n          this.localUser.updateUser({\n            ...this.localUser.user,\n            ...newTargetItem.user,\n            updateTime: newTargetItem.ts,\n            rtmToken: newTargetItem.hasOwnProperty('rtmToken') ? newTargetItem.rtmToken : this.localUser.rtmToken\n          })\n          this.fire('local-user-updated', {user: newTargetItem.user})\n        } else {\n          this.fire('remote-user-added', {user: newTargetItem.user})\n        }\n      }\n    }\n  }\n\n  removeUserList(list: EduUserData[], seqId?: number) {\n    EduLogger.info(`[EDU-STATE] [${this._id}] seqId: [${seqId}] removeUserList: `, JSON.stringify(list), 'userList: ', this._userList, ', streamList: ', this._streamList)\n    for (let targetItem of list) {\n      const idx = this._userList.findIndex((it: EduUserData) => it.user.userUuid === targetItem.user.userUuid)\n      const target = this._userList[idx]\n      // remove user in list\n      if (target) {\n        EduLogger.info(`[EDU-STATE] [${this._id}] seqId: [${seqId}] `, target)\n        this._userList.splice(idx, 1)\n\n        this.setRoomStatus({\n          onlineUsersCount: MessageSerializer.onlineUsersCount({\n            users: this._userList\n          })\n        })\n        EduLogger.info(`[EDU-STATE] [${this._id}] seqId: [${seqId}] before removeUserList in target: `, ' isLocalUser', this.isLocalUser(targetItem.user.userUuid), ' list: ', JSON.stringify(list))\n        this.removeStreams(this._streamList.filter((it: EduStreamData) => it.stream.userInfo.userUuid === targetItem.user.userUuid), seqId)\n        EduLogger.info(`[EDU-STATE] [${this._id}] seqId: [${seqId}] after removeUserList in target: `, '  targetItem ', targetItem, ' userList ', this._userList)\n        if (this.isLocalUser(targetItem.user.userUuid)) {\n          this.localUser.updateState(0)\n          this.fire('local-user-removed', {user: targetItem.user})\n        } else {\n          // if (!this.roomManager.syncingData) {\n            this.fire('remote-user-removed', {user: targetItem.user})\n          // }\n        }\n      }\n    }\n  }\n\n  updateUserState(data: EduUserData) {\n    if (this.isLocalUser(data.user.userUuid)) {\n      this.localUser.updateUser(data)\n    } else {\n      const findUser = this._userList.find((it: any) => it.user.userUuid === data.user.userUuid)\n      if (findUser) {\n        findUser.updateUser(data)\n      }\n    }\n  }\n\n  updateUserProperties(data: EduUserData) {\n    if (this.isLocalUser(data.user.userUuid)) {\n      this.localUser.updateUser(data)\n    } else {\n      const findUser = this._userList.find((it: any) => it.user.userUuid === data.user.userUuid)\n      if (findUser) {\n        findUser.updateUser(data)\n      }\n    }\n  }\n\n  updateUserList(onlineUsers: EduUserData[], offlineUsers: EduUserData[], seqId?: number) {\n    EduLogger.info(`[${this._id}] before [${seqId}]#updateUserList: `, this._userList, this._streamList)\n    this.addUserList(onlineUsers, seqId)\n    this.removeUserList(offlineUsers, seqId)\n    EduLogger.info(`[${this._id}] after [${seqId}]#updateUserList: `, this._userList, this._streamList)\n  }\n\n  updateStreamList(onlineStreams: EduStreamData[], offlineUsers: EduStreamData[], operatorUser: any, seqId?: number) {\n    EduLogger.info(`[${this._id}] before [${seqId}]#updateStreamList: `, this._userList, this._streamList)\n    this.addStreams(onlineStreams, seqId)\n    this.removeStreams(offlineUsers, seqId)\n    EduLogger.info(`[${this._id}] after [${seqId}]#updateStreamList: `, this._userList, this._streamList)\n  }\n\n  updateUser(newTarget: EduUserData, seqId?: number) {\n    EduLogger.info(`EDU-STATE: [${this._id}] updateUser, ${[seqId]}`, this._userList)\n    EduLogger.info(`EDU-STATE: [${this._id}] updateUser, ${[seqId]}`, newTarget)\n    const idx = this._userList.findIndex((it: EduUserData) => it.user.userUuid === newTarget.user.userUuid)\n    const targetItem = this._userList[idx]\n    if (targetItem) {\n      if (targetItem.state === 0) {\n        this._userList.splice(idx, 1)\n        EduLogger.info(`removeStreams, EDU-STATE: [${this._id}] updateUser, ${[seqId]}`, this._userList)\n        EduLogger.info(`removeStreams, EDU-STATE: [${this._id}] updateUser, ${[seqId]}`, newTarget)\n        EduLogger.info(`removeStreams, EDU-STATE: [${this._id}] updateUser, ${[seqId]}`, targetItem)\n        this.removeStreams(this._streamList.filter((it: EduStreamData) => it.stream.userInfo.userUuid === targetItem.user.userUuid), seqId)\n\n        this.setRoomStatus({\n          onlineUsersCount: MessageSerializer.onlineUsersCount({\n            users: this._userList\n          })\n        })\n\n        if (this.isLocalUser(targetItem.user.userUuid)) {\n          EduLogger.info(`isLocalUser, EDU-STATE: [${this._id}] updateUser, ${[seqId]}, local-user-remove`, targetItem)\n          this.localUser.updateState(0)\n          this.fire('local-user-removed', {\n            user: targetItem.user\n          })\n        } else {\n          // if (!this.roomManager.syncingData) {\n            this.fire(\"remote-user-removed\", {\n              user: targetItem.user\n            })\n          // }\n        }\n      } else {\n        this._userList[idx] = newTarget\n\n        this.setRoomStatus({\n          onlineUsersCount: MessageSerializer.onlineUsersCount({\n            users: this._userList\n          })\n        })\n\n        if (this.isLocalUser(newTarget.user.userUuid)) {\n          this.localUser.updateUser({\n            ...this.localUser.user,\n            ...newTarget.user,\n            updateTime: newTarget.ts,\n            rtmToken: newTarget.hasOwnProperty('rtmToken') ? newTarget.rtmToken : this.localUser.rtmToken\n          })\n          this.fire('local-user-updated', {\n            user: newTarget.user\n          })\n        } else {\n          // if (!this.roomManager.syncingData) {\n          this.fire(\"remote-user-updated\", {\n            user: newTarget.user\n          })\n          // }\n        }\n      }\n    } else {\n      this._userList.push(newTarget)\n\n      this.setRoomStatus({\n        onlineUsersCount: MessageSerializer.onlineUsersCount({\n          users: this._userList\n        })\n      })\n\n      if (this.isLocalUser(newTarget.user.userUuid)) {\n        this.fire('local-user-updated', {\n          user: newTarget.user\n        })\n      } else {\n        // if (!this.roomManager.syncingData) {\n        this.fire(\"remote-user-added\", {\n          user: newTarget.user\n        })\n        // }\n      }\n    }\n  }\n\n  // private get roomPrevTime(): number {\n  //   if (this._classroom.time) {\n  //     return this._classroom.time\n  //   }\n  //   return 0\n  // }\n\n  upsertTargetStream(targetStream: EduStreamData) {\n    const targetIndex = this._streamList\n    .findIndex((it: EduStreamData) => \n      it.stream.streamUuid === targetStream.stream.streamUuid)\n    if (targetIndex !== -1) {\n      this._streamList[targetIndex] = targetStream\n    } else {\n\n      this._streamList.push(targetStream)\n\n      this.setRoomStatus({\n        onlineUsersCount: MessageSerializer.onlineUsersCount({\n          users: this._userList\n        })\n      })\n    }\n  }\n\n  upsertLocalStream(type: string, data: EduStreamData, seqId?: any) {\n    EduLogger.info(`[EDU-STATE] upsertLocalStream: [${seqId}] type: ${type}, data: ${JSON.stringify(data)}`)\n    if (type === 'main') {\n      const mainStream = this._cachedLocalStreams['main'] as EduStreamData\n      EduLogger.info(\"mainStream  \", mainStream)\n      if (mainStream) {\n        mainStream.update(data)\n        this.upsertTargetStream(mainStream)\n        this.fire('local-stream-updated', {\n          data: this._cachedLocalStreams['main'],\n          type: 'main',\n          seqId\n        })\n      } else {\n        const streamData = new EduStreamData({\n          state: data.state,\n          streamUuid: data.stream.streamUuid,\n          streamName: data.stream.streamName,\n          videoSourceType: data.stream.videoSourceType,\n          audioSourceType: data.stream.audioSourceType,\n          hasVideo: data.stream.hasVideo,\n          hasAudio: data.stream.hasAudio,\n          userInfo: {\n            userUuid: this.localUser.user.userUuid,\n            userName: this.localUser.user.userName,\n            role: this.localUser.user.role,\n          },\n          updateTime: data.ts,\n          token: data.token\n        })\n        this._cachedLocalStreams['main'] = streamData\n        this.upsertTargetStream(this._cachedLocalStreams['main'])\n        this.fire('local-stream-updated', {\n          data: this._cachedLocalStreams['main'],\n          type: 'main'\n        })\n      }\n    }\n    \n    if (type === 'screen') {\n      const screenStream = this._cachedLocalStreams['screen'] as EduStreamData\n      if (screenStream) {\n        screenStream.update(data)\n        this.upsertTargetStream(screenStream)\n        this.fire('local-stream-updated', {\n          data: this._cachedLocalStreams[type],\n          type: 'screen'\n        })\n      } else {\n        const newStream = new EduStreamData({\n          state: data.state,\n          streamUuid: data.stream.streamUuid,\n          streamName: data.stream.streamName,\n          videoSourceType: EduVideoSourceType.screen,\n          audioSourceType: EduAudioSourceType.mic,\n          hasVideo: data.stream.hasVideo,\n          hasAudio: data.stream.hasAudio,\n          userInfo: {\n            userUuid: this.localUser.user.userUuid,\n            userName: this.localUser.user.userName,\n            role: this.localUser.user.role,\n          },\n          token: data.token\n        })\n        this._cachedLocalStreams['screen'] = newStream\n        const screenStream = this._cachedLocalStreams['screen'] as EduStreamData\n        this.upsertTargetStream(screenStream)\n        this.fire('local-stream-updated', {\n          data: this._cachedLocalStreams[type],\n          type: 'screen'\n        })\n      }\n    }\n  }\n\n  updateClassroomAttrs(params: any) {\n    // const prevTime = get(this._roomAttrs, 'time', 0)\n    // if (prevTime <= params.time) {\n    this._roomAttrs = {\n      ...this._roomAttrs,\n      ...params\n    }\n    // }\n  }\n\n  updateClassroom(params: Partial<EduClassroomAttrs>) {\n    // const prevTime = this.roomPrevTime\n    // const curTime = get(params, 'time', 0) as number\n    // if (prevTime <= curTime) {\n      // this._classroom = {\n      //   ...this._classroom,\n      //   ...params,\n      // }\n      // EduLogger.info('updateClassroom', this._classroom, params)\n    // }\n  }\n\n  get classroom() {\n    return {\n      roomInfo: this._roomInfo,\n      roomStatus: this._roomStatus,\n      roomProperties: this._roomProperties\n    }\n  }\n\n  getClassroom() {\n    return this.classroom\n  }\n\n  reset() {\n    this._localUserUuid = ''\n    this.localUser = undefined as any\n    this._streamList = []\n    this._userList = []\n    this._cachedLocalStreams = {}\n    // this._classroom = {} as EduClassroomAttrs\n    this._roomAttrs = {}\n\n    EduLogger.info(`reset data controller ${this._id}`)\n\n    this._roomInfo = {}\n    this._roomStatus = {}\n    this._roomProperties = {}\n    this._roomStatus = {}\n    this._localUserData = undefined\n    this._localStreams = []\n    this._minSeqId = 0\n    this._latestSeqId = 0\n    if (this.retryTimer !== null) {\n      clearTimeout(this.retryTimer)\n    }\n    this.retryTimer = null\n  }\n\n  private _roomInfo: any = {}\n\n  get roomInfo() {\n    return this._roomInfo\n  }\n\n  private _roomProperties: any = {}\n\n  get roomProperties() {\n    return this._roomProperties\n  }\n\n  private _users: EduUserData[] = []\n\n  get users() {\n    return this._users\n  }\n\n  private _streams: EduStreamData[] = []\n\n  get streams() {\n    return this._streams\n  }\n\n  private _roomStatus: any = {}\n\n  get roomState() {\n    return this._roomStatus;\n  }\n\n  fire(evtName: string, ...args: any[]) {\n    this.roomManager.emit(evtName, ...args)\n  }\n\n  setRoomInfo(state: any) {\n    const prevState = this._roomInfo\n\n    const curState = {\n      ...prevState,\n      ...state\n    }\n\n    EduLogger.info(\"roomInfo \", curState)\n    \n    this._roomInfo = curState\n    if (diff(prevState, curState)) {\n      this.fire('classroom-property-updated', this.classroom)\n    }\n  }\n\n  setRoomStatus(state: any) {\n    const prevState = this._roomStatus\n\n    const curState = {\n      ...prevState,\n      ...state\n    }\n    \n    this._roomStatus = curState\n    EduLogger.info(\">>> setRoomStatus \", state)\n    if (diff(prevState, curState)) {\n      this.fire('classroom-property-updated', this.classroom)\n    }\n  }\n\n  setRoomProperties(roomProperties: any) {\n    const prevState = this._roomProperties\n\n    const curState = {\n      ...prevState,\n      ...roomProperties\n    }\n    \n    this._roomProperties = curState\n    EduLogger.info(\">>> setRoomProperties \", curState)\n    if (diff(prevState, curState)) {\n      this.fire('classroom-property-updated', this.classroom)\n    }\n  }\n\n  private _localUserData?: EduUserData\n\n  get localUserData(): EduUserData {\n    return this._localUserData as EduUserData;\n  }\n\n  setLocalData(roomData: any) {\n    this.setLocalUserUuid(roomData.user.uuid)\n    this.setUserToken(roomData.user.userToken)\n\n    const mainStreamUuid = get(roomData, 'user.streamUuid')\n    const mainRtcToken = get(roomData, 'user.rtcToken')\n    const rawLocalStreams = get(roomData, 'user.streams', [])\n    const rtcStreamInfo: Record<string, any> = {\n      'main': {\n        streamUuid: mainStreamUuid,\n        rtcToken: mainRtcToken,\n      }\n    }\n    if (roomData) {\n      rawLocalStreams.reduce((acc: any, item: any) => {\n        if (rtcStreamInfo.main.streamUuid === item.streamUuid) return acc\n        if (item.videoSourceType === EduVideoSourceType.screen) {\n          acc['screen'] = {\n            streamUuid: item.streamUuid,\n            rtcToken: item.rtcToken\n          }\n        }\n        return acc;\n      }, rtcStreamInfo)\n    }\n    this.upsertLocalUser({\n      userUuid: roomData.user.uuid,\n      userName: roomData.user.name,\n      role: roomData.user.role as any,\n      isChatAllowed: !!roomData.user.muteChat,\n      userProperties: roomData.user.properties,\n      rtmToken: roomData.user.rtmToken,\n    }, rtcStreamInfo)\n    \n    for (let key of Object.keys(rtcStreamInfo)) {\n      if (rtcStreamInfo[key]) {\n        const {streamUuid, rtcToken} = rtcStreamInfo[key]\n        const curStreamData = rawLocalStreams.find((it: any) => it.streamUuid === streamUuid)\n        let hasVideo = curStreamData ? curStreamData.videoState : true\n        let hasAudio = curStreamData ? curStreamData.audioState : true\n\n        let state = curStreamData ? curStreamData.state : 0\n\n        const tmpStreamData = new EduStreamData({\n          streamUuid: streamUuid,\n          streamName: '',\n          videoSourceType: 0,\n          audioSourceType: 0,\n          hasVideo: hasVideo,\n          hasAudio: hasAudio,\n          userInfo: {\n            userUuid: this.localUser.user.userUuid,\n            userName: this.localUser.user.userName,\n            role: this.localUser.user.role\n          },\n          state: state\n        })\n        this.upsertLocalStream(key, tmpStreamData)\n      }\n    }\n\n    // const tmpLocalStreams = []\n\n    // for (let key of Object.keys(this._cachedLocalStreams)) {\n    //   tmpLocalStreams.push(this._cachedLocalStreams[key])\n    // }\n    // this.setLocalStreams(tmpLocalStreams)\n    // EduLogger.info(\"userToken \", this.userToken)\n    // EduLogger.info(\"localUser \", this._localUser)\n    // EduLogger.info(\"localStreamsMap \", this._cachedLocalStreams)\n  }\n\n  private _localStreams: EduStreamData[] = []\n\n  setLocalUser(user: EduUserData) {\n    const prevState = this.localUserData\n    if (diff(prevState, user)) {\n      if (!prevState) {\n        this._localUserData = user\n      } else {\n        prevState.updateUser(user)\n      }\n      this.fire('local-user-updated', {\n        user: this.localUserData\n      })\n    }\n  }\n\n  // setLocalStreams(streams: EduStreamData[]) {\n  //   if (!streams.length) {\n  //     return\n  //   }\n  //   const prevState = this._localStreams\n  //   EduLogger.info(\">>>>>>>>>>. setLocalStreams\", streams, prevState)\n  //   if (!prevState.length) {\n  //     this._localStreams = streams\n  //     if (this._localStreams.length) {\n  //       for (let item of streams) {\n  //         this.fire('local-stream-updated', {\n  //           stream: item,\n  //           type: item.stream.videoSourceType === EduVideoSourceType.screen ? 'screen' : 'main'\n  //         })\n  //       }\n  //     }\n  //     return\n  //   }\n  //   if (diff(prevState, streams)) {\n  //     const updatedStreams: EduStreamData[] = []\n  //     const newState = prevState.reduce((acc: EduStreamData[], it: EduStreamData) => {\n  //       const newStreamValue = streams.find((t: any) => t.stream.streamUuid === it.stream.streamUuid)\n  //       if (newStreamValue) {\n  //         it.update(newStreamValue as any)\n  //         updatedStreams.push(it)\n  //         acc.push(it)\n  //       } else {\n  //         acc.push(it)\n  //       }\n  //       return acc\n  //     }, [])\n  //     this._localStreams = newState\n  //     if (this._localStreams.length) {\n  //       for (let item of updatedStreams) {\n  //         this.fire('local-stream-updated', {\n  //           stream: item,\n  //           type: item.stream.videoSourceType === EduVideoSourceType.screen ? 'screen' : 'main'\n  //         })\n  //       }\n  //     }\n  //   }\n  // }\n\n  setRawUsers(rawUsers: any[]) {\n    const localUuid = this.localUserUuid\n    const users = EduUserData.fromArray(rawUsers.map((user: any) => user))\n    const streams = EduStreamData.fromArray(rawUsers\n      .filter((u: any) => u.streams)\n      .reduce((acc: any, u: any) => {\n        let streams = u.streams.map((stream: any) => (\n          {\n            ...stream,\n            userInfo: {\n              userUuid: u.userUuid,\n              userName: u.userName,\n              role: u.role\n            }\n          }\n        ))\n        return acc.concat(streams)\n      }, []))\n    EduLogger.info(\"users: \", JSON.stringify(users), \" streams: \", JSON.stringify(streams), JSON.stringify(rawUsers))\n    if (localUuid) {\n      const localUser = users.find((it: EduUserData) => it.user.userUuid === localUuid)\n      if (localUser) {\n        this.upsertLocalUser({\n          userUuid: localUser.user.userUuid,\n          userName: localUser.user.userName,\n          role: localUser.user.role as any,\n          isChatAllowed: !!localUser.user.isChatAllowed,\n          userProperties: localUser.user.userProperties,\n        })\n      }\n      const onlineUsers = users.filter((it: EduUserData) => it.state !== 0)\n      const offlineUsers = users.filter((it: EduUserData) => it.state === 0)\n      this.updateUserList(onlineUsers, offlineUsers)\n      const onlineStreams = streams.filter((it: EduStreamData) => it.state !== 0)\n      const offlineStreams = streams.filter((it: EduStreamData) => it.state === 0)\n      this.updateStreamList(onlineStreams, offlineStreams, null as any)\n    }\n  }\n\n  setRemoteOnlineUsers(users: EduUserData[]) {\n    const prevState = this._users\n    if (!prevState.length) {\n      this._users = prevState.concat(users)\n      if (this._users.length) {\n        this.fire('remote-user-added', {\n          users: this._users\n        })\n      }\n      return\n    }\n\n    if (diff(prevState, users)) {\n      const newState = prevState.reduce((acc: EduUserData[], it: any) => {\n        const newUserValue = users.find((t: EduUserData) => t.user.userUuid === it.user.userUuid)\n        if (newUserValue) {\n          const user = {\n            ...it,\n            ...newUserValue\n          }\n          acc.push(user)\n        } else {\n          acc.push(it)\n        }\n        return acc\n      }, [])\n      this._users = newState\n      if (this._users.length) {\n        this.fire('remote-user-updated', {\n          users: newState\n        })\n      }\n    }\n  }\n\n  setRemoteOfflineUsers(ids: string[]) {\n    if (ids.length) {\n      const offlineUsers = this._users\n      .filter((it: EduUserData) => \n        ids.includes(it.user.userUuid))\n      this._users = this._users\n        .filter((it: any) => !ids.includes(it.userUuid))\n\n      const offlineStreams = this._streams\n        .filter((it: EduStreamData) => ids.includes(it.stream.userInfo.userUuid))\n      this._streams = this._streams\n        .filter((it: EduStreamData) => !ids.includes(it.stream.userInfo.userUuid))\n      if (offlineStreams) {\n        this.fire('remote-stream-removed', {\n          streams: offlineStreams\n        })\n      }\n      this.fire('remote-user-removed', {\n        users: offlineUsers\n      })\n    }\n  }\n\n  setRemoteUsers(newUsers: EduUserData[]) {\n    const onlineUsers = newUsers.filter((it: any) => it.state !== 0)\n    const offlineUserIds = newUsers\n      .filter((it: any) => it.state === 0)\n      .map((it: any) => it.user.userUuid)\n    this.setRemoteOnlineUsers(onlineUsers)\n    this.setRemoteOfflineUsers(offlineUserIds)\n  }\n\n  setRemoteOnlineStreams(streams: EduStreamData[]) {\n    if (!streams.length) {\n      return;\n    }\n    const prevState = this._streams\n    if (!prevState.length) {\n      this._streams = prevState.concat(streams)\n      if (this._streams.length) {\n        this.fire('remote-stream-added', {\n          streams: this._streams\n        })\n      }\n      return\n    }\n\n    if (diff(prevState, streams)) {\n      const updatedStreams: EduStreamData[] = []\n      const newState = prevState.reduce((acc: EduStreamData[], it: EduStreamData) => {\n        const newStreamValue = streams.find((t: any) => t.stream.streamUuid === it.stream.streamUuid)\n        if (newStreamValue) {\n          // const stream = {\n          //   ...it,\n          //   ...newStreamValue\n          // }\n          it.update(newStreamValue as any)\n          updatedStreams.push(it)\n          acc.push(it)\n        } else {\n          acc.push(it)\n        }\n        return acc\n      }, [])\n      this._streams = newState\n      EduLogger.info(\"setRemoteStreams 1301 \", this._streams, streams)\n      if (this._streams.length) {\n        this.fire('remote-stream-updated', {\n          streams: updatedStreams\n        })\n      }\n    }\n  }\n\n  setRemoteOfflineStreams(ids: string[]) {\n    if (!ids.length) {\n      return\n    }\n    const offlineStreams = this._streams\n      .filter((it: EduStreamData) => \n        ids.includes(it.stream.streamUuid))\n\n    if (offlineStreams.length) {\n      this._streams = this._streams\n        .filter((it: EduStreamData) => !ids.includes(it.stream.streamUuid))        \n      this.fire('remote-stream-removed', {\n        streams: offlineStreams\n      })\n    }\n  }\n\n  setRemoteStreams(newStreams: EduStreamData[]) {\n    const onlineStreams = newStreams.filter((it: EduStreamData) => it.state !== 0)\n    const offlineIds = newStreams.filter((it: EduStreamData) => it.state === 0).map((it: EduStreamData) => it.stream.streamUuid)\n    this.setRemoteOnlineStreams(onlineStreams)\n    this.setRemoteOfflineStreams(offlineIds)\n  }\n}","import { MediaService } from './../core/media-service/index';\nimport { EduClassroomDataController } from './edu-classroom-data-controller';\nimport { EduUserService } from '../user/edu-user-service';\nimport { EduLogger } from '../core/logger';\nimport { AgoraEduApi } from '../core/services/edu-api';\nimport { EventEmitter } from 'events';\nimport { EduManager } from \"../manager\";\nimport { EduStreamData, EduUserData, EduUser, EduStream, EduRoleType, EduClassroom, EduVideoSourceType, EduChannelMessageCmdType, EduClassroomStateType, EduTextMessage, EduStreamAction, EduCustomMessage } from '../interfaces';\nimport { get } from 'lodash';\nimport { RTMWrapper } from '../core/rtm';\nimport { MessageSerializer } from '../core/rtm/message-serializer';\n\nexport type EduClassroomInitParams = {\n  eduManager: EduManager\n  roomUuid: string\n  roomName: string\n  apiService: AgoraEduApi\n  // rtcProvider: any\n}\n\nexport class EduClassroomManager extends EventEmitter {\n\n  private _roomUuid: string\n\n  private rawRoomUuid: string = ''\n  private _roomName: string\n  private eduManager: EduManager\n  private _apiService?: AgoraEduApi\n  private _userService?: EduUserService\n  private _rtmObserver?: EventEmitter\n  // private _mediaService?: MediaService\n\n  constructor(payload: EduClassroomInitParams) {\n    super()\n    this.eduManager = payload.eduManager\n    this.rawRoomUuid = payload.roomUuid\n    this._roomUuid = payload.roomUuid\n    this._roomName = payload.roomName\n    this._apiService = payload.apiService\n    this._userService = undefined\n    this._rtmObserver = undefined\n    // this._mediaService = new MediaService(payload.rtcProvider)\n  }\n\n  public get syncingData(): boolean {\n    const states = ['DISCONNECTED', 'RECONNECTING']\n    if (states.includes(this.eduManager.rtmConnectionState)) {\n      return false\n    } else {\n      this.data\n    }    \n    return true\n  }\n\n  public get roomName(): string {\n    return this._roomName as string\n  }\n\n  public get roomUuid(): string {\n    return this._roomUuid as string\n  }\n\n  public get apiService(): AgoraEduApi {\n    return this._apiService as AgoraEduApi\n  }\n\n  public get localUser(): EduUserData {\n    return this.data.localUser\n  }\n\n  get userService(): EduUserService {\n    return this._userService as EduUserService\n  }\n\n  get data(): EduClassroomDataController {\n    return this.eduManager._dataBuffer[this.rawRoomUuid] as EduClassroomDataController\n  }\n\n  private async prepareRoomJoin(args: any) {\n    console.log('[breakout] params ', args.userRole)\n    let joinRoomData = await this.apiService.joinRoom({\n      roomUuid: args.roomUuid,\n      userRole: args.userRole,\n      userName: args.userName,\n      userUuid: args.userUuid,\n      // autoPublish: args.autoPublish,\n      streamUuid: args.streamUuid ? args.streamUuid : `0`\n    })\n    return joinRoomData\n    \n    // this.eduManager._dataBuffer[this.roomUuid] = this.data\n  }\n\n  private get rtmWrapper(): RTMWrapper {\n    return this.eduManager._rtmWrapper as RTMWrapper;\n  }\n\n  async join(params: any) {\n    EduLogger.debug(`join classroom ${this.roomUuid}`)\n    const roomParams = {\n      ...params,\n      roomUuid: this.roomUuid,\n      roomName: this.roomName,\n    }\n    let joinRoomData = await this.prepareRoomJoin(roomParams)\n    EduLogger.debug(`join classroom [prepareRoomJoin] ${this.roomUuid} success`)\n    if (this.rtmWrapper) {\n      const [channel, observer] = this.rtmWrapper.createObserverChannel({\n        channelName: this.roomUuid,\n      })\n      observer.on('ChannelMessage', (evt: any) => {\n        console.log(\"[rtm] ChannelMessage channelName\", evt.channelName)\n        if (evt.channelName !== this.roomUuid) {\n          return\n        }\n        try {\n          const res = MessageSerializer.readMessage(evt.message.text)\n          if (res === null) {\n            return console.warn('[room] ChannelMessage is invalid', res)\n          }\n          const { sequence, cmd, version, data } = res\n          EduLogger.info('[EDU-STATE] Raw ChannelMessage', JSON.stringify(res))\n          if (version !== 1) {\n            return EduLogger.warn('using old version')\n          }\n\n          // if (cmd === EduChannelMessageCmdType.roomChatState) {\n          //   const textMessage: EduTextMessage = MessageSerializer.getEduTextMessage(data)\n          //   this.data.isLocalUser(textMessage.fromUser.userUuid)\n          //   return\n          // }\n\n          const obj = {\n            seqId: sequence,\n            cmd,\n            data\n          }\n\n          console.log(\"appendBuffer in Raw Message \",obj)\n          \n          this.data.appendBuffer({\n            seqId: sequence,\n            cmd,\n            data\n          })\n          this.data.asyncBatchUpdateData(500)\n        } catch (err) {\n          console.error(err)\n        }\n      })\n\n      await this.rtmWrapper.join(\n        channel, observer,\n        {\n          channelName: this.roomUuid,\n        }\n      )\n\n      this._rtmObserver = observer\n      this.data.setLocalData(joinRoomData)\n      await this.data.syncFullSequence()\n      this.data.BatchUpdateData()\n      this._userService = new EduUserService(this)\n      EduLogger.debug(`join classroom ${this.roomUuid} success`)\n    }\n  }\n\n  async leave() {\n    if (this._rtmObserver) {\n      this._rtmObserver.removeAllListeners()\n      this._rtmObserver = undefined\n    }\n    EduLogger.debug(`leave classroom ${this.roomUuid}`)\n    if (this.eduManager._rtmWrapper) {\n      EduLogger.debug(`leave this.rtmWrapper ${this.roomUuid}`)\n      await this.eduManager._rtmWrapper.leave({\n        channelName: this.roomUuid,\n      })\n      delete this.eduManager._dataBuffer[this.rawRoomUuid]\n      EduLogger.debug(`leave classroom ${this.roomUuid} success`)\n    }\n  }\n\n  get userToken() {\n    return this.data.userToken\n  }\n\n  async joinRTC(params: any) {\n    // EduLogger.debug(`joinRTC ${this.roomUuid}`)\n    // if (this._mediaService) {\n    //   await this._mediaService.join(params)\n    //   EduLogger.debug(`joinRTC ${this.roomUuid} success`)\n    // }\n  }\n\n  async leaveRTC() {\n    // EduLogger.debug(`leaveRTC ${this.roomUuid}`)\n    // if (this._mediaService) {\n    //   await this._mediaService.leave()\n    //   EduLogger.debug(`leaveRTC ${this.roomUuid} success`)\n    // }\n  }\n\n  getLocalStreamData(): EduStreamData {\n    return this.data.localStreamData\n  }\n\n  getLocalScreenData(): EduStreamData {\n    return this.data.localScreenShareStream\n  }\n\n  getLocalUser(): EduUserData {\n    return this.data.localUser\n  }\n\n  getFullUserList(): EduUser[] {\n    return this.data.userList.map((t: EduUserData) => t.user);\n  }\n\n  getFullStreamList(): EduStream[] {\n    return this.data.streamList.map((t: EduStreamData) => t.stream);\n  }\n\n  private get classroom(): EduClassroom {\n    return {\n      roomInfo: this.data.roomInfo,\n      roomProperties: this.data.roomProperties,\n      roomStatus: this.data.roomState,\n    }\n  }\n\n  getClassroomInfo(): EduClassroom {\n    return this.classroom;\n  }\n\n  getStudentCount(): number {\n    return this.data.userList\n      .filter((it: EduUserData) => it.user.role === EduRoleType.student).length\n  }\n\n  getTeacherCount(): number {\n    return this.data.userList\n      .filter((it: EduUserData) => it.user.role === EduRoleType.teacher).length\n  }\n\n  get studentList(): EduUser[] {\n    return this.data.userList\n      .filter((it: EduUserData) => it.user.role === EduRoleType.student)\n      .map((it: EduUserData) => it.user)\n  }\n\n  get teacherList(): EduUser[] {\n    return this.data.userList\n      .filter((it: EduUserData) => it.user.role === EduRoleType.teacher)\n      .map((it: EduUserData) => it.user)\n  }\n\n  getTeacherList(): EduUser[] {\n    return this.teacherList;\n  }\n\n  getStudentList(): EduUser[] {\n    return this.studentList;\n  }\n}","export const HttpClient = async (url: string, opts: any): Promise<any> => {\n  let fetchResponse: any = {}\n  try {\n    fetchResponse = await fetch(url, opts);\n    const resp = await fetchResponse.json();\n    console.log(`[http] ${opts.method}#${url} response params: `, JSON.stringify(opts), ` response: `, JSON.stringify(resp), ' status: ', fetchResponse.status, ' statusText: ', fetchResponse.statusText)\n    return resp;\n  } catch (err) {\n    console.log(`[http] ${opts.method}#${url} request failed code: ${err.code}, msg: ${err.msg}, params: `, JSON.stringify(opts), ' status: ', fetchResponse.status, ' statusText: ', fetchResponse.statusText)\n    throw err;\n  }\n}","import { EduUserData, EduStreamData, InitEduRoomParams, EduUser, EduCourseState, EduShareScreenConfig } from './../../interfaces/index';\nimport { EduStream, ClassroomStateParams, UserQueryParams, StreamQueryParams, PeerMessageParams, ChannelMessageParams, AgoraFetchParams, EduStreamParams } from \"../../interfaces\";\nimport { EntryRequestParams, EntryRoomParams, UserStreamResponseData, EduJoinRoomParams, JoinRoomResponseData, UserStreamList, BoardInfoResponse } from \"./interface\";\nimport { get } from \"lodash\";\nimport { EduLogger } from '../logger';\nimport { HttpClient } from '../utils/http-client';\n\nexport interface ILocalUserInfo {\n  userUuid: string\n  userToken: string\n  rtmToken: string\n  rtcToken: string\n}\n\ntype PeerChatMessageParams = {\n  message: string\n  remoteUser: EduUser\n  roomUuid: string\n}\n\ntype RoomChatMessageParams = {\n  message: string\n  roomUuid: string\n}\n\ntype CreateBizStreamParams = {\n  roomUuid: string,\n  userUuid: string,\n  streamName: string,\n  streamUuid: string,\n  audioState: number,\n  videoState: number,\n  videoSourceType: number,\n  audioSourceType: number\n}\n\ntype UpdateBizStreamParams = {\n  roomUuid: string,\n  userUuid: string,\n  streamName: string,\n  streamUuid: string,\n  audioState: number,\n  videoState: number,\n  videoSourceType: number,\n  audioSourceType: number\n}\n\ntype DeleteBizStreamParams = {\n  roomUuid: string,\n  userUuid: string,\n  streamUuid: string,\n}\n\ntype RemoteMediaParams = {\n  roomUuid: string\n  userUuid: string\n  streamUuid: string\n  // audioState: number\n  // videoState: number\n}\n\nexport class AgoraEduApi {\n\n  roomUuid: string = '';\n\n  // private _prefix: string = `${REACT_APP_AGORA_APP_SDK_DOMAIN}/scenario/education/apps/%app_id`\n  private _prefix: string = `${REACT_APP_AGORA_APP_SDK_DOMAIN}/scene/apps/%app_id`\n  private _board_prefix: string = `${REACT_APP_AGORA_APP_SDK_DOMAIN}/board/apps/%app_id`\n  // private _board_prefix: string = `${REACT_APP_AGORA_APP_SDK_DOMAIN}/scenario/board/apps/%app_id`\n  private _record_prefix: string = `${REACT_APP_AGORA_APP_SDK_DOMAIN}/recording/apps/%app_id`\n  // private _record_prefix: string = `${REACT_APP_AGORA_APP_SDK_DOMAIN}/scenario/recording/apps/%app_id`\n\n  appId!: string;\n  authorization!: string;\n  _userToken: string = '';\n\n  nextId?: string;\n\n  localInfo?: ILocalUserInfo;\n\n  latestTime: number = 0;\n\n  private lastUserListTime: number = 0;\n  private lastStreamListTime: number = 0;\n\n  constructor(\n    public readonly appID: string,\n    public readonly AUTHORIZATION: string,\n  ) {\n    this.appId = appID;\n    this.authorization = AUTHORIZATION;\n    this.setApiPrefix(this.appId);\n    this.nextId = undefined;\n    this.latestTime = 0;\n    this.lastUserListTime = 0;\n    this.lastStreamListTime = 0;\n  }\n\n  get prefix() {\n    return this._prefix\n  }\n\n  get board_prefix() {\n    return this._board_prefix\n  }\n\n  get record_prefix() {\n    return this._record_prefix;\n  }\n\n  public setApiPrefix(appId: string) {\n    this._prefix = this._prefix.replace('%app_id', appId)\n    // this._board_prefix = this._board_prefix.replace('%app_id', this.appId)\n    // this._record_prefix = this._record_prefix.replace('%app_id', this.appId)\n  }\n  \n  public get userToken(): string {\n    return this._userToken\n    // const userToken = window.sessionStorage.getItem(\"edu-userToken\") as string || '';\n    // return userToken;\n  }\n\n  public updateLastTime(t: number) {\n    this.latestTime = t\n  }\n\n  async fetch (params: AgoraFetchParams) {\n    const {\n      method,\n      token,\n      data,\n      full_url,\n      url,\n      type\n    } = params\n    const opts: any = {\n      method,\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Basic ${this.AUTHORIZATION!.replace(/basic\\s+|basic/i, '')}`\n      }\n    }\n\n    if (this.localInfo?.userToken) {\n      opts.headers['token'] = this.localInfo.userToken;\n    }\n\n    if (params.hasOwnProperty('token') && !token) {\n      delete opts.headers['token']\n    }\n    \n    if (data) {\n      opts.body = JSON.stringify(data);\n    }\n  \n    let resp: any;\n    if (full_url) {\n      resp = await HttpClient(`${full_url}`, opts);\n    } else {\n      const rawUrl = `${this.prefix}${url}`\n      resp = await HttpClient(`${rawUrl}`, opts);\n    }  \n    \n    // WARN: 需要约定状态码\n    if (resp.code !== 0) {\n      throw {msg: resp.msg}\n    }\n\n    if (resp.data && resp.data.ts) {\n      this.updateLastTime(resp.data.ts)\n    }\n\n    return resp\n  }\n\n  public set userToken(token: string) {\n    window.sessionStorage.setItem(\"edu-userToken\", token)\n  }\n\n  // create room\n  // async createRoom (params: EduClassroomConfig): Promise<any> {\n  //   const {roomUuid, ...data} = params\n  //   let res = await this.fetch({\n  //     url: `/v1/rooms/${roomUuid}/config`,\n  //     method: 'POST',\n  //     data: data,\n  //   })\n  //   this.roomUuid = roomUuid\n  //   return res;\n  // }\n\n  async getRoomConfig(roomId: string): Promise<any> {\n    return await this.fetch({\n      url: `/v1/rooms/${roomId}/config`,\n      method: 'GET',\n    })\n  }\n\n  async updateClassroomState(roomId: string, params: ClassroomStateParams) {\n    return await this.fetch({\n      url: `/v1/rooms/${roomId}/state`,\n      method: 'PUT',\n      data: params,\n    })\n  }\n\n  // async getClassroomInfo(roomId: string) {\n  //   return await this.fetch({\n  //     url: `/v1/rooms/${roomId}/info`,\n  //     method: 'GET',\n  //   })\n  // }\n\n  async getUserList(roomUuid: string, params: UserQueryParams) {\n\n    let qs = `/v1/rooms/${roomUuid}/users?count=${params.count}`\n\n    if (params.nextId) {\n      qs = `${qs}&nextId=${params.nextId}`\n    }\n\n    if (params.hasOwnProperty('includeOffline')) {\n      qs = `${qs}&includeOffline=${params.includeOffline}`\n    }\n\n    if (params.hasOwnProperty('updateTimeOffset')) {\n      qs = `${qs}&updateTimeOffset=${params.updateTimeOffset}`\n    }\n\n    let {data} = await this.fetch({\n      url: qs,\n      method: 'GET',\n      data: params,\n    })\n\n    return data\n  }\n\n  async getStreamList(roomUuid: string, params: StreamQueryParams) {\n\n    let qs = `/v1/rooms/${roomUuid}/users/streams?count=${params.count}`\n\n    if (params.nextId) {\n      qs = `${qs}&nextId=${params.nextId}`\n    }\n\n    if (params.hasOwnProperty('includeOffline')) {\n      qs = `${qs}&includeOffline=${params.includeOffline}`\n    }\n\n    if (params.hasOwnProperty('updateTimeOffset')) {\n      qs = `${qs}&updateTimeOffset=${params.updateTimeOffset}`\n    }\n\n    let {data} = await this.fetch({\n      url: qs,\n      method: 'GET',\n      data: params,\n    })\n    return data\n  }\n\n  async createStream(roomId: string, params: EduStreamParams) {\n    const {\n      streamUuid,\n      ...data\n    } = params\n    return await this.fetch({\n      url: `/v1/rooms/${roomId}/streams/${streamUuid}`,\n      method: 'POST',\n      data: data\n    })\n  }\n\n  async updatePublishStream(roomId: string, streamId: string, stream: EduStream) {\n    return await this.fetch({\n      url: `/v1/rooms/${roomId}/streams/${streamId}`,\n      method: 'PUT',\n      data: stream\n    })\n  }\n\n  async removePublishStream(roomId: string, streamId: string, stream: EduStream) {\n    return await this.fetch({\n      url: `/v1/rooms/${roomId}/streams/${streamId}`,\n      method: 'DELETE',\n    })\n  }\n\n  async sendChannelMessage(data: ChannelMessageParams) {\n    const {\n      roomUuid,\n      ...params\n    } = data\n    return await this.fetch({\n      url: `/v1/rooms/${roomUuid}/message/broadcast`,\n      method: 'POST',\n      data: params\n    })\n  }\n\n  async sendPeerMessage(data: PeerMessageParams) {\n    const {\n      roomUuid,\n      ...params\n    } = data\n\n    return await this.fetch({\n      url: `/v1/rooms/${roomUuid}/message/peer`,\n      method: 'POST',\n      data: params\n    })\n  }\n\n  async exitRoom(roomId: string) {\n    return await this.fetch({\n      url: `/v1/rooms/${roomId}/exit`,\n      method: 'POST',\n    })\n  }\n\n  async entryRoom(params: EntryRequestParams): Promise<any> {\n    const data = {\n      userName: params.userName,\n      role: params.role,\n      streamUuid: params.streamUuid,\n      // autoPublish: +params.autoPublish\n    }\n\n    let resp = await this.fetch({\n      url: `/v1/rooms/${params.roomUuid}/users/${params.userUuid}/entry`,\n      method: 'POST',\n      data: data,\n      token: params.token\n    })\n\n    return resp.data\n  }\n\n  async fetchUsersStreams(nextId: string, count: number, updateTimeOffset: number = 0, includeOffline: number = 0): Promise<UserStreamResponseData> {\n\n    let qs = `/v1/rooms/${this.roomUuid}/users/userStreams?count=${count}`\n\n    if (updateTimeOffset) {\n      qs = `${qs}&updateTimeOffset=${updateTimeOffset}`\n    }\n\n    if (includeOffline) {\n      qs = `${qs}&includeOffline=${includeOffline}`\n    }\n\n    if (nextId) {\n      qs = `${qs}&nextId=${nextId}`\n    }\n\n    const {data} = await this.fetch({\n      url: qs,\n      method: 'GET',\n    })\n\n    return {\n      count: data.count,\n      total: data.total,\n      nextId: data.nextId,\n      list: data.list,\n      ts: data.ts,\n    }\n  }\n\n  async fetchAllOfflineUsersStream (): Promise<UserStreamList> {\n    let nextId = ''\n    let streams: any[] = []\n    let users: any[] = []\n    let updateTime = 0\n    do {\n      let data = await this.fetchUsersStreams(nextId, 1000, this.latestTime, 1)\n      nextId = data.nextId\n      updateTime = data.ts\n      const userList = data.list.reduce((acc: any[], userItem: any) => {\n        const {streams, ...userAttrs} = userItem\n        const targetIndex = acc.findIndex((it: any) => it.userUuid === userAttrs.userUuid)\n        if (targetIndex !== -1) {\n          // update stream lists\n          acc[targetIndex] = userAttrs\n        } else {\n          // concat userAttrs\n          acc = acc.concat([userAttrs])\n        }\n        // append to userList tail\n        // acc = acc.concat([userAttrs])\n        return acc\n      }, users)\n\n\n      const streamList = data.list.reduce((acc, item) => {\n        const newStreams = item.streams\n        const combineLatestStreamIndexList = newStreams.map((newStream: any, index: number) => {\n          let oldStreamIndex = acc.findIndex((stream: any) => stream.streamUuid === newStream.streamUuid)\n          return {\n            oldStreamIndex: oldStreamIndex,\n            newStreamIndex: index\n          }\n        })\n\n        if (!combineLatestStreamIndexList.length) {\n          EduLogger.warn(\"combineLatestStreamIndexList is empty\", newStreams, combineLatestStreamIndexList)\n        }\n        for (let {oldStreamIndex, newStreamIndex} of combineLatestStreamIndexList) {\n          if (oldStreamIndex !== -1) {\n            acc[oldStreamIndex] = newStreams[newStreamIndex]\n          } else {\n            acc = acc.concat(item.streams)\n          }\n        }\n\n        // append to streamList tail\n        // acc = acc.concat(item.streams)\n        return acc\n      }, streams)\n      users = users.concat(userList)\n      streams = streams.concat(streamList)\n    } while (nextId != null)\n    if (updateTime) {\n      this.latestTime = updateTime\n    }\n    return {\n      users,\n      streams\n    }\n  }\n\n  async fetchAllOnlineUserStream (): Promise<UserStreamList> {\n    let nextId = ''\n    let streams: any[] = []\n    let users: any[] = []\n    do {\n      let data = await this.fetchUsersStreams(nextId, 1000)\n      console.log(\"fetchUsersStreams\", data)\n      nextId = data.nextId\n      const userList = data.list.reduce((acc: any[], userItem: any) => {\n        const {streams, ...userAttrs} = userItem\n        const targetIndex = acc.findIndex((it: any) => it.userUuid === userAttrs.userUuid)\n        if (targetIndex !== -1) {\n          // update stream lists\n          acc[targetIndex] = userAttrs\n        } else {\n          // concat userAttrs\n          acc = acc.concat([userAttrs])\n        }\n        // append to userList tail\n        // acc = acc.concat([userAttrs])\n        return acc\n      }, users)\n\n\n      const streamList = data.list.reduce((acc, item) => {\n        const newStreams = item.streams\n        const combineLatestStreamIndexList = newStreams.map((newStream: any, index: number) => {\n          let oldStreamIndex = acc.findIndex((stream: any) => stream.streamUuid === newStream.streamUuid)\n          return {\n            oldStreamIndex: oldStreamIndex,\n            newStreamIndex: index\n          }\n        })\n\n        if (!combineLatestStreamIndexList.length) {\n          EduLogger.warn(\"combineLatestStreamIndexList is empty\", newStreams, combineLatestStreamIndexList)\n        }\n        for (let {oldStreamIndex, newStreamIndex} of combineLatestStreamIndexList) {\n          if (oldStreamIndex !== -1) {\n            acc[oldStreamIndex] = newStreams[newStreamIndex]\n          } else {\n            acc = acc.concat(item.streams)\n          }\n        }\n\n        // append to streamList tail\n        // acc = acc.concat(item.streams)\n        return acc\n      }, streams)\n      users = users.concat(userList)\n      streams = streams.concat(streamList)\n    } while (nextId != null)\n\n    return {\n      users: EduUserData.fromArray(users),\n      streams: EduStreamData.fromArray(streams)\n    }\n  }\n\n  async syncUserList(roomUuid: string): Promise<EduUserData[]> {\n    let nextId = ''\n    let list: EduUserData[] = []\n    let lastTime = this.lastUserListTime\n    let newLastTime = 0\n    do {\n      const res = await this.getUserList(roomUuid, {\n        nextId: nextId ? nextId : undefined,\n        updateTimeOffset: lastTime,\n        includeOffline: 1,\n        count: 1000,\n      })\n      newLastTime = res.ts\n      nextId = res.nextId\n      list = list.concat(EduUserData.fromArray(res.list))\n    } while (nextId !== null)\n\n    if (newLastTime) {\n      this.lastUserListTime = newLastTime\n    }\n    return list\n  }\n\n  async syncStreamList(roomUuid: string): Promise<EduStreamData[]> {\n    let nextId = ''\n    let list: EduStreamData[] = []\n    let lastTime = this.lastStreamListTime\n    let newLastTime = 0\n    do {\n      const res = await this.getStreamList(roomUuid, {\n        nextId: nextId ? nextId : undefined,\n        updateTimeOffset: lastTime,\n        includeOffline: 1,\n        count: 1000,\n      })\n      newLastTime = res.ts\n      nextId = res.nextId\n      list = list.concat(EduStreamData.fromArray(res.list))\n    } while (nextId !== null)\n\n    if (newLastTime) {\n      this.lastStreamListTime = newLastTime\n    }\n    return list\n  }\n\n  async subRoomData(params: any) {\n    const {\n      step,\n      roomUuid,\n      requestId,\n      nextId,\n      nextTs\n    } = params\n    try {\n      let resp = await this.fetch({\n        url: `/v1/rooms/${roomUuid}/sync`,\n        method: 'POST',\n        data: {\n          step,\n          requestId,\n          nextId,\n          nextTs\n        }\n      })\n      console.log('subRoomData', resp)\n      return resp.msg\n    } catch (err) {\n      throw err\n    }\n  }\n\n  async joinRoom (params: EduJoinRoomParams): Promise<JoinRoomResponseData> {\n    let entryRoomData = await this.entryRoom({\n      userUuid: params.userUuid,\n      roomUuid: params.roomUuid,\n      userName: params.userName,\n      role: params.userRole,\n      streamUuid: params.streamUuid,\n      // autoPublish: params.autoPublish,\n      token: ''\n    })\n\n    this.roomUuid = params.roomUuid\n\n    this.localInfo = {\n      userToken: get(entryRoomData, 'user.userToken'),\n      userUuid: get(entryRoomData, 'user.userUuid'),\n      rtmToken: get(entryRoomData, 'user.rtmToken'),\n      rtcToken: get(entryRoomData, 'user.rtcToken'),\n    }\n\n    const streams = get(entryRoomData, 'user.streams', [])\n\n    return {\n      room: {\n        name: get(entryRoomData, 'room.roomInfo.roomName'),\n        uuid: get(entryRoomData, 'room.roomInfo.roomUuid'),\n        muteChat: {\n          audience: get(entryRoomData, 'room.roomState.muteChat.audience'),\n          broadcaster: get(entryRoomData, 'room.roomState.muteChat.broadcaster'),\n          host: get(entryRoomData, 'room.roomState.muteChat.host'),\n        },\n        muteVideo: {\n          audience: get(entryRoomData, 'room.roomState.muteVideo.audience'),\n          host: get(entryRoomData, 'room.roomState.muteVideo.host'),\n        },\n        muteAudio: {\n          audience: get(entryRoomData, 'room.roomState.muteAudio.audience'),\n          host: get(entryRoomData, 'room.roomState.muteAudio.host'),\n        },\n        startTime: get(entryRoomData, 'room.roomState.startTime'),\n        state: get(entryRoomData, 'room.roomState.state'),\n        properties: get(entryRoomData, 'room.roomProperties'),\n      },\n      user: {\n        uuid: get(entryRoomData, 'user.userUuid'),\n        name: get(entryRoomData, 'user.userName'),\n        role: get(entryRoomData, 'user.role'),\n        streamUuid: get(entryRoomData, 'user.streamUuid'),\n        userToken: get(entryRoomData, 'user.userToken'),\n        rtmToken: get(entryRoomData, 'user.rtmToken'),\n        rtcToken: get(entryRoomData, 'user.rtcToken'),\n        muteChat: get(entryRoomData, 'user.muteChat'),\n        streams,\n        properties: get(entryRoomData, 'user.userProperties', {}),\n      }\n    }\n  }\n\n  async upsertBizStream(args: CreateBizStreamParams): Promise<any> {\n    const {\n      roomUuid,\n      userUuid,\n      streamName,\n      streamUuid,\n      videoSourceType,\n      audioSourceType,\n      videoState,\n      audioState,\n    } = args\n\n\n    let res = await this.fetch({\n      url: `/v1/rooms/${roomUuid}/users/${userUuid}/streams/${streamUuid}`,\n      method: 'PUT',\n      data: {\n        streamName,\n        userUuid,\n        videoSourceType,\n        audioSourceType,\n        videoState: +videoState,\n        audioState: +audioState,\n      }\n    })\n\n    const respData = res.data\n\n    return {\n      streamUuid: respData.streamUuid,\n      rtcToken: respData.rtcToken,\n      ts: res.ts\n    }\n  }\n\n  async createBizStream(args: CreateBizStreamParams): Promise<any> {\n    const {\n      roomUuid,\n      userUuid,\n      streamName,\n      streamUuid,\n      videoSourceType,\n      audioSourceType,\n      videoState,\n      audioState,\n    } = args\n\n    let res = await this.fetch({\n      url: `/v1/rooms/${roomUuid}/users/${userUuid}/streams/${streamUuid}`,\n      method: 'POST',\n      data: {\n        streamName,\n        userUuid,\n        videoSourceType,\n        audioSourceType,\n        videoState,\n        audioState\n      }\n    })\n\n    const respData = res.data\n\n    return {\n      streamUuid: respData.streamUuid,\n      rtcToken: respData.rtcToken,\n      ts: res.ts\n    }\n  }\n\n  async updateBizStream(args: UpdateBizStreamParams): Promise<any> {\n    const {\n      roomUuid,\n      userUuid,\n      streamName,\n      streamUuid,\n      videoSourceType,\n      audioSourceType,\n      videoState,\n      audioState,\n    } = args\n\n    let res = await this.fetch({\n      url: `/v1/rooms/${roomUuid}/users/${userUuid}/streams/${streamUuid}`,\n      method: 'PUT',\n      data: {\n        streamName,\n        videoSourceType,\n        audioSourceType,\n        videoState,\n        audioState\n      }\n    })\n\n    const respData = res.data\n\n    return {\n      streamUuid: respData.streamUuid,\n      rtcToken: respData.rtcToken,\n      ts: res.ts\n    }\n  }\n\n  async deleteBizStream(args: DeleteBizStreamParams): Promise<any> {\n    const {\n      roomUuid,\n      userUuid,\n      streamUuid,\n    } = args\n\n    let res = await this.fetch({\n      url: `/v1/rooms/${roomUuid}/users/${userUuid}/streams/${streamUuid}`,\n      method: 'DELETE',\n    })\n\n    return {\n      ...res.data,\n      ts: res.ts\n    }\n  }\n\n  async sendRoomChatMessage(args: RoomChatMessageParams): Promise<any> {\n    const {\n      message,\n      roomUuid,\n    } = args\n    let res = await this.fetch({\n      url: `/v1/rooms/${roomUuid}/chat/channel`,\n      method: 'POST',\n      data: {\n        message: message,\n        type: 1,\n      }\n    })\n    return res.data\n  }\n\n  async sendUserChatMessage(args: PeerChatMessageParams): Promise<any> {\n    const {\n      message,\n      remoteUser,\n      roomUuid,\n    } = args\n    let res = await this.fetch({\n      url: `/v1/rooms/${roomUuid}/users/${remoteUser.userUuid}/messages/peer`,\n      method: 'POST',\n      data: {\n        message: message,\n        type: 1,\n      }\n    })\n    return res.data\n  }\n\n  async updateCourseState(params: {roomUuid: string, courseState: EduCourseState}) {\n    let res = await this.fetch({\n      url: `/v1/rooms/${params.roomUuid}/states/${params.courseState}`,\n      method: 'PUT',\n      data: {}\n    })\n    \n    return res.data;\n  }\n\n  async updateRoomProperties({roomUuid, key, value, cause}: {roomUuid: string, key: string, value: string, cause?: string}) {\n    const data: any = {value}\n    if (cause) {\n      data.cause = cause\n    }\n\n    let res = await this.fetch({\n      url: `/v1/rooms/${roomUuid}/properties/${key}`,\n      method: 'PUT',\n      data: data\n    })\n    return res.data;\n  }\n\n  async allowStudentChatByRole(args: {enable: boolean, roomUuid: string, roles: string[]}) {\n    const muteChat = {}\n    args.roles.reduce((acc: any, key: string) => {\n      acc[key] = +args.enable\n      return acc\n    }, muteChat)\n\n    let res = await this.fetch({\n      url: `/v1/rooms/${args.roomUuid}/roles/mute`,\n      method: 'PUT',\n      data: {\n        muteChat\n      }\n    })\n    return res.data\n  }\n\n  async stopShareScreen(roomUuid: string, streamUuid: string, userUuid: string) {\n    await this.deleteBizStream({\n      roomUuid: roomUuid,\n      streamUuid: streamUuid,\n      userUuid: userUuid\n    })\n  }\n\n  async allowRemoteStudentChat({roomUuid, userUuid, muteChat}: any): Promise<any> {\n    let res = await this.fetch({\n      url: `/v1/rooms/${roomUuid}/users/${userUuid}`,\n      method: 'PUT',\n      data: {\n        muteChat\n      }\n    })\n    return res.data;\n  }\n\n  async kickUser(args: {roomUuid: string, userUuid: string}) {\n    let res = await this.fetch({\n      url: `/rooms/${args.roomUuid}/users/${args.userUuid}/exit`,\n      method: 'POST',\n    })\n    return res.data;\n  }\n\n  async inviteUserPublishStream({roomUuid, userUuid, streamUuid}: RemoteMediaParams) {\n    let res = await this.fetch({\n      url: `/v1/rooms/${roomUuid}/users/${userUuid}/streams/${streamUuid}`,\n      method: 'PUT',\n      data: {\n        videoState: 1,\n        audioState: 1\n      }\n    })\n    return res.data\n  }\n\n  async remoteStartStudentCamera({roomUuid, userUuid, streamUuid}: RemoteMediaParams) {\n    let res = await this.fetch({\n      url: `/v1/rooms/${roomUuid}/users/${userUuid}/streams/${streamUuid}`,\n      method: 'PUT',\n      data: {\n        videoState: 1\n      }\n    })\n    return res.data\n  }\n\n  async remoteCloseStudentStream({roomUuid, userUuid, streamUuid}: RemoteMediaParams) {\n    let res = await this.fetch({\n      url: `/v1/rooms/${roomUuid}/users/${userUuid}/streams/${streamUuid}`,\n      method: 'DELETE',\n      data: {}\n    })\n    return res.data\n  }\n\n  async remoteStopStudentCamera({roomUuid, userUuid, streamUuid}: RemoteMediaParams) {\n    let res = await this.fetch({\n      url: `/v1/rooms/${roomUuid}/users/${userUuid}/streams/${streamUuid}`,\n      method: 'PUT',\n      data: {\n        videoState: 0\n      }\n    })\n    return res.data\n  }\n\n  async remoteStartStudentMicrophone({roomUuid, userUuid, streamUuid}: RemoteMediaParams) {\n    let res = await this.fetch({\n      url: `/v1/rooms/${roomUuid}/users/${userUuid}/streams/${streamUuid}`,\n      method: 'PUT',\n      data: {\n        audioState: 1\n      }\n    })\n    return res.data\n  }\n\n  async remoteStopStudentMicrophone({roomUuid, userUuid, streamUuid}: RemoteMediaParams) {\n    let res = await this.fetch({\n      url: `/v1/rooms/${roomUuid}/users/${userUuid}/streams/${streamUuid}`,\n      method: 'PUT',\n      data: {\n        audioState: 0\n      }\n    })\n    return res.data\n  }\n\n  async login(userUuid: string): Promise<any> {\n    let res = await this.fetch({\n      url: `/v1/users/${userUuid}/login`,\n      method: 'POST',\n      data: {}\n    })\n    return res.data\n  }\n\n  async syncSnapShot(roomUuid: string): Promise<any> {\n    console.log('[syncing] , userToken: ', this.localInfo?.userToken)\n    let res = await this.fetch({\n      url: `/v1/rooms/${roomUuid}/snapshot`,\n      method: 'GET',\n    })\n    const data = res.data\n    const roomInfo = get(data, 'snapshot.room.roomInfo', null)\n    const roomProperties = get(data, 'snapshot.room.roomProperties', null)\n    const roomState = get(data, 'snapshot.room.roomState', null)\n    return {\n      seq: get(data, 'sequence', 0),\n      roomInfo,\n      roomState,\n      roomProperties,\n      users: get(data, 'snapshot.users', [])\n    }\n  }\n\n  // EDU-STATE-NOTE: ignore count\n  async syncSequence(roomUuid: string, seqId: number, count?: number) {\n    let res = await this.fetch({\n      url: `/v1/rooms/${roomUuid}/sequences?nextId=${seqId}`,\n      method: 'GET',\n    })\n    return res.data\n  }\n}\n","export interface RoomResponseData {\n  roomName: string\n  roomUuid: string\n  roleConfig: any\n}\n\nexport enum EduRoomType {\n  SceneType1v1 = 0,\n  SceneTypeSmallClass = 1,\n  SceneTypeBigClass = 2,\n  SceneTypeBreakoutClass = 3\n}\n\nexport enum EnumBoardState {\n  follow = 1,\n  unfollow = 0,\n  grantPermission = 1,\n  revokePermission = 0\n}\n\nexport interface BoardUserAttrs {\n  userUuid: string\n  userName: string\n  role: string\n  grantPermission: number\n}\n\nexport interface BoardInfoResponse {\n  info: {\n    boardId: string\n    boardToken: string\n  }\n  state: {\n    follow: number\n    grantUsers: BoardUserAttrs[]\n  }\n}\n\nexport enum EnumChatState {\n  unmute = 0,\n  mute = 1,\n}\n\nexport interface EntryRoomParams {\n  userName: string\n  userUuid: string\n  role: number\n}\n\nexport enum EnumVideoState {\n  unmute = 0,\n  mute = 1,\n  disable = 2,\n}\n\nexport enum EnumAudioState {\n  unmute = 0,\n  mute = 1,\n  disable = 2,\n}\n\nexport interface EntryRequestParams {\n  userUuid: string\n  roomUuid: string\n  userName: string\n  role: string\n  streamUuid: string\n  // autoPublish: boolean\n  token: string\n}\n\nexport enum EnumOnlineState {\n  offline = 0,\n  online = 1,\n}\n\nexport interface AgoraEduUser {\n  userName: string\n  userUuid: string\n  role: string\n  muteChat: number\n  state: EnumOnlineState\n  updateTime?: number\n}\n\nexport interface AgoraEduStream {\n  streamUuid: string\n  streamName: string\n  videoSourceType: EduVideoSourceType\n  audioSourceType: EduAudioSourceType\n  videoState: EnumVideoState\n  audioState: EnumAudioState\n  updateTime?: number\n  state: EnumOnlineState\n}\n\nexport interface EduJoinRoomParams {\n  userUuid: string\n  roomUuid: string\n  userName: string\n  userRole: string\n  streamUuid: string\n  // autoPublish: boolean\n}\n\nexport interface SyncRoomRequestParams {\n  roomUuid: string\n  userUuid: string\n\n}\n\nexport interface UserStreamResponseData {\n  count: number\n  total: number\n  nextId: string\n  list: any[]\n  ts: number\n  // localUser: AgoraEduUser\n  // localStreams: AgoraEduStream[]\n  // users: AgoraEduUser[]\n  // streams: AgoraEduStream[]\n}\n\nexport interface UserStreamList {\n  users: any[]\n  streams: any[]\n}\n\nexport interface JoinRoomResponseData {\n  room: {\n    name: string\n    uuid: string\n    muteChat: {\n      audience: EnumChatState\n      broadcaster: EnumChatState\n      host: EnumChatState\n    }\n    muteVideo: {\n      audience: EnumVideoState\n      host: EnumVideoState\n    }\n    muteAudio: {\n      audience: EnumAudioState\n      host: EnumAudioState\n    }\n    startTime: number\n    state: number\n    properties: any\n  }\n  user: {\n    uuid: string\n    name: string\n    role: string\n    streamUuid: string\n    userToken: string\n    rtmToken: string\n    rtcToken: string\n    muteChat: EnumChatState\n    streams: any[]\n    properties: any\n  }\n}\n\nexport interface EduClassroomInitOption {\n  channelName: string\n  uid: string\n  token: string\n}","import { EduPeerMessageCmdType, EduTextMessage, EduCustomMessage } from './../interfaces/index';\nimport { MessageSerializer } from './../core/rtm/message-serializer';\nimport { EduLogger } from './../core/logger';\nimport { EventEmitter } from 'events';\nimport { RTMWrapper } from './../core/rtm/index';\nimport { MediaService } from '../core/media-service';\nimport { EduClassroomManager } from '../room/edu-classroom-manager';\nimport { AgoraEduApi } from '../core/services/edu-api';\nimport { EduConfiguration, EduUser, EduStream } from '../interfaces';\nimport { EduClassroomDataController } from '../room/edu-classroom-data-controller';\n\nexport type ClassroomInitParams = {\n  roomUuid: string\n  roomName: string\n}\n\nexport type ClassRoomAuthorization = string\n\nexport class EduManager extends EventEmitter {\n  private static enable: boolean = true\n\n  private apiService!: AgoraEduApi;\n\n  public _rtmWrapper?: RTMWrapper;\n\n  public readonly config: EduConfiguration;\n\n  private _classroomMap: Record<string, EduClassroomManager> = {}\n\n  public _ended: boolean = false;\n\n  public _dataBuffer: Record<string, EduClassroomDataController> = {}\n\n  public readonly _mediaService: MediaService;\n\n  constructor(\n    config: EduConfiguration\n  ) {\n    super()\n    this.config = config\n    const buildOption = {\n      platform: this.config.platform,\n      agoraSdk: this.config.agoraRtc,\n      codec: this.config.codec ? this.config.codec : 'vp8',\n      appId: this.config.appId\n    } as any\n    if (buildOption.platform === 'electron') {\n      buildOption.electronLogPath = {\n        //@ts-ignore\n        logPath: window.logPath,\n        //@ts-ignore\n        videoSourceLogPath: window.videoSourceLogPath,\n      }\n    }\n    this._mediaService = new MediaService(buildOption)\n    this.apiService = new AgoraEduApi(this.config.appId, this.authorization)\n  }\n\n  private get rtmWrapper(): RTMWrapper {\n    return this._rtmWrapper as RTMWrapper;\n  }\n\n  get mediaService(): MediaService {\n    return this._mediaService;\n  }\n\n  static init(config: EduConfiguration): EduManager {\n    return new EduManager(config);\n  }\n\n  static enableDebugLog(enable: boolean) {\n    this.enable = enable\n    if (this.enable) {\n      EduLogger.init()\n    }\n  }\n  \n  static async uploadLog(roomUuid: string): Promise<any> {\n    return await EduLogger.enableUpload(roomUuid)\n  }\n\n  get authorization(): string {\n    return window.btoa(`${this.config.customerId}:${this.config.customerCertificate}`)\n  }\n\n  private async prepareLogin(userUuid: string) {\n    let res = await this.apiService.login(userUuid)\n    return res\n  }\n\n  private fire(evtName: string, ...args: any[]) {\n    this.emit(evtName, ...args)\n  }\n\n  private _rtmConnectionState = 'DISCONNECTED'\n\n  get rtmConnectionState(): string {\n    return this._rtmConnectionState\n  }\n\n  async login(userUuid: string) {\n    EduLogger.debug(`login userUuid: ${userUuid}`)\n    try {\n      let {userUuid: uuid, rtmToken} = await this.prepareLogin(userUuid)\n      EduLogger.debug(`prepareLogin login userUuid: ${userUuid} success`)\n      const rtmWrapper = new RTMWrapper(this.config.agoraRtm)\n      rtmWrapper.on('ConnectionStateChanged', async (evt: any) => {\n        console.log(\"[rtm] ConnectionStateChanged\", evt)\n        if (rtmWrapper.prevConnectionState === 'RECONNECTING'\n          && rtmWrapper.connectionState === 'CONNECTED') {\n          for (let channel of Object.keys(this._dataBuffer)) {\n            const classroom = this._dataBuffer[channel]\n            if (classroom) {\n              console.log(\"[syncing] classroom\", channel)\n              await classroom.syncData(true, 300)\n            }\n          }\n        }\n        this.fire('ConnectionStateChanged', evt)\n      })\n      rtmWrapper.on('MessageFromPeer', (evt: any) => {\n        console.log(\"[rtm] MessageFromPeer\", evt)\n        const res = MessageSerializer.readMessage(evt.message.text)\n        if (res === null) {\n          return console.warn('[room] edu-manager is invalid', res)\n        }\n        const { cmd, version, requestId, data } = res\n        EduLogger.info('Raw MessageFromPeer peer cmd', cmd)\n        if (version !== 1) {\n          return EduLogger.warn('received old version', requestId, data, cmd)\n        }\n        switch(cmd) {\n          case EduPeerMessageCmdType.peer: {\n            EduLogger.info(`自定义聊天消息, PeerMessage.${EduPeerMessageCmdType.peer}: `, data, requestId)\n            const textMessage: EduTextMessage = MessageSerializer.getEduTextMessage(data)\n            this.emit('user-chat-message', {\n              message: textMessage\n            })\n            break;\n          }\n          // peer private custom message\n          case EduPeerMessageCmdType.customMessage: {\n            EduLogger.info(`订阅自定义点对点消息，PeerMessage.${EduPeerMessageCmdType.customMessage}: `, data)\n            const customMessage: EduCustomMessage = MessageSerializer.getEduCustomMessage(data)\n            EduLogger.info(`自定义点对点消息, user-message`, customMessage)\n            this.emit('user-message', {\n              message: customMessage\n            })\n            break;\n          }\n        }\n        // this.fire('MessageFromPeer', evt)\n      })\n      EduLogger.debug(`rtm login userUuid: ${userUuid}, rtmToken: ${rtmToken} success`)\n      await rtmWrapper.login({\n        userUuid,\n        rtmToken,\n        appId: this.config.appId,\n        uploadLog: true,\n      })\n      EduLogger.debug(`login userUuid: ${userUuid} success`)\n      this._rtmWrapper = rtmWrapper\n    } catch (err) {\n      throw err\n    }\n  }\n\n  async logout() {\n    if (this.rtmWrapper) {\n      this._ended = true\n      await this.rtmWrapper.destroyRtm()\n      this.removeAllListeners()\n      this._rtmWrapper = undefined\n    }\n  }\n\n  createClassroom(params: ClassroomInitParams): EduClassroomManager {\n\n    const roomUuid = params.roomUuid\n\n    let classroomManager = new EduClassroomManager({\n      roomUuid: roomUuid,\n      roomName: params.roomName,\n      eduManager: this,\n      apiService: new AgoraEduApi(this.config.appId, this.authorization),\n    })\n    this._classroomMap[params.roomUuid] = classroomManager\n    this._dataBuffer[params.roomUuid] = new EduClassroomDataController(this._classroomMap[params.roomUuid])\n    return this._classroomMap[params.roomUuid]\n  }\n}","import { MultipartUploadResult } from 'ali-oss';\nimport uuidv4 from 'uuid/v4';\nimport { Room, PPT, PPTKind, ApplianceNames } from 'white-web-sdk';\nimport MD5 from 'js-md5';\nimport { resolveFileInfo } from './helper';\n\nexport type imageSize = {\n  width: number\n  height: number\n};\n\nexport type PPTDataType = {\n    active: boolean\n    pptType: PPTType\n    id: string\n    data: any\n    cover?: any\n};\n\nexport enum PPTType {\n    dynamic = \"dynamic\",\n    static = \"static\",\n    init = \"init\",\n}\nexport type NetlessImageFile = {\n  width: number;\n  height: number;\n  file: File;\n  coordinateX: number;\n  coordinateY: number;\n};\n\nexport type TaskType = {\n  uuid: string,\n  imageFile: NetlessImageFile\n};\n\nexport type PPTProgressListener = (phase: PPTProgressPhase, percent: number) => void;\n\nexport enum PPTProgressPhase {\n  Uploading,\n  Converting,\n}\n\nexport class UploadManager {\n\n  private readonly ossClient: any;\n  private readonly room: Room;\n  private readonly ossUploadCallback?: (res: any) => void;\n  public constructor(ossClient: any, room: Room, ossUploadCallback?: (res: any) => void) {\n    this.ossClient = ossClient;\n    this.room = room;\n    this.ossUploadCallback = ossUploadCallback;\n  }\n  \n  public async convertFile(\n    rawFile: File,\n    pptConverter: any,\n    kind: PPTKind,\n    folder: string,\n    uuid: string,\n    onProgress?: PPTProgressListener,\n  ): Promise<void> {\n    const {fileType} = resolveFileInfo(rawFile);\n    const path = `/${folder}/${uuid}${fileType}`;\n    const pptURL = await this.addFile(path, rawFile, onProgress);\n    let res: PPT;\n    if (kind === PPTKind.Static) {\n        res = await pptConverter.convert({\n          url: pptURL,\n          kind: kind,\n          onProgressUpdated: (progress: number) => {\n            if (onProgress) {\n              onProgress(PPTProgressPhase.Converting, progress);\n            }\n          },\n        });\n        const documentFile: PPTDataType = {\n          active: true,\n          id: `${uuidv4()}`,\n          pptType: PPTType.static,\n          data: res.scenes,\n        };\n        const scenePath = MD5(`/${uuid}/${documentFile.id}`);\n        this.room.putScenes(`/${scenePath}`, res.scenes);\n        this.room.setScenePath(`/${scenePath}/${res.scenes[0].name}`);\n    } else {\n        res = await pptConverter.convert({\n          url: pptURL,\n          kind: kind,\n          onProgressUpdated: (progress: number) => {\n            if (onProgress) {\n              onProgress(PPTProgressPhase.Converting, progress);\n            }\n          },\n        });\n        const documentFile: PPTDataType = {\n          active: true,\n          id: `${uuidv4()}`,\n          pptType: PPTType.dynamic,\n          data: res.scenes,\n        };\n        const scenePath = MD5(`/${uuid}/${documentFile.id}`);\n        this.room.putScenes(`/${scenePath}`, res.scenes);\n        this.room.setScenePath(`/${scenePath}/${res.scenes[0].name}`);\n    }\n    if (onProgress) {\n        onProgress(PPTProgressPhase.Converting, 1);\n    }\n  }\n  private getImageSize(imageInnerSize: imageSize): imageSize {\n    const windowSize: imageSize = {width: window.innerWidth, height: window.innerHeight};\n    const widthHeightProportion: number = imageInnerSize.width / imageInnerSize.height;\n    const maxSize: number = 960;\n    if ((imageInnerSize.width > maxSize && windowSize.width > maxSize) || (imageInnerSize.height > maxSize && windowSize.height > maxSize)) {\n      if (widthHeightProportion > 1) {\n        return {\n          width: maxSize,\n          height: maxSize / widthHeightProportion,\n        };\n      } else {\n        return {\n          width: maxSize * widthHeightProportion,\n          height: maxSize,\n        };\n      }\n    } else {\n      if (imageInnerSize.width > windowSize.width || imageInnerSize.height > windowSize.height) {\n        if (widthHeightProportion > 1) {\n          return {\n            width: windowSize.width,\n            height: windowSize.width / widthHeightProportion,\n          };\n        } else {\n          return {\n            width: windowSize.height * widthHeightProportion,\n            height: windowSize.height,\n          };\n        }\n      } else {\n        return {\n          width: imageInnerSize.width,\n          height: imageInnerSize.height,\n        };\n      }\n    }\n  }\n  public async uploadImageFiles(folder: string, imageFiles: File[], x: number, y: number, onProgress?: PPTProgressListener): Promise<void> {\n    const newAcceptedFilePromises = imageFiles.map(file => this.fetchWhiteImageFileWith(file, x, y));\n    const newAcceptedFiles = await Promise.all(newAcceptedFilePromises);\n    await this.uploadImageFilesArray(folder, newAcceptedFiles, onProgress);\n  }\n\n  private fetchWhiteImageFileWith(file: File, x: number, y: number): Promise<NetlessImageFile> {\n    return new Promise(resolve => {\n      const image = new Image();\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = () => {\n        image.src = reader.result as string;\n        image.onload = async () => {\n          const res = this.getImageSize(image);\n          const imageFile: NetlessImageFile = {\n            width: res.width,\n            height: res.height,\n            file: file,\n            coordinateX: x,\n            coordinateY: y,\n          };\n          resolve(imageFile);\n        };\n      };\n    });\n  }\n  private async uploadImageFilesArray(folder: string, imageFiles: NetlessImageFile[], onProgress?: PPTProgressListener): Promise<void> {\n    if (imageFiles.length > 0) {\n\n      const tasks: { uuid: string, imageFile: NetlessImageFile }[] = imageFiles.map(imageFile => {\n        return {\n          uuid: uuidv4(),\n          imageFile: imageFile,\n        };\n      });\n\n      for (const {uuid, imageFile} of tasks) {\n        const {x, y} = this.room.convertToPointInWorld({x: imageFile.coordinateX, y: imageFile.coordinateY});\n        this.room.insertImage({\n          uuid: uuid,\n          centerX: x,\n          centerY: y,\n          width: imageFile.width,\n          height: imageFile.height,\n          locked: false,\n        });\n      }\n      await Promise.all(tasks.map(task => this.handleUploadTask(folder, task, onProgress)));\n      if (this.room.isWritable) {\n        this.room.setMemberState({\n          currentApplianceName: ApplianceNames.selector,\n        });\n      }\n    }\n  }\n  private async handleUploadTask(folder: string, task: TaskType, onProgress?: PPTProgressListener): Promise<void> {\n    const fileUrl: string = await this.addFile(`/${folder}/${task.uuid}${task.imageFile.file.name}`, task.imageFile.file, onProgress);\n    if (this.room.isWritable) {\n      this.room.completeImageUpload(task.uuid, fileUrl);\n    }\n  }\n\n  private getFile = (name: string): string => {\n    return this.ossClient.generateObjectUrl(name);\n  }\n  public addFile = async (path: string, rawFile: File, onProgress?: PPTProgressListener): Promise<string> => {\n    const res: MultipartUploadResult = await this.ossClient.multipartUpload(\n      path,\n      rawFile,\n      {\n        progress: (p: any) => {\n          if (onProgress) {\n            onProgress(PPTProgressPhase.Uploading, p);\n          }\n        },\n      });\n      if (this.ossUploadCallback) {\n        this.ossUploadCallback(res);\n      }\n    if (res.res.status === 200) {\n      return this.getFile(path);\n    } else {\n      throw new Error(`upload to ali oss error, status is ${res.res.status}`);\n    }\n  }\n}","import { EnumBoardState } from './../../sdk/education/core/services/interface.d';\nimport { UploadManager, PPTProgressListener } from '@/utils/upload-manager';\nimport { AppStore } from '@/stores/app';\nimport { observable, action, computed, runInAction } from 'mobx'\nimport { PPTProgressPhase } from '@/utils/upload-manager'\nimport { Room, PPTKind, ViewMode } from 'white-web-sdk'\nimport { BoardClient } from '@/components/netless-board/board-client';\nimport { get, isEmpty, omit } from 'lodash';\nimport { OSSConfig } from '@/utils/helper';\nimport OSS from 'ali-oss';\nimport uuidv4 from 'uuid/v4';\nimport { t } from '@/i18n';\nimport { EduUser, EduRoleType } from '@/sdk/education/interfaces';\n\nexport const resolveFileInfo = (file: any) => {\n  const fileName = encodeURI(file.name);\n  const fileType = fileName.substring(fileName.length, fileName.lastIndexOf('.'));\n  return {\n    fileName,\n    fileType\n  }\n}\n\nexport const ossConfig: OSSConfig = {\n  \"accessKeyId\": get(process.env, 'REACT_APP_YOUR_OWN_OSS_BUCKET_KEY', 'empty-placeholder'),\n  \"accessKeySecret\": get(process.env, 'REACT_APP_YOUR_OWN_OSS_BUCKET_SECRET', 'empty-placeholder'),\n  \"bucket\": get(process.env, 'REACT_APP_YOUR_OWN_OSS_BUCKET_NAME', 'empty-placeholder'),\n  // \"region\": process.env.REACT_APP_YOUR_OWN_OSS_BUCKET_REGION as string,\n  \"endpoint\": get(process.env, 'REACT_APP_YOUR_OWN_OSS_CDN_ACCELERATE', 'empty-placeholder'),\n  \"folder\": get(process.env, 'REACT_APP_YOUR_OWN_OSS_BUCKET_FOLDER', 'empty-placeholder'),\n}\n\nconst pathName = (path: string): string => {\n  const reg = /\\/([^/]*)\\//g;\n  reg.exec(path);\n  if (RegExp.$1 === 'aria') {\n      return '';\n  } else {\n      return RegExp.$1;\n  }\n}\n\nexport interface SceneItem {\n  file: {\n    name: string\n    type: string\n  }\n  path: string\n  rootPath: string\n}\n\nenum FollowState {\n  Follow = 1,\n  Freedom = 0\n}\n\nexport class BoardStore {\n\n  static items: any = [\n    {\n      name: 'selector',\n      text: t('tool.selector')\n    },\n    {\n      name: 'pencil',\n      text: t('tool.pencil')\n    },\n    {\n      name: 'rectangle',\n      text: t('tool.rectangle')\n    },\n    {\n      name: 'ellipse',\n      text: t('tool.ellipse')\n    },\n    {\n      name: 'text',\n      text: t('tool.text')\n    },\n    {\n      name: 'eraser',\n      text: t('tool.eraser')\n    },\n    {\n      name: 'color_picker',\n      text: t('tool.color_picker')\n    },\n    {\n      name: 'add',\n      text: t('tool.add')\n    },\n    {\n      name: 'upload',\n      text: t('tool.upload')\n    },\n    {\n      name: 'hand_tool',\n      text: t('tool.hand_tool')\n    }\n  ]\n\n  scenes: any[] = []\n\n  @observable\n  loading: boolean = false\n\n  @observable\n  converting: boolean = false\n\n  @observable\n  currentPage: number = 0\n\n  @observable\n  totalPage: number = 0\n\n  @observable\n  currentScene: any = '/init'\n\n  @observable\n  hasBoardPermission: number = 0\n\n  @observable\n  selector: string = '';\n\n  @observable\n  showFolder: boolean = false;\n\n  @action\n  closeFolder() {\n    this.showFolder = false\n  }\n\n  @action\n  openFolder() {\n    this.showFolder = true\n  }\n\n  @observable\n  lock: boolean = false\n\n  @observable\n  showUpload: boolean = false;\n\n  @observable\n  activeFooterItem: string = ''\n\n  @observable\n  uuid: string = '';\n\n  @observable\n  roomToken: string = '';\n\n  @observable\n  sceneItems: SceneItem[] = [];\n\n  @observable\n  activeScenePath: string = '/init'\n\n  @action\n  changeScenePath(path: string) {\n    this.activeScenePath = path\n    if (this.online && this.room) {\n      this.room.setScenePath(this.activeScenePath)\n    }\n  }\n\n  menuTitle: string = '课件目录'\n\n  appStore!: AppStore\n\n  @observable\n  _boardClient?: BoardClient = undefined\n\n  @computed\n  get boardClient(): BoardClient {\n    return this._boardClient as BoardClient;\n  }\n\n  ossClient: OSS\n\n  @observable\n  ready: boolean = false\n\n  constructor(appStore: AppStore) {\n    this.appStore = appStore\n    this._boardClient = undefined\n    this.ossClient = new OSS(ossConfig)\n  }\n\n  @observable\n  online: boolean = false;\n\n  get room(): Room {\n    return this.boardClient.room\n  }\n\n  get localUser(): EduUser {\n    return this.appStore.roomStore.roomManager.localUser.user\n  }\n\n  @observable\n  follow: number = 0\n\n\n  @observable\n  grantUsers: any[] = []\n\n  @observable\n  permission: number = 0\n\n  get localUserUuid() {\n    return this.appStore.userUuid\n  }\n\n  @action\n  async init() {\n      let {\n        info: {\n          boardId,\n          boardToken\n        },\n      } = await this.boardService.getBoardInfo()\n      await this.join({\n        uuid: boardId,\n        roomToken: boardToken,\n        // $el: dom,\n        role: this.userRole,\n        isWritable: true,\n        disableDeviceInputs: true,\n        disableCameraTransform: true,\n        disableAutoResize: false\n      })\n      const grantUsers = get(this.room.state.globalState, 'grantUsers', [])\n      const follow = get(this.room.state.globalState, 'follow', 0)\n      this.grantUsers = grantUsers\n      const boardUser = this.grantUsers.includes(this.localUserUuid)\n      if (boardUser) {\n        this._grantPermission = true\n      }\n      this.follow = follow\n      // 默认只有老师不用禁止跟随\n      if (this.userRole !== 'teacher') {\n        if (this.boardClient.room && this.boardClient.room.isWritable) {\n          if (this.follow === FollowState.Follow) {\n            // await this.setWritable(true)\n            this.room.setViewMode(ViewMode.Broadcaster)\n            this.room.disableCameraTransform = true\n            this.room.disableDeviceInputs = true\n            this.lock = true\n          }\n          if (this.follow === FollowState.Freedom) {\n            // await this.setWritable(true)\n            this.room.setViewMode(ViewMode.Freedom)\n            this.room.disableCameraTransform = false\n            this.room.disableDeviceInputs = false\n            this.lock = false\n          }\n        }\n      } else {\n        this.room.disableCameraTransform = false\n      }\n\n      if (this.hasPermission) {\n        await this.setWritable(true)\n      } else {\n        await this.setWritable(this._grantPermission as boolean)\n      }\n      this.ready = true\n  }\n\n  @action\n  setFollow(v: number) {\n    this.follow = v\n\n    if (this.follow === FollowState.Follow) {\n      this.lock = true\n    } else {\n      this.lock = false\n    }\n\n    const isTeacher = this.userRole === 'teacher'\n\n    if (isTeacher) {\n      if (this.online && this.room) {\n        if (this.follow === FollowState.Follow) {\n          this.appStore.uiStore.addToast(t('toast.open_whiteboard_follow'))\n          this.room.setViewMode(ViewMode.Broadcaster)\n        } else {\n          this.appStore.uiStore.addToast(t('toast.close_whiteboard_follow'))\n          this.room.setViewMode(ViewMode.Freedom)\n        }\n      }\n    } else {\n      if (this.online && this.room) {\n        if (this.follow === FollowState.Follow) {\n          this.room.disableCameraTransform = true\n          this.room.setViewMode(ViewMode.Follower)\n          this.room.disableDeviceInputs = true\n        } else {\n          this.room.disableCameraTransform = false\n          this.room.setViewMode(ViewMode.Freedom)\n          this.room.disableDeviceInputs = false\n        }\n      }\n    }\n  }\n\n  @action\n  setGrantPermission(v: boolean) {\n    this._grantPermission = v\n    this.setWritable(v)\n  }\n\n  @action\n  setGrantUsers(args: any[]) {\n    this.grantUsers = args\n  }\n\n  @action\n  async join(params: any) {\n    const {role, ...data} = params\n    const identity = role === 'teacher' ? 'host' : 'guest'\n    this._boardClient = new BoardClient({identity})\n    this.boardClient.on('onPhaseChanged', (state: any) => {\n      if (state === 'disconnected') {\n        this.online = false\n      }\n    })\n    this.boardClient.on('onRoomStateChanged', (state: any) => {\n      if (state.zoomScale) {\n        runInAction(() => {\n          this.scale = state.zoomScale\n        })\n      }\n      if (state.sceneState || state.globalState) {\n        this.updateSceneItems()\n      }\n      if (state.globalState) {\n        this.updateBoardState()\n      }\n    })\n    console.log(\"[breakout board] join\", data)\n    await this.boardClient.join(data)\n    console.log(\"[breakout board] after join\", data)\n    this.online = true\n    // this.updateSceneItems()\n    //@ts-ignore\n    this.room.bindHtmlElement(null)\n    window.addEventListener('resize', () => {\n      if (this.online && this.room && this.room.isWritable) {\n        this.room.moveCamera({centerX: 0, centerY: 0});\n        this.room.refreshViewSize();\n      }\n    })\n    this.updateSceneItems()\n  }\n\n  @action\n  async leave() {\n    if (this.boardClient && this.room) {\n      await this.boardClient.destroy()\n      this.room.bindHtmlElement(null)\n      this.reset()\n      // window.removeEventListener('resize', () => {})\n    }\n  }\n\n  @action\n  changeFooterMenu(itemName: string) {\n    this.activeFooterItem = itemName\n    const room = this.room\n    if (!room || !room.isWritable) return\n    switch(this.activeFooterItem) {\n      case 'first_page': {\n        this.changePage(0, true)\n        return\n      }\n      case 'last_page': {\n        this.changePage(this.totalPage-1, true)\n        return\n      }\n      case 'next_page': {\n        this.changePage(room.state.sceneState.index + 1)\n        return\n      }\n      case 'prev_page' : {\n        this.changePage(room.state.sceneState.index - 1)\n        return\n      }\n    }\n  }\n\n  @observable\n  showColorPicker: boolean = false\n\n  @observable\n  strokeColor: any = {\n    r: 0,\n    g: 0,\n    b: 0\n  }\n\n  @action\n  setTool(tool: string) {\n    this.selector = tool\n    if (this.selector === 'upload') {\n      this.showUpload = true\n    }\n    else if (this.showUpload) {\n      this.showUpload = false\n    }\n\n    if (this.selector === 'color_picker') {\n      this.showColorPicker = true\n    } else if (this.showColorPicker) {\n      this.showColorPicker = false\n    }\n\n    if (!this.room || !this.room.isWritable) return\n\n    switch(this.selector) {\n      case 'eraser':\n      case 'ellipse':\n      case 'rectangle':\n      case 'pencil':\n      case 'text':\n      case 'selector': {\n        this.room.handToolActive = false\n        this.room.setMemberState({\n          currentApplianceName: this.selector as any\n        });\n        break;\n      }\n      case 'color_picker': {\n        this.room.setMemberState({\n          currentApplianceName: \"selector\" as any,\n        });\n        break;\n      }\n      case 'hand_tool': {\n        if (true) {\n          this.room.setMemberState({\n            currentApplianceName: \"hand\" as any\n          })\n        }\n        break;\n      }\n      case 'add': {\n        const room = this.room\n        const newIndex = room.state.sceneState.index + 1\n        const scenePath = room.state.sceneState.scenePath\n        const currentPath = `/${pathName(scenePath)}`\n        if (room.isWritable) {\n          room.putScenes(currentPath, [{}], newIndex)\n          room.setSceneIndex(newIndex)\n        }\n        break;\n      }\n      default:\n        this.room.handToolActive = false\n        this.room.setMemberState({\n          currentApplianceName: \"selector\" as any,\n        })\n        break;\n    }\n  }\n\n  @observable\n  scale: number = 1\n\n  @action\n  changeColor(color: any) {\n    const {rgb} = color;\n    const {r, g, b} = rgb;\n    if (this.room) {\n      this.room.setMemberState({\n        strokeColor: [r, g, b]\n      })\n      const [r1, g1, b1] = this.room.state.memberState.strokeColor\n      this.strokeColor = {\n        r: r1,\n        g: g1,\n        b: b1\n      }\n    }\n    // this.strokeColor = {\n    //   r,\n    //   g,\n    //   b\n    // }\n  }\n\n  @action\n  updateScale(scale: number) {\n    if (this.room && this.online) {\n      this.room.moveCamera({scale})\n    }\n    this.scale = scale\n  }\n\n  @action\n  async toggleLockBoard() {\n    if (this.boardClient && this.room) {\n      if (this.follow) {\n        this.boardClient.cancelFollow()\n        this.room.setViewMode(ViewMode.Freedom)\n      } else {\n        this.boardClient.startFollow()\n        this.room.setViewMode(ViewMode.Broadcaster)\n      }\n    }\n  }\n\n  @observable\n  uploadingPhase: string = '';\n  @observable\n  convertingPhase: string = '';\n\n  handleProgress (phase: PPTProgressPhase, percent: number) { \n    if (phase === PPTProgressPhase.Uploading) {\n      if (percent < 1) {\n        runInAction(() => {\n          if (this.uploadingPhase !== 'uploading'){\n            this.uploadingPhase == 'uploading'\n          }\n        })\n      } else {\n        runInAction(() => {\n          this.uploadingPhase = 'upload_finished'\n        })\n      }\n      return;\n    }\n\n    if (phase === PPTProgressPhase.Converting) {\n      if (percent < 1) {\n        runInAction(() => {\n          if (this.convertingPhase !== 'converting') {\n            this.convertingPhase = 'uploading'\n          }\n        })\n      } else {\n        this.convertingPhase = 'converting_done'\n      }\n      return;\n    }\n  }\n\n  @action\n  handleSuccess() {\n    if (this.uploadingPhase) {\n      this.uploadingPhase = ''\n    }\n    if (this.convertingPhase) {\n      this.convertingPhase = ''\n    }\n  }\n\n  @action\n  handleFailure() {\n    if (this.uploadingPhase === 'uploading') {\n      this.uploadingPhase = 'upload_failure'\n    }\n    if (this.convertingPhase == 'converting') {\n      this.convertingPhase = 'upload_failure'\n    }\n  }\n\n  @computed \n  get loadingType (): string {\n    if (!this._boardClient) return 'loading';\n    if (this.converting) return 'converting';\n    if (this.loading) return 'loading';\n    return '';\n  }\n\n  @observable\n  sceneType: string = ''\n\n  changePage(idx: number, force?: boolean) {\n    const room = this.room\n    if (!room || !room.isWritable) return;\n    const _idx = idx\n    if (_idx < 0 || _idx >= this.totalPage) {\n      console.warn(_idx < 0, _idx >= this.totalPage)\n      return\n    }\n    if (force) {\n      room.setSceneIndex(_idx);\n      this.updateSceneItems()\n      return\n    }\n    if (this.sceneType === 'dynamic') {\n      if (_idx > this.currentPage) {\n        room.pptNextStep();\n      } else {\n        room.pptPreviousStep();\n      }\n    } else {\n      room.setSceneIndex(_idx);\n    }\n    this.updateSceneItems()\n  }\n\n  @action\n  addScenes(path: string, ppt: any) {\n\n  }\n\n  @action\n  removeScenes(path: string, isMainScene: boolean) {\n    const room = this.room\n    if (this.online && room) {\n      room.removeScenes(path)\n      const roomGlobalState: Record<string, any> = room.state.globalState\n      const sceneMap = roomGlobalState['sceneMap'];\n      const newSceneMap = omit(sceneMap, [`${path}`])\n      if (isMainScene) {\n        room.setGlobalState({\n          sceneMap: ''\n        })\n      } else {\n        room.setGlobalState({\n          sceneMap: newSceneMap\n        })\n      }\n      this.updateSceneItems()\n    }\n  }\n\n  getNameByScenePath(scenePath: string) {\n    const room = this.room\n    const sceneMap = get(room, `state.globalState.sceneMap`, {})\n    return get(sceneMap, scenePath, 'default name')\n  }\n\n  @action\n  updateBoardState() {\n    const follow = get(this.room.state.globalState, 'follow', 0)\n    if (follow !== this.follow) {\n      this.setFollow(follow)\n      // this.follow = follow\n      if (this.userRole === 'student') {\n        if (this.follow) {\n          this.appStore.uiStore.addToast(t('toast.whiteboard_lock'))\n        } else {\n          this.appStore.uiStore.addToast(t('toast.whiteboard_unlock'))\n        }\n      }\n    }\n\n    this.grantUsers = get(this.room.state.globalState, 'grantUsers', [])\n    const grantUsers = this.grantUsers\n    if (grantUsers && Array.isArray(grantUsers)) {\n      const hasPermission = grantUsers.includes(this.localUserUuid) || this.roomType === 0 ? true : false\n      if (this.userRole === 'student' && hasPermission !== this.hasPermission) {\n        const notice = hasPermission ? 'toast.teacher_accept_whiteboard' : 'toast.teacher_cancel_whiteboard'\n        this.appStore.uiStore.addToast(t(notice))\n      }\n      this.setGrantUsers(grantUsers)\n      if (this.userRole === 'student') {\n        this.setGrantPermission(hasPermission)\n      }\n    }\n  }\n\n  @action\n  updateSceneItems() {\n    const room = this.room\n\n    const path = room.state.sceneState.scenePath;\n    const ppt = room.state.sceneState.scenes[0].ppt;\n\n    const type = isEmpty(ppt) ? 'static' : 'dynamic';\n\n    // if (type !== 'dynamic') {\n    //   this.state = {\n    //     ...this.state,\n    //     currentHeight: 0,\n    //     currentWidth: 0\n    //   }\n    // } else {\n    //   this.state = {\n    //     ...this.state,\n    //     currentHeight: get(ppt, 'height', 0),\n    //     currentWidth: get(ppt, 'width', 0)\n    //   }\n    // }\n\n    const entriesScenes = room ? room.entireScenes() : {};\n\n    const paths = Object.keys(entriesScenes);\n\n    let scenes: any[] = [];\n    for (let dirPath of paths) {\n      const sceneInfo = {\n        path: dirPath,\n        file: {\n          name: this.getNameByScenePath(dirPath),\n          type: 'whiteboard'\n        },\n        type: 'static',\n        rootPath: '',\n      }\n      if (entriesScenes[dirPath]) {\n        sceneInfo.rootPath = ['/', '/init'].indexOf(dirPath) !== -1 ? '/init' : `${dirPath}/${entriesScenes[dirPath][0].name}`\n        sceneInfo.type = entriesScenes[dirPath][0].ppt ? 'dynamic' : 'static'\n        if (sceneInfo.type === 'dynamic') {\n          sceneInfo.file.type = 'ppt';\n        }\n      }\n      scenes.push(sceneInfo);\n    }\n\n    const _dirPath = pathName(path);\n    const currentScenePath = _dirPath === '' ? '/' : `/${_dirPath}`;\n\n    const _dirs: any[] = [];\n    scenes.forEach((it: any) => {\n      _dirs.push({\n        path: it.path,\n        rootPath: it.rootPath,\n        file: it.file\n      });\n    });\n\n    this.currentScene = currentScenePath\n    this.sceneItems = scenes\n    this.updatePagination()\n  }\n\n  @action\n  updatePagination() {\n    const room = this.room\n    if(this.online && room) {\n      this.currentPage = room.state.sceneState.index + 1;\n      this.totalPage = room.state.sceneState.scenes.length;\n    }\n  }\n\n  @observable\n  convertPhase: string = ''\n\n  @action\n  updateConvertPhase(v: string) {\n    this.convertPhase = v\n    if (this.convertPhase === 'converting') {\n      this.converting = true\n    } else {\n      this.converting = false\n    }\n    if (this.uploadPhase === 'convert_success') {\n      this.addNotice({\n        title: t('room.convert_success'),\n        type: 'ok'\n      })\n    }\n\n    if (this.uploadPhase === 'convert_failure') {\n      this.addNotice({\n        title: t('room.convert_failure'),\n        type: 'error'\n      })\n    }\n  }\n\n  @action\n  updateUploadPhase(v: string) {\n    this.uploadPhase = v\n    if (this.uploadPhase === 'uploading') {\n      this.loading = true\n    } else {\n      this.loading = false\n    }\n    if (this.uploadPhase === 'upload_success') {\n      this.addNotice({\n        title: t('room.upload_success'),\n        type: 'ok'\n      })\n    }\n\n    if (this.uploadPhase === 'upload_failure') {\n      this.addNotice({\n        title: t('room.upload_failure'),\n        type: 'error'\n      })\n    }\n  }\n\n  @observable\n  uploadPhase: string = ''\n  \n  @action\n  async uploadDynamicPPT(file: any) {\n    if (file && this.online) {\n      try {\n        const room = this.room\n        const uploadManager = new UploadManager(this.ossClient, room);\n        const pptConverter = this.boardClient.client.pptConverter(room.roomToken)\n        const onProgress: PPTProgressListener = (phase: PPTProgressPhase, percent: number) => {\n          if (phase === PPTProgressPhase.Uploading) {\n            if (percent < 1) {\n              this.uploadPhase !== 'uploading' && this.updateUploadPhase('uploading');\n            } else {\n              this.updateUploadPhase('upload_success');\n            }\n          }\n  \n          if (phase === PPTProgressPhase.Converting) {\n            if (percent < 1) {\n              this.convertPhase !== 'converting' && this.updateConvertPhase('converting');\n            } else {\n              this.updateConvertPhase('convert_success');\n            }\n          }\n        }\n        await uploadManager.convertFile(\n          file,\n          pptConverter,\n          PPTKind.Dynamic,\n          ossConfig.folder,\n          room.uuid,\n          onProgress);\n      } catch (err) {\n        if (this.uploadPhase === 'uploading') {\n          this.updateUploadPhase('upload_failure')\n        }\n        if (this.convertPhase === 'converting') {\n          this.updateConvertPhase('convert_failure')\n        }\n        console.warn(err)\n      }\n    }\n  }\n\n  @action\n  async uploadStaticFile(file: any) {\n    try {\n      if (file && this.online) {\n        const room = this.room\n        const uploadManager = new UploadManager(this.ossClient, room);\n        const pptConverter = this.boardClient.client.pptConverter(room.roomToken)\n        const onProgress: PPTProgressListener = (phase: PPTProgressPhase, percent: number) => {\n          if (phase === PPTProgressPhase.Uploading) {\n            if (percent < 1) {\n              this.uploadPhase !== 'uploading' && this.updateUploadPhase('uploading');\n            } else {\n              this.updateUploadPhase('upload_success');\n            }\n          }\n  \n          if (phase === PPTProgressPhase.Converting) {\n            if (percent < 1) {\n              this.convertPhase !== 'converting' && this.updateConvertPhase('converting');\n            } else {\n              this.updateConvertPhase('convert_success');\n            }\n          }\n        }\n        await uploadManager.convertFile(\n          file,\n          pptConverter,\n          PPTKind.Static,\n          ossConfig.folder,\n          room.uuid,\n          onProgress);\n      }\n    } catch (err) {\n      if (this.uploadPhase === 'uploading') {\n        this.updateUploadPhase('upload_failure')\n      }\n      if (this.convertPhase === 'converting') {\n        this.updateConvertPhase('convert_failure')\n      }\n      console.warn(err)\n    }\n  }\n\n  @action\n  async uploadAudioVideo(file: any) {\n    if (file && this.online) {\n      const room = this.room\n      const uploadManager = new UploadManager(this.ossClient, room);\n      try {\n        const {fileName, fileType} = resolveFileInfo(file);\n        const path = `/${ossConfig.folder}`\n        const uuid = uuidv4();\n        const onProgress: PPTProgressListener = (phase: PPTProgressPhase, percent: number) => {\n          if (phase === PPTProgressPhase.Uploading) {\n            if (percent < 1) {\n              this.uploadPhase !== 'uploading' && this.updateUploadPhase('uploading');\n            } else {\n              this.updateUploadPhase('upload_success');\n            }\n          }\n  \n          if (phase === PPTProgressPhase.Converting) {\n            if (percent < 1) {\n              this.convertPhase !== 'converting' && this.updateConvertPhase('converting');\n            } else {\n              this.updateConvertPhase('convert_success');\n            }\n          }\n        }\n        const res = await uploadManager.addFile(`${path}/video-${fileName}${uuid}`, file,\n          onProgress\n        );\n        const isHttps = res.indexOf(\"https\") !== -1;\n        let url;\n        if (isHttps) {\n          url = res;\n        } else {\n          url = res.replace(\"http\", \"https\");\n        }\n        const type = fileType.split(\".\")[1];\n        if (url && this.online && room) {\n          if (type.toLowerCase() === 'mp4') {\n            const res = room.insertPlugin('video', {\n              originX: 0,\n              originY: 0,\n              width: 480,\n              height: 270,\n              attributes: {\n                pluginVideoUrl: url,\n                isNavigationDisable: false\n              },\n            });\n          }\n          if (type.toLowerCase() === 'mp3') {\n            const res = room.insertPlugin('audio', {\n              originX: 0,\n              originY: 0,\n              width: 480,\n              height: 86,\n              attributes: {\n                pluginAudioUrl: url,\n                isNavigationDisable: false\n              },\n            });\n          }\n          return;\n        }\n      } catch(err) {\n        if (this.uploadPhase === 'uploading') {\n          this.updateUploadPhase('upload_failure')\n        }\n        if (this.convertPhase === 'converting') {\n          this.updateConvertPhase('convert_failure')\n        }\n        console.warn(err)\n      }\n    }\n  }\n\n  @action\n  async uploadImage(file: any, dom: HTMLDivElement | null = null) {\n    if (this.online && file) {\n      const room = this.room\n      const uploadFileArray: File[] = [];\n      uploadFileArray.push(file);\n      const onProgress: PPTProgressListener = (phase: PPTProgressPhase, percent: number) => {\n        if (phase === PPTProgressPhase.Uploading) {\n          if (percent < 1) {\n            this.uploadPhase !== 'uploading' && this.updateUploadPhase('uploading');\n          } else {\n            this.updateUploadPhase('upload_success');\n          }\n        }\n\n        if (phase === PPTProgressPhase.Converting) {\n          if (percent < 1) {\n            this.convertPhase !== 'converting' && this.updateConvertPhase('converting');\n          } else {\n            this.updateConvertPhase('convert_success');\n          }\n        }\n      }\n      try {\n        const uploadManager = new UploadManager(this.ossClient, room);\n        if (dom) {\n          const { clientWidth, clientHeight } = dom;\n          await uploadManager.uploadImageFiles(ossConfig.folder, uploadFileArray, clientWidth / 2, clientHeight / 2, onProgress);\n        } else {\n          const clientWidth = window.innerWidth;\n          const clientHeight = window.innerHeight;\n          await uploadManager.uploadImageFiles(ossConfig.folder, uploadFileArray, clientWidth / 2, clientHeight / 2, onProgress);\n        }\n      } catch (err) {\n        if (this.uploadPhase === 'uploading') {\n          this.updateUploadPhase('upload_failure')\n        }\n        if (this.convertPhase === 'converting') {\n          this.updateConvertPhase('convert_failure')\n        }\n        console.warn(err)\n      }\n    }\n  }\n\n  @observable\n  notices: any[] = []\n\n  @action\n  addNotice(it: any) {\n    this.notices.push({\n      title: it.title,\n      type: it.type\n    })\n  }\n\n  @action\n  removeNotice(it: any) {\n    const idx = this.notices.findIndex((t: any) => t.title === it.title)\n    if (idx !== -1) {\n      this.notices.splice(idx, 1)\n    }\n  }\n\n  @action\n  reset () {\n    this.scenes = []\n    this.currentPage = 0\n    this.totalPage = 0\n    this.currentScene = '/init'\n    this.hasBoardPermission = 0\n    this.selector = ''\n    this.notices = []\n    this.converting = false\n    this.loading = false\n    this.uploadPhase = ''\n    this.convertingPhase = ''\n    this.permission = 0\n    this.follow = 0\n    this.grantUsers = []\n    this._grantPermission = false\n    this.ready = false\n  }\n\n  roomIsWritable(room: Room): boolean {\n    if (room) {\n      return room.isWritable\n    }\n    return false\n  }\n\n  async setWritable(v: boolean) {\n    if (this.online && this.room) {\n      await this.room.setWritable(v)\n\n      if (this.lock) return\n      this.room.disableDeviceInputs = !v\n    }\n  }\n\n  @action\n  async grantUserPermission(userUuid: string) {\n    await this.boardService.updateBoardUserState(userUuid, EnumBoardState.grantPermission)\n  }\n\n  @action\n  async revokeUserPermission(userUuid: string) {\n    await this.boardService.updateBoardUserState(userUuid, EnumBoardState.revokePermission)\n  }\n\n  get userRole () {\n    return this.appStore.userRole\n  }\n\n  get roomType (): number {\n    return this.appStore.roomType\n  }\n\n  get boardService() {\n    return this.appStore.boardService\n  }\n\n  @observable\n  _grantPermission?: boolean = false\n\n  @computed\n  get hasPermission(): boolean {\n    if (this.userRole === 'teacher' || this.roomType === 0) {\n      return true\n    }\n    return this._grantPermission as boolean\n  }\n\n  checkUserPermission(userUuid: string): boolean {\n    return this.grantUsers.includes(userUuid)\n  }\n\n  @action\n  async grantBoardPermission(userUuid: string) {\n    try {\n      this.boardClient.grantPermission(userUuid)\n      this.appStore.uiStore.addToast(`授权白板成功`)\n    } catch (err) {\n      this.appStore.uiStore.addToast(t('toast.failed_to_authorize_whiteboard') + `${err.msg}`)\n    }\n  }\n\n  @action\n  async revokeBoardPermission(userUuid: string) {\n    try {\n      this.boardClient.revokePermission(userUuid)\n      this.appStore.uiStore.addToast(`取消授权白板成功`)\n    } catch (err) {\n      this.appStore.uiStore.addToast(t('toast.failed_to_deauthorize_whiteboard') + `${err.msg}`)\n    }\n  }\n\n  mount(dom: any) {\n    console.log(\"mounted\", dom, this.boardClient && this.boardClient.room)\n    if (this.boardClient && this.boardClient.room) {\n      this.boardClient.room.bindHtmlElement(dom)\n    }\n  }\n\n  unmount() {\n    if (this.boardClient && this.boardClient.room) {\n      this.boardClient.room.bindHtmlElement(null)\n    }\n  }\n}","import { EventEmitter } from 'events';\nimport { Room, WhiteWebSdk, DeviceType, createPlugins, Plugins, JoinRoomParams, Player, ReplayRoomParams, ViewMode, ScreenType } from 'white-web-sdk';\nimport { videoPlugin } from '@netless/white-video-plugin';\nimport { audioPlugin } from '@netless/white-audio-plugin';\nimport { get } from 'lodash';\n\nconst appIdentifier = process.env.REACT_APP_NETLESS_APP_ID as string\n \nexport class BoardClient extends EventEmitter {\n  client!: WhiteWebSdk;\n  plugins?: Plugins<Object>;\n  room!: Room;\n  player!: Player;\n\n  sceneIndex: number = 0;\n\n  disconnected?: boolean = true\n\n  constructor(config: {identity: string} = {identity: 'guest'}) {\n    super()\n    this.initPlugins(config.identity)\n    this.init()\n  }\n\n  initPlugins (identity: string) {\n    const plugins = createPlugins({\"video\": videoPlugin, \"audio\": audioPlugin});\n\n    plugins.setPluginContext(\"video\", {identity});\n    plugins.setPluginContext(\"audio\", {identity});\n    this.plugins = plugins;\n  }\n  \n  init () {\n    this.client = new WhiteWebSdk({\n      deviceType: DeviceType.Surface,\n      plugins: this.plugins,\n      appIdentifier: appIdentifier,\n      loggerOptions: {\n        disableReportLog: true,\n        reportLevelMask: \"debug\",\n        printLevelMask: \"debug\",\n      }\n    })\n    this.disconnected = true\n  }\n\n  async join(params: JoinRoomParams) {\n    console.log('[breakout board] before board client join', params)\n    this.room = await this.client.joinRoom(params, {\n      onPhaseChanged: phase => {\n        this.emit('onPhaseChanged', phase);\n      },\n      onRoomStateChanged: state => {\n        this.emit('onRoomStateChanged', state)\n      },\n      onDisconnectWithError: error => {\n        this.emit('onDisconnectWithError', error)\n      },\n      onKickedWithReason: reason => {\n        this.emit('onKickedWithReason', reason)\n      },\n      onKeyDown: event => {\n        this.emit('onKeyDown', event)\n      },\n      onKeyUp: event => {\n        this.emit('onKeyUp', event)\n      },\n      onHandToolActive: active => {\n        this.emit('onHandToolActive', active)\n      },\n      onPPTLoadProgress: (uuid: string, progress: number) => {\n        this.emit('onPPTLoadProgress', {uuid, progress})\n      },\n    })\n    console.log('[breakout board] board client join')\n    this.disconnected = false\n  }\n\n  async replay(params: ReplayRoomParams) {\n    this.player = await this.client.replayRoom(params, {\n      onPhaseChanged: phase => {\n        this.emit('onPhaseChanged', phase)\n      },\n      onLoadFirstFrame: () => {\n        console.log('onLoadFirstFrame')\n        this.emit('onLoadFirstFrame')\n      },\n      onSliceChanged: () => {\n        console.log('onSliceChanged')\n        this.emit('onSliceChanged')\n      },\n      onPlayerStateChanged: (error) => {\n        this.emit('onPlayerStateChanged', error)\n      },\n      onStoppedWithError: (error) => {\n        this.emit('onStoppedWithError', error)\n      },\n      onProgressTimeChanged: (scheduleTime) => {\n        this.emit('onProgressTimeChanged', scheduleTime)\n      }\n    })\n  }\n\n  followMode() {\n    if (this.room && !this.disconnected) {\n      this.room.setViewMode(ViewMode.Broadcaster)\n    }\n  }\n\n  startFollow() {\n    if (this.room && !this.disconnected) {\n      this.room.setGlobalState({\n        follow: 1\n      })\n      console.log('[board] set start follow')\n    }\n  }\n\n  cancelFollow() {\n    if (this.room && !this.disconnected) {\n      this.room.setGlobalState({\n        follow: 0\n      })\n      console.log('[board] set cancel follow')\n    }\n  }\n\n  grantPermission(userUuid: string) {\n    if (this.room && !this.disconnected) {\n      const grantUsers = get(this.room.state.globalState, 'grantUsers', [])\n      if (!grantUsers.find((it: string) => it === userUuid)) {\n        grantUsers.push(userUuid)\n        this.room.setGlobalState({\n          grantUsers: grantUsers\n        })\n        console.log('[board] grantUsers ', JSON.stringify(grantUsers))\n      }\n    }\n  }\n\n  revokePermission(userUuid: string) {\n    if (this.room && !this.disconnected) {\n      const grantUsers = get(this.room.state.globalState, 'grantUsers', [])\n      let index = grantUsers.findIndex((it: string) => it === userUuid)\n      if (index !== -1) {\n        grantUsers.splice(index, 1)\n        this.room.setGlobalState({\n          grantUsers: grantUsers\n        })\n        console.log('[board] grantUsers ', JSON.stringify(grantUsers))\n      }\n    }\n  }\n\n  async destroy() {\n    if (this.room && !this.disconnected) {\n      await this.room.disconnect()\n      this.disconnected = true\n    }\n  }\n\n}","export class Mutex {\n  private mutex = Promise.resolve();\n\n  lock(): PromiseLike<() => void> {\n    let begin: (unlock: () => void) => void = unlock => {};\n\n    this.mutex = this.mutex.then(() => {\n      return new Promise(begin);\n    });\n\n    return new Promise(res => {\n      begin = res;\n    });\n  }\n\n  async dispatch<T>(fn: (() => T) | (() => PromiseLike<T>)): Promise<T> {\n    const unlock = await this.lock();\n    try {\n      return await Promise.resolve(fn());\n    } finally {\n      unlock();\n    }\n  }\n}","export class SimpleInterval {\n  _intervalMap: Record<string, any> = {}\n\n  addInterval(key: string, callback: CallableFunction, delay: number) {\n    if (this._intervalMap.hasOwnProperty(key)) {\n      this.delInterval(key)\n    }\n    this._intervalMap[key] = setInterval(callback, delay)\n  }\n\n  delInterval(key: string) {\n    clearInterval(this._intervalMap[key])\n    delete this._intervalMap[key]\n  }\n}","import { AgoraFetchParams } from \"../../interfaces\";\nimport { get } from \"lodash\";\nimport { BoardInfoResponse } from \"./interface\";\nimport { APP_ID, AUTHORIZATION } from \"@/utils/config\";\nimport { HttpClient } from \"../utils/http-client\";\n\nexport class AgoraBoardApi {\n\n  private _board_prefix: string = `${REACT_APP_AGORA_APP_SDK_DOMAIN}/board/apps/%app_id`.replace('%app_id', APP_ID)\n  // private _board_prefix: string = `${REACT_APP_AGORA_APP_SDK_DOMAIN}/scenario/board/apps/%app_id`\n\n  private userToken: string\n  private roomUuid: string\n\n  constructor(\n    userToken: string,\n    roomUuid: string\n  ) {\n    this.userToken = userToken\n    this.roomUuid = roomUuid\n  }\n\n  get board_prefix() {\n    return this._board_prefix\n  }\n\n  async fetch (params: AgoraFetchParams) {\n    const {\n      method,\n      token,\n      data,\n      full_url,\n      url,\n      type\n    } = params\n    const opts: any = {\n      method,\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Basic ${AUTHORIZATION!.replace(/basic\\s+|basic/i, '')}`\n      }\n    }\n\n    if (this.userToken) {\n      opts.headers['token'] = this.userToken;\n    }\n    \n    if (data) {\n      opts.body = JSON.stringify(data);\n    }\n\n    const resp = await HttpClient(`${this.board_prefix}${url}`, opts);\n  \n    // WARN: 需要约定状态码\n    if (resp.code !== 0) {\n      throw {msg: resp.msg}\n    }\n\n    return resp\n  }\n\n  async getBoardInfo(roomUuid: string): Promise<BoardInfoResponse> {\n    let boardRoom = await this.getBoardRoomInfo(roomUuid)\n    return {\n      info: {\n        boardId: get(boardRoom, 'info.boardId'),\n        boardToken: get(boardRoom, 'info.boardToken'),\n      },\n      state: {\n        follow: get(boardRoom, 'state.follow'),\n        grantUsers: get(boardRoom, 'state.grantUsers', [])\n      }\n    }\n  }\n\n  async getCurrentBoardInfo() {\n    let info = await this.getBoardInfo(this.roomUuid);\n    return info;\n  }\n  \n  async getBoardRoomInfo(roomUuid: string): Promise<any> {\n    let res = await this.fetch({\n      type: 'board',\n      url: `/v1/rooms/${roomUuid}`,\n      method: 'GET',\n    })\n    return res.data\n  }\n\n  async updateBoardUserState(roomUuid: string, userUuid: string, grantPermission: number) {\n    let res = await this.fetch({\n      type: 'board',\n      url: `/v1/rooms/${roomUuid}/users/${userUuid}`,\n      method: 'PUT',\n      data: {\n        grantPermission\n      }\n    })\n    return res\n  }\n\n  async updateBoardRoomState(roomUuid: string, follow: number) {\n    let res = await this.fetch({\n      type: 'board',\n      url: `/v1/rooms/${roomUuid}/state`,\n      method: 'PUT',\n      data: {\n        follow\n      }\n    })\n    return res\n  }\n\n  async updateCurrentBoardUserState(userUuid: string, grantPermission: number) {\n    return await this.updateBoardUserState(this.roomUuid, userUuid, grantPermission)\n  }\n\n  async updateCurrentBoardState(follow: number) {\n    return await this.updateBoardRoomState(this.roomUuid, follow)\n  }\n}\n","import { ReplayParams } from './../replay/index';\nimport { Room, WhiteWebSdk, DeviceType, createPlugins, Plugins, JoinRoomParams, Player, ReplayRoomParams, ViewMode } from 'white-web-sdk';\nimport { EventEmitter } from 'events';\nimport { AgoraBoardApi } from \"../education/core/services/board-api\";\n\nexport class EduBoardService {\n  apiService: AgoraBoardApi;\n\n  constructor(userToken: string, roomUuid: string) {\n    this.apiService = new AgoraBoardApi(userToken, roomUuid)\n  }\n\n  async getBoardInfo() {\n    let info = await this.apiService.getCurrentBoardInfo()\n    console.log(\">>> info\", info)\n    return info\n  }\n\n  async updateBoardUserState(userUuid: string, grantPermission: number) {\n    let info = await this.apiService.updateCurrentBoardUserState(userUuid, grantPermission)\n    return info\n  }\n\n  async updateBoardRoomState(follow: number) {\n    let info = await this.apiService.updateCurrentBoardState(follow)\n    return info\n  }\n}","import { AgoraFetchParams } from \"../../interfaces\";\nimport { APP_ID, AUTHORIZATION } from \"@/utils/config\";\nimport { HttpClient } from \"../utils/http-client\";\n\nexport class AgoraRecordApi {\n\n  private userToken: string;\n\n  constructor(userToken: string) {\n    this.userToken = userToken\n  }\n\n  private record_prefix: string = `${REACT_APP_AGORA_APP_SDK_DOMAIN}/recording/apps/%app_id`.replace('%app_id', APP_ID)\n\n  async fetch (params: AgoraFetchParams) {\n    const {\n      method,\n      data,\n      full_url,\n      url,\n    } = params\n    const opts: any = {\n      method,\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Basic ${AUTHORIZATION!.replace(/basic\\s+|basic/i, '')}`\n      }\n    }\n\n    if (this.userToken) {\n      opts.headers['token'] = this.userToken;\n    }\n    \n    if (data) {\n      opts.body = JSON.stringify(data);\n    }\n  \n    let resp: any;\n    if (full_url) {\n      resp = await HttpClient(`${full_url}`, opts);\n    } else {\n      resp = await HttpClient(`${this.record_prefix}${url}`, opts);\n    }\n  \n    // WARN: 需要约定状态码\n    if (resp.code !== 0) {\n      throw {msg: resp.msg}\n    }\n\n    return resp\n  }\n\n  async queryRoomRecordBy(roomUuid: string) {\n    let nextId = 0\n    let buffer: any[] = []\n    do {\n      const url = nextId > 0 ? `/v1/rooms/${roomUuid}/records?nextId=${nextId}` : `/v1/rooms/${roomUuid}/records`\n      let {data} = await this.fetch({\n        url,\n        method: 'GET',\n      })\n      nextId = data.nextId\n      buffer = (buffer as any).concat(data.list)\n    } while (nextId)\n\n    return {\n      list: buffer\n    }\n  }\n\n  async startRecording(roomUuid: string) {\n    let res = await this.fetch({\n      url: `/v1/rooms/${roomUuid}/records/start`,\n      method: 'POST',\n      data: {\n        \"recordingConfig\": {\n          \"maxIdleTime\": 900\n        },\n        // \"storageConfig\": {\n        //     \"accessKey\": \"\",\n        //     \"region\": \"\",\n        //     \"bucket\": \"\",\n        //     \"secretKey\": \"\",\n        //     \"vendor\": \"\"\n        // }\n      }\n    })\n    return {\n      recordId: res.data.recordId\n    }\n  }\n\n  async stopRecording(roomUuid: string, recordId: string) {\n    let res = await this.fetch({\n      url: `/v1/rooms/${roomUuid}/records/${recordId}/stop`,\n      method: 'POST',\n    })\n    return res.data\n  }\n}","import { AgoraRecordApi } from './../education/core/services/record-api';\n\nexport class EduRecordService {\n\n  apiService: AgoraRecordApi;\n\n  constructor(userToken: string) {\n    this.apiService = new AgoraRecordApi(userToken)\n  }\n\n  async getCourseRecordBy(roomUuid: string) {\n    return await this.apiService.queryRoomRecordBy(roomUuid)\n  }\n  \n  async startRecording(roomUuid: string) {\n    return await this.apiService.startRecording(roomUuid)\n  }\n\n  async stopRecording(roomUuid: string, recordId: string) {\n    return await this.apiService.stopRecording(roomUuid, recordId)\n  }\n}","import { AgoraFetchParams } from \"@/sdk/education/interfaces\";\nimport { EduRoomType } from \"@/sdk/education/core/services/interface.d\";\nimport { APP_ID, AUTHORIZATION } from \"@/utils/config\";\nimport { HttpClient } from \"@/sdk/education/core/utils/http-client\";\n\nexport interface QueryRoomResponseData {\n  roomName: string\n  roomUuid: string\n  roleConfig: any\n}\n\nexport interface EduClassroomConfig {\n  roomName: string\n  roomUuid: string\n  roleConfig: {\n    host?: {\n      limit: number\n    }\n    audience?: {\n      limit: number\n    }\n    broadcaster?: {\n      limit: number\n    }\n    assistant?: {\n      limit: number\n    }\n  }\n}\n\nexport class RoomApi {\n  constructor() {\n\n  }\n\n  get prefix(): string {\n    return `${REACT_APP_AGORA_APP_SDK_DOMAIN}/scene/apps/%app_id`.replace(\"%app_id\", APP_ID)\n  }\n\n  async fetch (params: AgoraFetchParams) {\n    const {\n      method,\n      token,\n      data,\n      full_url,\n      url,\n      type\n    } = params\n    const opts: any = {\n      method,\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Basic ${AUTHORIZATION!.replace(/basic\\s+|basic/i, '')}`\n      }\n    }\n    \n    if (data) {\n      opts.body = JSON.stringify(data);\n    }\n\n    if (token) {\n      opts.headers['token'] = token\n    }\n  \n    let resp: any;\n    if (full_url) {\n      resp = await HttpClient(`${full_url}`, opts);\n    } else {\n      resp = await HttpClient(`${this.prefix}${url}`, opts);\n      // switch (type) {\n      //   default: {\n      //     fetchResponse = await fetch(`${this.prefix}${url}`, opts);\n      //     break;\n      //   }\n      // }\n    }\n      \n    // WARN: 需要约定状态码\n    if (resp.code !== 0) {\n      throw {msg: resp.msg}\n    }\n\n    return resp\n  }\n\n  async acquireRoomGroupBy(roomUuid: string, userToken: string) {\n    const memberLimit = 4\n    try {\n      let data = await this.createGroup(roomUuid, memberLimit, userToken)\n      return data\n    } catch (err) {\n      console.warn('[breakout] ', err)\n    }\n  }\n\n  async fetchRoom(params: {roomName: string, roomType: number}) {\n    const roomConfig: any = {\n      roomUuid: `${params.roomName}${params.roomType}`,\n      roomName: `${params.roomName}`,\n      roleConfig: {\n        host: {\n          limit: 1\n        },\n        broadcaster: {\n          limit: 1\n        }\n      }\n    }\n    try {\n      if (params.roomType === EduRoomType.SceneType1v1) {\n        roomConfig.roleConfig = {\n          host: {\n            limit: 1\n          },\n          broadcaster: {\n            limit: 1\n          }\n        }\n      }\n\n      if (params.roomType === EduRoomType.SceneTypeSmallClass) {\n        roomConfig.roleConfig = {\n          host: {\n            limit: 1\n          },\n          broadcaster: {\n            limit: 16\n          }\n        }\n      }\n\n      if (params.roomType === EduRoomType.SceneTypeBigClass) {\n        roomConfig.roleConfig = {\n          host: {\n            limit: 1\n          },\n          audience: {\n            limit: -1\n          },\n          broadcaster: {\n            limit: 1\n          }\n        }\n      }\n\n      if (params.roomType === EduRoomType.SceneTypeBreakoutClass) {\n        roomConfig.roleConfig = {\n          host: {\n            limit: 1\n          },\n          audience: {\n            limit: -1\n          },\n          assistant: {\n            limit: 1\n          }\n        }\n      }\n      \n      await this.createRoom(roomConfig)\n    } catch (err) {\n      if (err.msg !== 'Room conflict!') {\n        throw err\n      }\n    }\n    return await this.queryRoom(roomConfig.roomUuid);\n  }\n\n  async createGroup(roomUuid: string, memberLimit: number, userToken: string) {\n    let res = await this.fetch({\n      full_url: `${REACT_APP_AGORA_APP_SDK_DOMAIN}/grouping/apps/${APP_ID}/v1/rooms/${roomUuid}/groups`,\n      method: 'POST',\n      data: {\n        roleConfig: {\n          broadcaster: {\n            limit: 4\n          },\n          assistant: {\n            limit: 1\n          }\n        },\n        memberLimit: memberLimit\n      },\n      token: userToken\n    })\n    return res.data\n  }\n\n  async createRoom(params: EduClassroomConfig) {\n    const {roomUuid, ...data} = params\n    let res = await this.fetch({\n      url: `/v1/rooms/${roomUuid}/config`,\n      method: 'POST',\n      data: data\n    })\n    return res\n  }\n\n  async queryRoom(roomUuid: string): Promise<QueryRoomResponseData> {\n    let {data} = await this.fetch({\n      url: `/v1/rooms/${roomUuid}/config`,\n      method: 'GET',\n    })\n    return {\n      roomName: data.roomName,\n      roomUuid: data.roomUuid,\n      roleConfig: data.roleConfig\n    }\n  }\n\n  async queryScreenShare(roomUuid: string): Promise<any> {\n    let {data} = await this.fetch({\n      url: `/v1/rooms/${roomUuid}/config`,\n      method: 'POST'\n    })\n    return {\n      uid: data.uid,\n      channel: data.channel,\n      token: data.token\n    }\n  }\n}","import { Mutex } from './../../utils/mutex';\nimport uuidv4 from 'uuid/v4';\nimport { SimpleInterval } from './../mixin/simple-interval';\nimport { EduBoardService } from './../../sdk/board/edu-board-service';\nimport { EduRecordService } from './../../sdk/record/edu-record-service';\nimport { EduAudioSourceType, EduTextMessage, EduSceneType } from './../../sdk/education/interfaces/index';\nimport { RemoteUserRenderer } from './../../sdk/education/core/media-service/renderer/index';\nimport { RoomApi } from './../../services/room-api';\nimport { EduClassroomManager } from '@/sdk/education/room/edu-classroom-manager';\nimport { PeerInviteEnum } from '@/sdk/education/user/edu-user-service';\nimport { LocalUserRenderer, UserRenderer } from '../../sdk/education/core/media-service/renderer/index';\nimport { AppStore } from '@/stores/app/index';\nimport { AgoraWebRtcWrapper } from '../../sdk/education/core/media-service/web/index';\nimport { observable, computed, action, runInAction } from 'mobx';\nimport { AgoraElectronRTCWrapper } from '@/sdk/education/core/media-service/electron';\nimport { StartScreenShareParams, PrepareScreenShareParams } from '@/sdk/education/core/media-service/interfaces';\nimport { MediaService } from '@/sdk/education/core/media-service';\nimport { get } from 'lodash';\nimport { EduCourseState, EduUser, EduStream, EduVideoSourceType, EduRoleType } from '@/sdk/education/interfaces';\nimport { ChatMessage } from '@/utils/types';\nimport { t } from '@/i18n';\nimport { DialogType } from '@/components/dialog';\n\nconst delay = 2000\n\nconst ms = 500\n\nexport const networkQualities: {[key: string]: string} = {\n  'excellent': 'network-good',\n  'good': 'network-good',\n  'poor': 'network-normal',\n  'bad': 'network-normal',\n  'very bad': 'network-bad',\n  'down': 'network-bad',\n  'unknown': 'network-normal',\n}\n\nexport type EduMediaStream = {\n  streamUuid: string\n  userUuid: string\n  renderer?: UserRenderer\n  account: string\n  local: boolean\n  audio: boolean\n  video: boolean\n  showControls: boolean\n}\n\nexport class RoomStore extends SimpleInterval {\n\n  static resolutions: any[] = [\n    {\n      name: '480p',\n      value: '480p_1',\n    },\n    {\n      name: '720p',\n      value: '720p_1',\n    },\n    {\n      name: '1080p',\n      value: '1080p_1'\n    }\n  ]\n\n  @observable\n  resolutionIdx: number = 0\n\n  @observable\n  deviceList: any[] = []\n\n  @observable\n  cameraLabel: string = '';\n\n  @observable\n  microphoneLabel: string = '';\n  _totalVolume: any;\n\n  @observable\n  _cameraId: string = '';\n\n  @observable\n  _microphoneId: string = '';\n  private _boardService?: EduBoardService;\n  private _recordService?: EduRecordService;\n\n  @computed\n  get cameraId(): string {\n    const defaultValue = ''\n    const idx = this.cameraList.findIndex((it: any) => it.label === this.cameraLabel)\n    if (this.cameraList[idx]) {\n      return this.cameraList[idx].deviceId\n    }\n    return defaultValue\n  }\n\n  @computed\n  get microphoneId(): string {\n    const defaultValue = ''\n    const idx = this.microphoneList.findIndex((it: any) => it.label === this.microphoneLabel)\n    if (this.microphoneList[idx]) {\n      return this.microphoneList[idx].deviceId\n    }\n    return defaultValue\n  }\n\n  @observable\n  resolution: string = '480p_1'\n\n  @computed\n  get playbackVolume(): number {\n    if (this._playbackVolume) {\n      return this._playbackVolume\n    }\n    return this.mediaService.getPlaybackVolume()\n  }\n\n  @observable\n  _playbackVolume: number = 0\n\n  @action\n  changePlaybackVolume(volume: number) {\n    this.mediaService.changePlaybackVolume(volume)\n    this._playbackVolume = volume\n  }\n\n  @observable\n  _microphoneTrack?: any = undefined;\n  @observable\n  _cameraRenderer?: LocalUserRenderer = undefined;\n  @observable\n  _screenVideoRenderer?: LocalUserRenderer = undefined;\n\n  @computed\n  get cameraRenderer(): LocalUserRenderer | undefined {\n    return this._cameraRenderer;\n  }\n\n  @observable\n  totalVolume: number = 0;\n\n  @computed\n  get screenVideoRenderer(): LocalUserRenderer | undefined {\n    return this._screenVideoRenderer;\n  }\n\n  appStore: AppStore;\n\n  @observable\n  currentWindowId: string = ''\n\n  @observable\n  customScreenShareWindowVisible: boolean = false;\n\n  @observable\n  customScreenShareItems: any[] = []\n\n  @observable\n  settingVisible: boolean = false\n\n  autoplay: boolean = false\n\n  @observable\n  recordState: boolean = false\n\n  @computed\n  get remoteUsersRenderer() {\n    return this.appStore.mediaStore.remoteUsersRenderer\n  }\n\n  startTime: number = 0\n\n  constructor(appStore: AppStore) {\n    super()\n    this.appStore = appStore\n  }\n\n  get boardService(): EduBoardService {\n    return this.appStore.boardService\n  }\n\n  get recordService(): EduRecordService {\n    return this.appStore.recordService\n  }\n\n  @observable\n  sharing: boolean = false;\n\n  @action\n  showSetting() {\n    this.settingVisible = true\n  }\n\n  @action\n  hideSetting() {\n    this.settingVisible = false\n  }\n\n  @action\n  resetCameraTrack () {\n    this._cameraRenderer = undefined\n  }\n\n  @action\n  resetMicrophoneTrack() {\n    this._microphoneTrack = undefined\n  }\n\n  @action\n  resetScreenTrack () {\n    this._screenVideoRenderer = undefined\n  }\n\n  @action\n  resetScreenStream() {\n    if (this.screenVideoRenderer) {\n      this.screenVideoRenderer.stop()\n      this._screenVideoRenderer = undefined\n    }\n    if (this.screenEduStream) {\n      this._screenEduStream = undefined\n    }\n  }\n\n  @action\n  reset() {\n    this.appStore.mediaStore.resetRoomState()\n    this.appStore.resetTime()\n    this.recording = false\n    this.resolutionIdx = 0\n    this.totalVolume = 0\n    this.cameraLabel = ''\n    this.microphoneLabel = ''\n    this.mediaService.reset()\n    this.resetScreenStream()\n    this.streamList = []\n    this.userList = []\n    this.customScreenShareWindowVisible = false\n    this.currentWindowId = ''\n    this.customScreenShareItems = []\n    this.roomChatMessages = []\n    this.isMuted = undefined\n    this._cameraEduStream = undefined\n    this._screenEduStream = undefined\n    this._microphoneTrack = undefined\n    this.recordId = ''\n    this.joined = false\n    this._hasCamera = undefined\n    this._hasMicrophone = undefined\n    this.microphoneLock = false\n    this.cameraLock = false\n    this.recordState = false\n  }\n\n  @action\n  showScreenShareWindowWithItems () {\n    if (this.isElectron) {\n      this.mediaService.prepareScreenShare().then((items: any) => {\n        runInAction(() => {\n          this.customScreenShareWindowVisible = true\n          this.customScreenShareItems = items\n        })\n      }).catch(err => {\n        console.warn('show screen share window with items', err)\n        if (err.code === 'ELECTRON_PERMISSION_DENIED') {\n          this.appStore.uiStore.addToast(t('toast.failed_to_enable_screen_sharing_permission_denied'))\n        } else {\n          this.appStore.uiStore.addToast(t('toast.failed_to_enable_screen_sharing') + ` code: ${err.code}, msg: ${err.msg}`)\n        }\n      })\n    }\n  }\n\n  get roomUuid(): string {\n    return this.roomManager?.roomUuid\n  }\n\n  @action\n  async startNativeScreenShareBy(windowId: number) {\n    try {\n      this.waitingShare = true\n      await this.roomManager?.userService.startShareScreen()\n      const params: any = {\n        channel: this.roomManager?.roomUuid,\n        uid: +this.roomManager?.userService.screenStream.stream.streamUuid,\n        token: this.roomManager?.userService.screenStream.token,\n      }\n      await this.mediaService.startScreenShare({\n        windowId: windowId as number,\n        params\n      })\n      if (!this.mediaService.screenRenderer) {\n        this.appStore.uiStore.addToast(t('create_screen_share_failed'))\n        return\n      } else {\n        this._screenVideoRenderer = this.mediaService.screenRenderer\n      }\n      this.removeScreenShareWindow()\n      this.sharing = true\n    } catch (err) {\n      console.warn(err)\n      this.waitingShare = false\n      this.appStore.uiStore.addToast(t('toast.failed_to_initiate_screen_sharing') + `${err.msg}`)\n    }\n  }\n\n  @action\n  removeScreenShareWindow () {\n    if (this.isElectron) {\n      this.customScreenShareWindowVisible = false\n      this.customScreenShareItems = []\n    }\n  }\n\n  @computed\n  get cameraList() {\n    return this.deviceList.filter((it: any) => it.kind === 'videoinput')\n  }\n\n  @computed\n  get microphoneList() {\n    return this.deviceList.filter((it: any) => it.kind === 'audioinput')\n  }\n\n  init(option: {video?: boolean, audio?: boolean} = {video: true, audio: true}) {\n    if (option.video) {\n      this.mediaService.getCameras().then((list: any[]) => {\n        runInAction(() => {\n          this.deviceList = list;\n        })\n      })\n    }\n    if (option.audio) {\n      this.mediaService.getMicrophones().then((list: any[]) => {\n        runInAction(() => {\n          this.deviceList = list;\n        })\n      })\n    }\n  }\n\n  release() {\n    // this.mediaService.release()\n  }\n\n  get mediaService(): MediaService {\n    return this.appStore.eduManager.mediaService as MediaService;\n  }\n\n  get web(): AgoraWebRtcWrapper {\n    return (this.mediaService.sdkWrapper as AgoraWebRtcWrapper)\n  }\n\n  get isWeb(): boolean {\n    return this.mediaService.sdkWrapper instanceof AgoraWebRtcWrapper\n  }\n\n  get isElectron(): boolean {\n    return this.mediaService.sdkWrapper instanceof AgoraElectronRTCWrapper\n  }\n\n  private _hasCamera?: boolean = undefined\n  private _hasMicrophone?: boolean = undefined\n\n  public readonly mutex = new Mutex()\n\n  public cameraLock: boolean = false\n\n  lockCamera() {\n    this.cameraLock = true\n    console.log('[demo] lockCamera ')\n  }\n\n  unLockCamera() {\n    this.cameraLock = false\n    console.log('[demo] unlockCamera ')\n  }\n\n  @action\n  async openCamera() {\n    if (this._cameraRenderer) {\n      return console.warn('[demo] Camera already exists')\n    }\n    if (this.cameraLock) {\n      return console.warn('[demo] openCamera locking')\n    }\n    this.lockCamera()\n    try {\n      const deviceId = this._cameraId\n      await this.mediaService.openCamera({deviceId})\n      this._cameraRenderer = this.mediaService.cameraRenderer\n      this.cameraLabel = this.mediaService.getCameraLabel()\n      this._cameraId = this.cameraId\n      console.log('[demo] action in openCamera >>> openCamera')\n      this.unLockCamera()\n    } catch (err) {\n      this.unLockCamera()\n      console.log('[demo] action in openCamera >>> openCamera')\n      console.warn(err)\n      throw err\n    }\n  }\n\n  @action\n  async muteLocalCamera() {\n    if (this.cameraLock) {\n      return console.warn('[demo] openCamera locking')\n    }\n    console.log('[demo] [local] muteLocalCamera')\n    if (this._cameraRenderer) {\n      await this.closeCamera()\n      this.unLockCamera()\n    }\n    await this.roomManager?.userService.updateMainStreamState({'videoState': false})\n  }\n\n  @action \n  async unmuteLocalCamera() {\n    console.log('[demo] [local] unmuteLocalCamera')\n    if (this.cameraLock) {\n      return console.warn('[demo] [mic lock] unmuteLocalCamera')\n    }\n    await this.openCamera()\n    await this.roomManager?.userService.updateMainStreamState({'videoState': true})\n  }\n\n  @action\n  async muteLocalMicrophone() {\n    console.log('[demo] [local] muteLocalMicrophone')\n    if (this.microphoneLock) {\n      return console.warn('[demo] [mic lock] muteLocalMicrophone')\n    }\n    await this.closeMicrophone()\n    this.unLockMicrophone()\n    await this.roomManager?.userService.updateMainStreamState({'audioState': false})\n  }\n\n  @action \n  async unmuteLocalMicrophone() {\n    console.log('[demo] [local] unmuteLocalMicrophone')\n    if (this.microphoneLock) {\n      return console.warn('[demo] [mic lock] unmuteLocalMicrophone')\n    }\n    await this.openMicrophone()\n    await this.roomManager?.userService.updateMainStreamState({'audioState': true})\n  }\n\n  @action\n  async closeCamera() {\n    await this.mediaService.closeCamera()\n    this.resetCameraTrack()\n  }\n\n  @action\n  async changeCamera(deviceId: string) {\n    await this.mediaService.changeCamera(deviceId)\n    this.cameraLabel = this.mediaService.getCameraLabel()\n    this._cameraId = deviceId\n  }\n\n  public microphoneLock: boolean = false\n\n  lockMicrophone() {\n    this.microphoneLock = true\n    console.log('[demo] lockMicrophone ')\n  }\n\n  unLockMicrophone() {\n    this.microphoneLock = false\n    console.log('[demo] unLockMicrophone ')\n  }\n\n  @action\n  async openMicrophone() {\n    if (this._microphoneTrack) {\n      return console.warn('[demo] Microphone already exists')\n    }\n\n    if (this.microphoneLock) {\n      return console.warn('[demo] openMicrophone locking 1')\n    }\n    this.lockMicrophone()\n    try {\n      const deviceId = this._microphoneId\n      await this.mediaService.openMicrophone({deviceId})\n      this._microphoneTrack = this.mediaService.microphoneTrack\n      this.microphoneLabel = this.mediaService.getMicrophoneLabel()\n      console.log('[demo] action in openMicrophone >>> openMicrophone')\n      this._microphoneId = this.microphoneId\n      this.unLockMicrophone()\n    } catch (err) {\n      this.unLockMicrophone()\n      console.log('[demo] action in openMicrophone >>> openMicrophone')\n      console.warn(err)\n      throw err\n    }\n  }\n\n  @action\n  async closeMicrophone() {\n    if (this.microphoneLock) return console.warn('[demo] closeMicrophone microphone is locking')\n    await this.mediaService.closeMicrophone()\n    this.resetMicrophoneTrack()\n  }\n\n  @action\n  async changeMicrophone(deviceId: string) {\n    await this.mediaService.changeMicrophone(deviceId)\n    this.microphoneLabel = this.mediaService.getMicrophoneLabel()\n    this._microphoneId = deviceId\n  }\n\n  @action\n  async changeResolution(resolution: any) {\n    await this.mediaService.changeResolution(resolution)\n    runInAction(() => {\n      this.resolution = resolution\n    })\n  }\n\n  @observable\n  waitingShare: boolean = false\n\n  @action\n  async stopWebSharing() {\n    try {\n      this.waitingShare = true\n      if (this._screenVideoRenderer) {\n        await this.mediaService.stopScreenShare()\n        this.mediaService.screenRenderer && this.mediaService.screenRenderer.stop()\n        this._screenVideoRenderer = undefined\n      }\n      if (this._screenEduStream) {\n        await this.roomManager?.userService.stopShareScreen()\n        this._screenEduStream = undefined\n      }\n      this.sharing = false\n    } catch(err) {\n      this.appStore.uiStore.addToast(t('toast.failed_to_end_screen_sharing') + `${err.msg}`)\n    } finally {\n      this.waitingShare = false\n    }\n  }\n\n  @action\n  async startWebSharing() {\n    try {\n      this.waitingShare = true\n      await this.mediaService.prepareScreenShare({\n        shareAudio: 'auto',\n        encoderConfig: '720p'\n      })\n      await this.roomManager?.userService.startShareScreen()\n      const params: any = {\n        channel: this.roomManager?.roomUuid,\n        uid: +this.roomManager?.userService.screenStream.stream.streamUuid,\n        token: this.roomManager?.userService.screenStream.token,\n      }\n\n      await this.mediaService.startScreenShare({\n        params\n      })\n      this._screenEduStream = this.roomManager?.userService.screenStream.stream\n      this._screenVideoRenderer = this.mediaService.screenRenderer\n      this.sharing = true\n    } catch (err) {\n      if (this.mediaService.screenRenderer) {\n        this.mediaService.screenRenderer.stop()\n        this.mediaService.screenRenderer = undefined\n        this._screenVideoRenderer = undefined\n        this.appStore.uiStore.addToast(t('toast.failed_to_initiate_screen_sharing_to_remote') + `${err.msg}`)\n      } else {\n        if (err.code === 'PERMISSION_DENIED') {\n          this.appStore.uiStore.addToast(t('toast.failed_to_enable_screen_sharing_permission_denied'))\n        } else {\n          this.appStore.uiStore.addToast(t('toast.failed_to_enable_screen_sharing') + ` code: ${err.code}, msg: ${err.msg}`)\n        }\n      }\n      console.warn(err)\n    } finally {\n      this.waitingShare = false\n    }\n  }\n\n  async startOrStopSharing() {\n    if (this.isWeb) {\n      if (this.sharing) {\n        await this.stopWebSharing()\n      } else {\n        await this.startWebSharing()\n      }\n    }\n\n    if (this.isElectron) {\n      if (this.sharing) {\n        await this.stopNativeSharing()\n      } else {\n        await this.showScreenShareWindowWithItems()\n      }\n    }\n  }\n\n  @action\n  async prepareScreenShare(params: PrepareScreenShareParams = {}) {\n    const res = await this.mediaService.prepareScreenShare(params)\n    if (this.mediaService.screenRenderer) {\n      this._screenVideoRenderer = this.mediaService.screenRenderer\n    }\n  }\n\n  @action\n  async stopNativeSharing() {\n    if (this.screenEduStream) {\n      await this.roomManager?.userService.stopShareScreen()\n      this._screenEduStream = undefined\n    }\n    if (this._screenVideoRenderer) {\n      await this.mediaService.stopScreenShare()\n      this._screenVideoRenderer && this._screenVideoRenderer.stop()\n      this._screenVideoRenderer = undefined\n    }\n    if (this.customScreenShareWindowVisible) {\n      this.customScreenShareWindowVisible = false\n    }\n    this.customScreenShareItems = []\n    this.sharing = false\n  }\n\n  @action\n  async resetWebPrepareScreen() {\n    if (this.mediaService.screenRenderer) {\n      this.mediaService.screenRenderer\n      this._screenVideoRenderer = undefined\n    }\n  }\n\n  @observable\n  userList: EduUser[] = []\n\n  @observable\n  streamList: EduStream[] = []\n\n  @action\n  async stopScreenShare() {\n\n  }\n\n  @observable\n  unreadMessageCount: number = 0\n\n  @observable\n  messages: any[] = []\n\n  @action\n  async sendMessage(message: any) {\n    try {\n      await this.roomManager?.userService.sendRoomChatMessage(message)\n      this.addChatMessage({\n        id: this.userUuid,\n        ts: +Date.now(),\n        text: message,\n        account: this.roomInfo.userName,\n        sender: true,\n      })\n    } catch (err) {\n      this.appStore.uiStore.addToast(t('toast.failed_to_send_chat'))\n      console.warn(err)\n    }\n  }\n\n  @observable\n  joined: boolean = false\n\n  @observable\n  menuVisible: boolean = false\n\n  @action\n  toggleMenu() {\n    this.menuVisible = !this.menuVisible\n  }\n\n  @observable\n  activeTab: string = 'chatroom'\n\n  @action\n  switchTab(tab: string) {\n    this.activeTab = tab\n  }\n\n  @computed\n  get roomInfo() {\n    return this.appStore.roomInfo\n  }\n  \n  @action\n  resetRoomInfo() {\n    this.appStore.resetRoomInfo()\n  }\n\n  @observable\n  classState: number = 0\n\n  @observable\n  _delay: number = 0\n\n  @computed\n  get delay(): string {\n    return `${this.appStore.mediaStore.delay}`\n  }\n\n  @observable\n  time: number = 0\n\n  _roomManager?: EduClassroomManager = undefined;\n\n  get roomManager(): EduClassroomManager {\n    return this._roomManager as EduClassroomManager\n  }\n\n  @observable\n  _cameraEduStream?: EduStream = undefined\n\n  @observable\n  _screenEduStream?: EduStream = undefined\n\n  @computed\n  get screenEduStream(): EduStream {\n    return this._screenEduStream as EduStream\n  }\n\n  @computed\n  get cameraEduStream(): EduStream {\n    return this._cameraEduStream as EduStream\n  }\n\n  roomApi!: RoomApi\n\n  @observable\n  joiningRTC: boolean = false\n  \n  async joinRTC(args: any) {\n    try {\n      await this.mediaService.join(args)\n      this.joiningRTC = true\n    } catch (err) {\n      this.appStore.uiStore.addToast(t('toast.failed_to_join_rtc_please_refresh_and_try_again'))\n      console.warn(err)\n      throw err\n    }\n  }\n\n  async leaveRtc() {\n    try {\n      this.joiningRTC = false\n      await this.closeCamera()\n      await this.closeMicrophone()\n      // await this.mediaService.closeCamera()\n      // await this.mediaService.closeMicrophone()\n      await this.mediaService.leave()\n      this.appStore.uiStore.addToast(t('toast.leave_rtc_channel'))\n      this.appStore.reset()\n    } catch (err) {\n      this.appStore.uiStore.addToast(t('toast.failed_to_leave_rtc'))\n      console.warn(err)\n    }\n  }\n\n  @action\n  async prepareCamera() {\n    if (this._hasCamera === undefined) {\n      const cameras = await this.mediaService.getCameras()\n      this._hasCamera = !!cameras.length\n      if (this._hasCamera && this.mediaService.isWeb) {\n        this.mediaService.web.publishedVideo = true\n      }\n    }\n  }\n\n  @action\n  async prepareMicrophone() {\n    if (this._hasMicrophone === undefined) {\n      const microphones = await this.mediaService.getMicrophones()\n      this._hasMicrophone = !!microphones.length\n      if (this._hasMicrophone && this.mediaService.isWeb) {\n        this.mediaService.web.publishedAudio = true\n      }\n    }\n  }\n\n  isBigClassStudent(): boolean {\n    const userRole = this.roomInfo.userRole\n    return +this.roomInfo.roomType === 2 && userRole === 'student'\n  }\n\n  get eduManager() {\n    return this.appStore.eduManager\n  }\n\n  promiseLock(): Function {\n    let promise: Promise<any>;\n\n    return function(fn: Function) {\n      return function(...args: any[]) {\n        if (promise) {\n          const resultPromise = promise.then(() => fn(...args));\n          promise = resultPromise.then(() => undefined);\n          return resultPromise;\n        }\n        promise = fn(...args);\n        return promise;\n      };\n    };\n  }\n\n  @action\n  async join() {\n    try {\n      this.appStore.uiStore.startLoading()\n      this.roomApi = new RoomApi()\n      let {roomUuid} = await this.roomApi.fetchRoom({\n        roomName: `${this.roomInfo.roomName}`,\n        roomType: +this.roomInfo.roomType as number,\n      })\n      await this.eduManager.login(this.userUuid)\n  \n      const roomManager = this.eduManager.createClassroom({\n        roomUuid: roomUuid,\n        roomName: this.roomInfo.roomName\n      })\n      roomManager.on('seqIdChanged', (evt: any) => {\n        console.log(\"seqIdChanged\", evt)\n        this.appStore.uiStore.updateCurSeqId(evt.curSeqId)\n        this.appStore.uiStore.updateLastSeqId(evt.latestSeqId)\n      })\n      // 本地用户更新\n      roomManager.on('local-user-updated', (evt: any) => {\n        this.userList = roomManager.getFullUserList()\n        console.log(\"local-user-updated\", evt)\n      })\n      // 本地流移除\n      roomManager.on('local-stream-removed', async (evt: any) => {\n        await this.mutex.dispatch<Promise<void>>(async () => {\n          if (!this.joiningRTC) {\n            return \n          }\n          try {\n            const tag = uuidv4()\n            console.log(`[demo] tag: ${tag}, [${Date.now()}], handle event: local-stream-removed, `, JSON.stringify(evt))\n            if (evt.type === 'main') {\n              this._cameraEduStream = undefined\n              await this.closeCamera()\n              await this.closeMicrophone()\n              console.log(`[demo] tag: ${tag}, [${Date.now()}], main stream closed local-stream-removed, `, JSON.stringify(evt))\n            }\n            console.log(\"[demo] local-stream-removed emit done\", evt)\n          } catch (error) {\n            console.error(`[demo] local-stream-removed async handler failed`)\n            console.error(error)\n          }\n        })\n      })\n      // 本地流加入\n      // roomManager.on('local-stream-added', (evt: any) => {\n      //   this.streamList = roomManager.getFullStreamList()\n      //   console.log(\"local-stream-added\", evt)\n      // })\n      // 本地流更新\n      roomManager.on('local-stream-updated', async (evt: any) => {\n        await this.mutex.dispatch<Promise<void>>(async () => {\n          if (!this.joiningRTC) {\n            return \n          }\n          const tag = uuidv4()\n          console.log(`[demo] tag: ${tag}, seq[${evt.seqId}] time: ${Date.now()} local-stream-updated, `, JSON.stringify(evt))\n          if (evt.type === 'main') {\n            const localStream = roomManager.getLocalStreamData()\n            console.log(`[demo] local-stream-updated tag: ${tag}, time: ${Date.now()} local-stream-updated, main stream `, JSON.stringify(localStream), this.joiningRTC)\n            if (localStream && localStream.state !== 0) {\n              console.log(`[demo] local-stream-updated tag: ${tag}, time: ${Date.now()} local-stream-updated, main stream is online`, ' _hasCamera', this._hasCamera, ' _hasMicrophone ', this._hasMicrophone, this.joiningRTC)\n              this._cameraEduStream = localStream.stream\n              await this.prepareCamera()\n              await this.prepareMicrophone()\n              console.log(`[demo] tag: ${tag}, seq[${evt.seqId}], time: ${Date.now()} local-stream-updated, main stream is online`, ' _hasCamera', this._hasCamera, ' _hasMicrophone ', this._hasMicrophone, this.joiningRTC, ' _eduStream', JSON.stringify(this._cameraEduStream))\n              if (this.joiningRTC) {\n                if (this._hasCamera) {\n                  if (this.cameraEduStream.hasVideo) {\n                    await this.openCamera()\n                    console.log(`[demo] local-stream-updated tag: ${tag}, seq[${evt.seqId}], time: ${Date.now()}  after openCamera  local-stream-updated, main stream is online`, ' _hasCamera', this._hasCamera, ' _hasMicrophone ', this._hasMicrophone, this.joiningRTC, ' _eduStream', JSON.stringify(this._cameraEduStream))\n                  } else {\n                    await this.closeCamera()\n                    console.log(`[demo] local-stream-updated tag: ${tag}, seq[${evt.seqId}], time: ${Date.now()}  after closeCamera  local-stream-updated, main stream is online`, ' _hasCamera', this._hasCamera, ' _hasMicrophone ', this._hasMicrophone, this.joiningRTC, ' _eduStream', JSON.stringify(this._cameraEduStream))\n                  }\n                }\n                if (this._hasMicrophone) {\n                  if (this.cameraEduStream.hasAudio) {\n                    console.log('open microphone')\n                    await this.openMicrophone()\n                    console.log(`[demo] local-stream-updated tag: ${tag}, seq[${evt.seqId}], time: ${Date.now()} after openMicrophone  local-stream-updated, main stream is online`, ' _hasCamera', this._hasCamera, ' _hasMicrophone ', this._hasMicrophone, this.joiningRTC, ' _eduStream', JSON.stringify(this._cameraEduStream))\n                  } else {\n                    console.log('close local-stream-updated microphone')\n                    await this.closeMicrophone()\n                    console.log(`[demo] local-stream-updated tag: ${tag}, seq[${evt.seqId}], time: ${Date.now()}  after closeMicrophone  local-stream-updated, main stream is online`, ' _hasCamera', this._hasCamera, ' _hasMicrophone ', this._hasMicrophone, this.joiningRTC, ' _eduStream', JSON.stringify(this._cameraEduStream))\n                  }\n                }\n              }\n            } else {\n              console.log(\"reset camera edu stream\", JSON.stringify(localStream), localStream && localStream.state)\n              this._cameraEduStream = undefined\n            }\n          }\n    \n          if (evt.type === 'screen') {\n            if (this.roomInfo.userRole === 'teacher') {\n              const screenStream = roomManager.getLocalScreenData()\n              console.log(\"local-stream-updated getLocalScreenData#screenStream \", JSON.stringify(screenStream))\n              if (screenStream && screenStream.state !== 0) {\n                this._screenEduStream = screenStream.stream\n                this.sharing = true\n              } else {\n                console.log(\"local-stream-updated reset screen edu stream\", screenStream, screenStream && screenStream.state)\n                this._screenEduStream = undefined\n                this.sharing = false\n              }\n            }\n          }\n    \n          console.log(`[demo] local-stream-updated tag: ${tag}, seq[${evt.seqId}], time: ${Date.now()} local-stream-updated emit done`, evt)\n          console.log(`[demo] local-stream-updated tag: ${tag}, seq[${evt.seqId}], time: ${Date.now()} local-stream-updated emit done`, ' _hasCamera', this._hasCamera, ' _hasMicrophone ', this._hasMicrophone, this.joiningRTC, ' _eduStream', JSON.stringify(this._cameraEduStream))\n        })\n      })\n      // 远端人加入\n      roomManager.on('remote-user-added', (evt: any) => {\n        runInAction(() => {\n          this.userList = roomManager.getFullUserList()\n        })\n        console.log(\"remote-user-added\", evt)\n      })\n      // 远端人更新\n      roomManager.on('remote-user-updated', (evt: any) => {\n        runInAction(() => {\n          this.userList = roomManager.getFullUserList()\n        })\n        console.log(\"remote-user-updated\", evt)\n      })\n      // 远端人移除\n      roomManager.on('remote-user-removed', (evt: any) => {\n        runInAction(() => {\n          this.userList = roomManager.getFullUserList()\n        })\n        console.log(\"remote-user-removed\", evt)\n      })\n      // 远端流加入\n      roomManager.on('remote-stream-added', (evt: any) => {\n        runInAction(() => {\n          this.streamList = roomManager.getFullStreamList()\n          if (this.roomInfo.userRole !== 'teacher') {\n            if (this.streamList.find((it: EduStream) => it.videoSourceType === EduVideoSourceType.screen)) {\n              this.sharing = true\n            } else { \n              this.sharing = false\n            }\n          }\n        })\n        console.log(\"remote-stream-added\", evt)\n      })\n      // 远端流移除\n      roomManager.on('remote-stream-removed', (evt: any) => {\n        runInAction(() => {\n          this.streamList = roomManager.getFullStreamList()\n          if (this.roomInfo.userRole !== 'teacher') {\n            if (this.streamList.find((it: EduStream) => it.videoSourceType === EduVideoSourceType.screen)) {\n              this.sharing = true\n            } else { \n              this.sharing = false\n            }\n          }\n        })\n        console.log(\"remote-stream-removed\", evt)\n      })\n      // 远端流更新\n      roomManager.on('remote-stream-updated', (evt: any) => {\n        runInAction(() => {\n          this.streamList = roomManager.getFullStreamList()\n          if (this.roomInfo.userRole !== 'teacher') {\n            if (this.streamList.find((it: EduStream) => it.videoSourceType === EduVideoSourceType.screen)) {\n              this.sharing = true\n            } else { \n              this.sharing = false\n            }\n          }\n        })\n        console.log(\"remote-stream-updated\", evt)\n      })\n      const decodeMsg = (str: string) => {\n        try {\n          return JSON.parse(str)\n        } catch(err) {\n          console.warn(err)\n          return null\n        }\n      }\n      this.eduManager.on('user-message', async (evt: any) => {\n        await this.mutex.dispatch<Promise<void>>(async () => {\n          if (!this.joiningRTC) {\n            return \n          }\n          try {\n            console.log('[rtm] user-message', evt)\n            const fromUserUuid = evt.message.fromUser.userUuid\n            const fromUserName = evt.message.fromUser.userName\n            const msg = decodeMsg(evt.message.message)\n            console.log(\"user-message\", msg)\n            if (msg) {\n              const {cmd, data} = msg\n              const {type, userName} = data\n              console.log(\"data\", data)\n              this.showNotice(type as PeerInviteEnum, fromUserUuid)\n              if (type === PeerInviteEnum.studentApply) {\n                this.showDialog(fromUserName, fromUserUuid)\n              }\n              if (type === PeerInviteEnum.teacherStop) {\n                try {\n                  await this.closeCamera()\n                  await this.closeMicrophone()\n                  this.appStore.uiStore.addToast(t('toast.co_video_close_success'))\n                } catch (err) {\n                  this.appStore.uiStore.addToast(t('toast.co_video_close_failed'))\n                  console.warn(err)\n                }\n              }\n              if (type === PeerInviteEnum.teacherAccept \n                && this.isBigClassStudent()) {\n                try {\n                  await this.prepareCamera()\n                  await this.prepareMicrophone()\n                  console.log(\"propertys \", this._hasCamera, this._hasMicrophone)\n                  if (this._hasCamera) {\n                    await this.openCamera()\n                  }\n      \n                  if (this._hasMicrophone) {\n                    console.log('open microphone')\n                    await this.openMicrophone()\n                  }\n                } catch (err) {\n                  console.warn('published failed', err) \n                  throw err\n                }\n                this.appStore.uiStore.addToast(t('toast.publish_rtc_success'))\n              }\n            }\n          } catch (error) {\n            console.error(`[demo] user-message async handler failed`)\n            console.error(error)\n          }\n        })\n      })\n      // 教室更新\n      roomManager.on('classroom-property-updated', (classroom: any) => {\n        console.log(\"classroom-property-updated\", classroom)\n        // if (evt.reason === EduClassroomStateType.EduClassroomStateTypeRoomAttrs) {\n          const record = get(classroom, 'roomProperties.record')\n          if (record) {\n            const state = record.state\n            if (state === 1) {\n              this.recordState = true\n            } else {\n              if (state === 0 && this.recordState) {\n                this.addChatMessage({\n                  id: 'system',\n                  ts: Date.now(),\n                  text: '',\n                  account: 'system',\n                  link: this.roomUuid,\n                  sender: false\n                })\n                this.recordState = false\n                this.recordId = ''\n              }\n            }\n          }\n          const newClassState = classroom.roomStatus.courseState\n          if (this.classState !== newClassState) {\n            this.classState = newClassState\n            if (this.classState === 1) {\n              this.startTime = get(classroom, 'roomStatus.startTime', 0)\n              this.addInterval('timer', () => {\n                this.appStore.updateTime(+get(classroom, 'roomStatus.startTime', 0))\n              }, ms)\n            } else {\n              this.startTime = get(classroom, 'roomStatus.startTime', 0)\n              console.log(\"end timeer\", this.startTime)\n              this.delInterval('timer')\n            }\n          }\n          this.isMuted = !classroom.roomStatus.isStudentChatAllowed\n      })\n      roomManager.on('room-chat-message', (evt: any) => {\n        const {textMessage} = evt;\n        const message = textMessage as EduTextMessage\n        this.addChatMessage({\n          id: message.fromUser.userUuid,\n          ts: message.timestamp,\n          text: message.message,\n          account: message.fromUser.userName,\n          sender: false\n        })\n        console.log('room-chat-message', evt)\n      })\n  \n      if (this.roomInfo.userRole === 'teacher') {\n        await roomManager.join({\n          userRole: `host`,\n          roomUuid,\n          userName: `${this.roomInfo.userName}`,\n          userUuid: `${this.userUuid}`,\n          autoPublish: true,\n        })\n      } else {\n        const sceneType = +this.roomInfo.roomType === 2 ? EduSceneType.SceneLarge : +this.roomInfo.roomType\n        const userRole = sceneType === EduSceneType.SceneLarge ? 'audience' : 'broadcaster'\n        await roomManager.join({\n          userRole: userRole,\n          roomUuid,\n          userName: `${this.roomInfo.userName}`,\n          userUuid: `${this.userUuid}`,\n          autoPublish: true,\n          sceneType,\n        })\n      }\n      this._roomManager = roomManager;\n      this.appStore._boardService = new EduBoardService(roomManager.userToken, roomManager.roomUuid)\n      this.appStore._recordService = new EduRecordService(roomManager.userToken)\n  \n      const roomInfo = roomManager.getClassroomInfo()\n      this.startTime = +get(roomInfo, 'roomStatus.startTime', 0)\n\n      const mainStream = roomManager.data.streamMap['main']\n  \n      this.classState = roomInfo.roomStatus.courseState\n\n      if (this.classState === 1) {\n        this.addInterval('timer', () => {\n          this.appStore.updateTime(+get(roomInfo, 'roomStatus.startTime', 0))\n        }, ms)\n      }\n      this.isMuted = !roomInfo.roomStatus.isStudentChatAllowed\n  \n      await this.joinRTC({\n        uid: +mainStream.streamUuid,\n        channel: roomInfo.roomInfo.roomUuid,\n        token: mainStream.rtcToken\n      })\n  \n      const localStreamData = roomManager.data.localStreamData\n  \n      let canPublish = this.roomInfo.userRole === 'teacher' ||\n         localStreamData && !!(+localStreamData.state) ||\n         (this.roomInfo.userRole === 'student' && +this.roomInfo.roomType !== 2)\n  \n      if (canPublish) {\n  \n        const localStreamData = roomManager.data.localStreamData\n  \n        console.log(\"localStreamData\", localStreamData)\n        await roomManager.userService.publishStream({\n          videoSourceType: EduVideoSourceType.camera,\n          audioSourceType: EduAudioSourceType.mic,\n          streamUuid: mainStream.streamUuid,\n          streamName: '',\n          hasVideo: localStreamData && localStreamData.stream ? localStreamData.stream.hasVideo : true,\n          hasAudio: localStreamData && localStreamData.stream ? localStreamData.stream.hasAudio : true,\n          userInfo: {} as EduUser\n        })\n        this.appStore.uiStore.addToast(t('toast.publish_business_flow_successfully'))\n        this._cameraEduStream = this.roomManager.userService.localStream.stream\n        try {\n          await this.prepareCamera()\n          await this.prepareMicrophone()\n          if (this._cameraEduStream) {\n            if (this._cameraEduStream.hasVideo) {\n              await this.openCamera()\n            } else {\n              await this.closeCamera()\n            }\n            if (this._cameraEduStream.hasAudio) {\n              console.log('open microphone')\n              await this.openMicrophone()\n            } else {\n              console.log('close microphone')\n              await this.closeMicrophone()\n            }\n          }\n        } catch (err) {\n          this.appStore.uiStore.addToast(t('toast.media_method_call_failed') + `: ${err.msg}`)\n          console.warn(err)\n        }\n      }\n  \n      await this.appStore.boardStore.init()\n  \n      const roomProperties = roomManager.getClassroomInfo().roomProperties\n      if (roomProperties) {\n        this.recordId = get(roomProperties, 'record.recordId', '')\n      } else {\n        this.recordId = ''\n      }\n    \n      this.userList = roomManager.getFullUserList()\n      this.streamList = roomManager.getFullStreamList()\n      if (this.roomInfo.userRole !== 'teacher') {\n        if (this.streamList.find((it: EduStream) => it.videoSourceType === EduVideoSourceType.screen)) {\n          this.sharing = true\n        } else { \n          this.sharing = false\n        }\n      }\n      this.appStore.uiStore.stopLoading()\n      this.joined = true\n    } catch (err) {\n      this.appStore.uiStore.stopLoading()\n      throw err\n    }\n  }\n\n  get teacherUuid(): string {\n    const teacher = this.userList.find((it: EduUser) => it.role === EduRoleType.teacher)\n    if (teacher) {\n      return teacher.userUuid\n    }\n    return ''\n  }\n\n  get localUser(): any {\n    return this.roomInfo\n  }\n\n  @computed\n  get teacherStream(): EduMediaStream {\n    // 当本地是老师时\n    const localUser = this.localUser\n    if (localUser && localUser.userRole === 'teacher'\n      && this.cameraEduStream) {\n      return {\n        local: true,\n        userUuid: this.appStore.userUuid,\n        account: localUser.userName,\n        streamUuid: this.cameraEduStream.streamUuid,\n        video: this.cameraEduStream.hasVideo,\n        audio: this.cameraEduStream.hasAudio,\n        renderer: this.cameraRenderer as LocalUserRenderer,\n        showControls: this.canControl(this.appStore.userUuid)\n      }\n    }\n\n    // 当远端是老师时\n    const teacherStream = this.streamList.find((it: EduStream) => it.userInfo.role as string === 'host' && it.userInfo.userUuid === this.teacherUuid && it.videoSourceType !== EduVideoSourceType.screen) as EduStream\n    if (teacherStream) {\n      const user = this.getUserBy(teacherStream.userInfo.userUuid as string) as EduUser\n      return {\n        local: false,\n        account: user.userName,\n        userUuid: user.userUuid,\n        streamUuid: teacherStream.streamUuid,\n        video: teacherStream.hasVideo,\n        audio: teacherStream.hasAudio,\n        renderer: this.remoteUsersRenderer.find((it: RemoteUserRenderer) => +it.uid === +teacherStream.streamUuid) as RemoteUserRenderer,\n        showControls: this.canControl(user.userUuid)\n      }\n    }\n\n    return {\n      account: 'teacher',\n      streamUuid: '',\n      userUuid: '',\n      local: false,\n      video: false,\n      audio: false,\n      renderer: undefined,\n      showControls: false\n    }\n  }\n\n  private getUserBy(userUuid: string): EduUser {\n    return this.userList.find((it: EduUser) => it.userUuid === userUuid) as EduUser\n  }\n\n  private getStreamBy(userUuid: string): EduStream {\n    return this.streamList.find((it: EduStream) => it.userInfo.userUuid as string === userUuid) as EduStream\n  }\n\n  @computed\n  get screenShareStream(): EduMediaStream {\n    // 当本地存在业务流时\n    if (this.screenEduStream) {\n      return {\n        local: true,\n        account: '',\n        userUuid: this.screenEduStream.userInfo.userUuid as string,\n        streamUuid: this.screenEduStream.streamUuid,\n        video: this.screenEduStream.hasVideo,\n        audio: this.screenEduStream.hasAudio,\n        renderer: this._screenVideoRenderer as LocalUserRenderer,\n        showControls: false\n      }\n    } else {\n      return this.streamList.reduce((acc: EduMediaStream[], stream: EduStream) => {\n        const teacher = this.userList.find((user: EduUser) => user.role === 'host')\n        if (!teacher || stream.userInfo.userUuid !== teacher.userUuid || stream.videoSourceType !== EduVideoSourceType.screen) {\n          return acc;\n        } else {\n          acc.push({\n            local: false,\n            account: '',\n            userUuid: stream.userInfo.userUuid,\n            streamUuid: stream.streamUuid,\n            video: stream.hasVideo,\n            audio: stream.hasAudio,\n            renderer: this.remoteUsersRenderer.find((it: RemoteUserRenderer) => +it.uid === +stream.streamUuid) as RemoteUserRenderer,\n            showControls: false\n          })\n        }\n        return acc;\n      }, [])[0]\n    }\n  }\n\n  isLocalStream(stream: EduStream): boolean {\n    return this.appStore.userUuid === stream.userInfo.userUuid\n  }\n\n  @computed\n  get studentStreams(): EduMediaStream[] {\n    let streamList = this.streamList.reduce(\n      (acc: EduMediaStream[], stream: EduStream) => {\n        const user = this.userList.find((user: EduUser) => (user.userUuid === stream.userInfo.userUuid && ['broadcaster', 'audience'].includes(user.role)))\n        if (!user || this.isLocalStream(stream)) return acc;\n        acc.push({\n          local: false,\n          account: user.userName,\n          userUuid: stream.userInfo.userUuid as string,\n          streamUuid: stream.streamUuid,\n          video: stream.hasVideo,\n          audio: stream.hasAudio,\n          renderer: this.remoteUsersRenderer.find((it: RemoteUserRenderer) => +it.uid === +stream.streamUuid) as RemoteUserRenderer,\n          showControls: this.canControl(user.userUuid)\n        })\n        return acc;\n      }\n    , [])\n\n    const localUser = this.localUser\n\n    const isStudent = ['student'].includes(localUser.userRole)\n\n    if (this.cameraEduStream && isStudent) {\n      streamList = [{\n        local: true,\n        account: localUser.userName,\n        userUuid: this.cameraEduStream.userInfo.userUuid as string,\n        streamUuid: this.cameraEduStream.streamUuid,\n        video: this.cameraEduStream.hasVideo,\n        audio: this.cameraEduStream.hasAudio,\n        renderer: this.cameraRenderer as LocalUserRenderer,\n        showControls: this.canControl(this.appStore.userUuid)\n      } as EduMediaStream].concat(streamList.filter((it: any) => it.userUuid !== this.appStore.userUuid))\n    }\n    return streamList\n  }\n\n  @action\n  async leave() {\n    try {\n      this.joiningRTC = true\n      await this.leaveRtc()\n      await this.appStore.boardStore.leave()\n      await this.eduManager.logout()\n      await this.roomManager?.leave()\n      this.appStore.uiStore.addToast(t('toast.successfully_left_the_business_channel'))\n      this.delInterval('timer')\n      this.reset()\n      this.resetRoomInfo()\n      this.appStore.uiStore.updateCurSeqId(0)\n      this.appStore.uiStore.updateLastSeqId(0)\n    } catch (err) {\n      this.reset()\n      console.error(err)\n    }\n  }\n\n  @action\n  async startClass() {\n    try {\n      await this.roomManager?.userService.updateCourseState(EduCourseState.EduCourseStateStart)\n      // this.classState = true\n      this.appStore.uiStore.addToast(t('toast.course_started_successfully'))\n    } catch (err) {\n      console.log(err)\n      this.appStore.uiStore.addToast(t('toast.setting_start_failed'))\n    }\n  }\n\n  @action\n  async stopClass() {\n    try {\n      await this.roomManager?.userService.updateCourseState(EduCourseState.EduCourseStateStop)\n      this.appStore.uiStore.addToast(t('toast.the_course_ends_successfully'))\n    } catch (err) {\n      console.log(err)\n      this.appStore.uiStore.addToast(t('toast.setting_ended_failed'))\n    }\n  }\n\n  @computed\n  get mutedChat(): boolean {\n    if (this.isMuted !== undefined) {\n      return this.isMuted\n    }\n    const classroom = this.roomManager?.getClassroomInfo()\n    if (classroom && classroom.roomStatus) {\n      return !classroom.roomStatus.isStudentChatAllowed\n    }\n    return true\n  }\n\n  @observable\n  isMuted?: boolean = undefined\n\n  @action\n  async muteChat() {\n    const sceneType = +this.roomInfo.roomType === 2 ? EduSceneType.SceneLarge : +this.roomInfo.roomType\n    const roles = ['broadcaster']\n    if (sceneType === EduSceneType.SceneLarge) {\n      roles.push('audience')\n    }\n    await this.roomManager?.userService.muteStudentChatByRoles(roles)\n    this.isMuted = true\n  }\n\n  @action\n  async unmuteChat() {\n    const sceneType = +this.roomInfo.roomType === 2 ? EduSceneType.SceneLarge : +this.roomInfo.roomType\n    const roles = ['broadcaster']\n    if (sceneType === EduSceneType.SceneLarge) {\n      roles.push('audience')\n    }\n    await this.roomManager?.userService.unmuteStudentChatByRoles(roles)\n    this.isMuted = false\n  }\n\n  canControl(userUuid: string): boolean {\n    return this.roomInfo.userRole === 'teacher' || this.userUuid === userUuid\n  }\n\n  private _unreadMessageCount: number = 0\n\n  // @computed\n  // get unreadMessageCount(): number {\n  //   return this._unreadMessageCount\n  // }\n\n  @observable\n  roomChatMessages: ChatMessage[] = []\n\n  @action\n  addChatMessage(args: any) {\n    this.roomChatMessages.push(args)\n  }\n\n  @computed\n  get muteControl(): boolean {\n    if (this.roomInfo) {\n      return this.roomInfo.userRole === 'teacher'\n    }\n    return false\n  }\n\n  get userUuid() {\n    return `${this.appStore.userUuid}`\n  }\n\n  async closeStream(userUuid: string, isLocal: boolean) {\n    console.log(\"closeStream\", userUuid, isLocal)\n    if (isLocal) {\n      if (this.cameraEduStream) {\n        await this.roomManager?.userService.unpublishStream({\n          streamUuid: this.cameraEduStream.streamUuid,\n        })\n        console.log(\"closeStream \", this.userUuid)\n        if (this.userUuid === userUuid) {\n          console.log(\"准备结束摄像头\")\n          this._cameraEduStream = undefined\n          await this.mediaService.unpublish()\n          await this.mediaService.closeCamera()\n          await this.mediaService.closeMicrophone()\n        }\n      }\n    } else {\n      if (this.roomManager?.userService) {\n        const targetStream = this.streamList.find((it: EduStream) => it.userInfo.userUuid === userUuid)\n        const targetUser = this.userList.find((it: EduUser) => it.userUuid === targetStream?.userInfo.userUuid)\n        if (targetUser) {\n          await this.roomManager?.userService.teacherCloseStream(targetUser)\n          await this.roomManager?.userService.remoteCloseStudentStream(targetStream as EduStream)\n        }\n      }\n    }\n  }\n\n  async muteAudio(userUuid: string, isLocal: boolean) {\n    if (isLocal) {\n      console.log('before muteLocalAudio', this.microphoneLock)\n      await this.muteLocalMicrophone()\n      console.log('after muteLocalAudio', this.microphoneLock)\n    } else {\n      const stream = this.getStreamBy(userUuid)\n      const targetStream = this.streamList.find((it: EduStream) => it.userInfo.userUuid === userUuid)\n      await this.roomManager?.userService.remoteStopStudentMicrophone(targetStream as EduStream)\n    }\n  }\n\n  async unmuteAudio(userUuid: string, isLocal: boolean) {\n    console.log(\"unmuteAudio\", userUuid, isLocal)\n    if (isLocal) {\n      await this.unmuteLocalMicrophone()\n    } else {\n      const stream = this.getStreamBy(userUuid)\n      if (stream && this.mediaService.isElectron) {\n        await this.mediaService.muteRemoteAudio(+stream.streamUuid, false)\n      }\n      const targetStream = this.streamList.find((it: EduStream) => it.userInfo.userUuid === userUuid)\n      await this.roomManager?.userService.remoteStartStudentMicrophone(targetStream as EduStream)\n    }\n  }\n\n  async muteVideo(userUuid: string, isLocal: boolean) {\n    console.log(\"muteVideo\", userUuid, isLocal)\n    if (isLocal) {\n      console.log('before muteLocalCamera', this.cameraLock)\n      await this.muteLocalCamera()\n      console.log('after muteLocalCamera', this.cameraLock)\n    } else {\n      const stream = this.getStreamBy(userUuid)\n      const targetStream = this.streamList.find((it: EduStream) => it.userInfo.userUuid === userUuid)\n      await this.roomManager?.userService.remoteStopStudentCamera(targetStream as EduStream)\n    }\n  }\n\n  async unmuteVideo(userUuid: string, isLocal: boolean) {\n    console.log(\"unmuteVideo\", userUuid, isLocal)\n    if (isLocal) {\n      console.log('before unmuteLocalCamera', this.cameraLock)\n      await this.unmuteLocalCamera()\n      console.log('after unmuteLocalCamera', this.cameraLock)\n    } else {\n      const stream = this.getStreamBy(userUuid)\n      if (stream && this.mediaService.isElectron) {\n        await this.mediaService.muteRemoteVideo(+stream.streamUuid, false)\n      }\n      const targetStream = this.streamList.find((it: EduStream) => it.userInfo.userUuid === userUuid)\n      await this.roomManager?.userService.remoteStartStudentCamera(targetStream as EduStream)\n    }\n  }\n\n  @observable\n  recordId: string = ''\n\n  @observable\n  recording: boolean = false\n\n  @computed\n  get isRecording(): boolean {\n    if (this.recordId) return true\n    return false\n  }\n\n  async startOrStopRecording(){\n    try {\n      this.recording = true\n      if (this.isRecording) {\n        await this.stopRecording()\n      } else {\n        await this.startRecording()\n      }\n      this.recording = false\n    } catch (err) {\n      this.recording = false\n    }\n  }\n\n  @action\n  async startRecording() {\n    try {\n      let {recordId} = await this.recordService.startRecording(this.roomUuid)\n      this.recordId = recordId\n      this.appStore.uiStore.addToast(t('toast.start_recording_successfully'))\n    } catch (err) {\n      this.appStore.uiStore.addToast(t('toast.start_recording_failed') + `, ${err.msg}`)\n    }\n  }\n\n  @action\n  async stopRecording() {\n    try {\n      await this.recordService.stopRecording(this.roomUuid, this.recordId)\n      this.appStore.uiStore.addToast(t('toast.successfully_ended_recording'))\n      this.recordId = ''\n    } catch (err) {\n      this.appStore.uiStore.addToast(t('toast.failed_to_end_recording') + `, ${err.msg}`)\n    }\n  }\n\n  @observable\n  notice?: any = undefined\n\n  @action\n  showNotice(type: PeerInviteEnum, userUuid: string) {\n    let text = t('toast.you_have_a_default_message')\n    switch(type) {\n      case PeerInviteEnum.teacherAccept: {\n        text = t('toast.the_teacher_agreed')\n        break;\n      }\n      case PeerInviteEnum.studentApply: {\n        text = t('toast.student_applied')\n        break;\n      }\n      case PeerInviteEnum.teacherStop: {\n        text = t('toast.you_were_dismissed_by_the_teacher')\n        break;\n      }\n      case PeerInviteEnum.studentStop:\n      case PeerInviteEnum.studentCancel: \n        text = t('toast.student_canceled')\n        this.removeDialogBy(userUuid)\n        break;\n      case PeerInviteEnum.teacherReject: {\n        text = t('toast.the_teacher_refused')\n        break;\n      }\n    }\n    this.notice = {\n      reason: text,\n      userUuid\n    }\n    this.appStore.uiStore.addToast(this.notice.reason)\n  }\n\n  @action\n  async callApply() {\n    try {\n      const teacher = this.roomManager?.getFullUserList().find((it: EduUser) => it.userUuid === this.teacherStream.userUuid)\n      if (teacher) {\n        await this.roomManager?.userService.sendCoVideoApply(teacher)\n      }\n    } catch (err) {\n      this.appStore.uiStore.addToast(t('toast.failed_to_initiate_a_raise_of_hand_application') + ` ${err.msg}`)\n    }\n  }\n\n  @action\n  async callEnded() {\n    try {\n      await this.closeStream(this.roomInfo.userUuid, true)\n    } catch (err) {\n      this.appStore.uiStore.addToast(t('toast.failed_to_end_the_call') + ` ${err.msg}`)\n    }\n  }\n\n  showDialog(userName: string, userUuid: any) {\n    const isExists = this.appStore\n      .uiStore\n      .dialogs.filter((it: DialogType) => it.dialog.userUuid)\n      .find((it: DialogType) => it.dialog.userUuid === userUuid)\n    if (isExists) {\n      return\n    }\n    this.appStore.uiStore.showDialog({\n      type: 'apply',\n      userUuid: userUuid,\n      message: `${userName}` + t('icon.requests_to_connect_the_microphone')\n    })\n  }\n\n  removeDialogBy(userUuid: any) {\n    const target = this.appStore\n    .uiStore\n    .dialogs.filter((it: DialogType) => it.dialog.userUuid)\n    .find((it: DialogType) => it.dialog.userUuid === userUuid)\n    if (target) {\n      this.appStore.uiStore.removeDialog(target.id)\n    }\n  }\n\n  async teacherRejectApply() {\n    const userUuid = (this.notice as any).userUuid\n    const user = this.roomManager?.getFullUserList().find(it => it.userUuid === userUuid)\n    if (user) {\n      await this.roomManager?.userService.rejectCoVideoApply(user)\n    }\n  }\n\n  async teacherAcceptApply() {\n    const userUuid = (this.notice as any).userUuid\n    const user = this.roomManager?.data.userList.find(it => it.user.userUuid === userUuid)\n    if (user) {\n      await this.roomManager?.userService.acceptCoVideoApply(user.user)\n      await this.roomManager?.userService.inviteStreamBy({\n        roomUuid: this.roomUuid,\n        streamUuid: user.streamUuid,\n        userUuid: user.user.userUuid\n      })\n    }\n  }\n\n}","import { AppStore } from '@/stores/app';\nimport {observable, computed, action} from 'mobx'\n\nexport class RecordingStore {\n\n  appStore!: AppStore\n\n  constructor(appStore: AppStore) {\n    this.appStore = appStore\n  }\n\n\n  @observable\n  isRecording: boolean = false\n\n  @observable\n  loading: boolean = false\n\n  @action\n  async startOrStopRecording() {\n    try {\n      this.loading = true\n    } catch (err) {\n      throw err\n    } finally {\n      this.loading = false\n    }\n  }\n}","import { EduRecordService } from './../../sdk/record/edu-record-service';\nimport { BoardClient } from '@/components/netless-board/board-client';\nimport { AppStore } from '@/stores/app';\nimport { observable, action, computed } from \"mobx\";\nimport { t } from '@/i18n';\nimport { PlayerPhase } from 'white-web-sdk';\n\nconst cdnPrefix = 'https://agora-adc-artifacts.oss-accelerate.aliyuncs.com'\n\nexport class ReplayStore {\n\n  @observable\n  roomUuid: string = ''\n\n  @observable\n  boardUuid: string = ''\n\n  @observable\n  boardPreparing: boolean = false\n\n  @observable\n  statusText: string = ''\n\n  @observable\n  startTime: number = 0\n\n  @observable\n  endTime: number = 0\n\n  appStore: AppStore\n  boardClient: BoardClient\n  recordService: EduRecordService\n\n  constructor(appStore: AppStore) {\n    this.appStore = appStore\n    this.boardClient = new BoardClient({identity: 'host'})\n    this.recordService = new EduRecordService('')\n  }\n\n  @observable\n  ready: boolean = true;\n\n  @observable\n  online: boolean = false;\n\n  @computed\n  get duration(): number {\n    return Math.abs(this.startTime - this.endTime)\n  }\n\n  @observable\n  player: any = undefined\n\n  @observable\n  currentTime: number = 0\n\n  @action\n  setCurrentTime(t: number) {\n    this.currentTime = t\n  }\n\n  @observable\n  playFailed: boolean = false\n\n  @action\n  setReplayFail(v: boolean) {\n    this.playFailed = v\n  }\n\n  @observable\n  phase: any = ''\n\n  @action\n  updatePhaseState(v: any) {\n    this.phase = v\n  }\n\n  @observable\n  firstFrame: boolean = false\n\n  @action\n  loadFirstFrame() {\n    this.firstFrame = true\n    if (this.player) {\n      this.player.seekToProgressTime(0)\n    }\n  }\n\n  @action\n  async replay($el: HTMLDivElement) {\n    console.log(\"[replay] replayed\", $el);\n    this.boardClient.on('onCatchErrorWhenRender', error => {\n      console.warn('onCatchErrorWhenRender', error)\n    })\n    this.boardClient.on('onCatchErrorWhenAppendFrame', error => {\n      console.warn('onCatchErrorWhenAppendFrame', error)\n    })\n    this.boardClient.on('onPhaseChanged', state => {\n      this.updatePhaseState(state)\n    })\n    this.boardClient.on('onLoadFirstFrame', state => {\n      this.loadFirstFrame()\n      console.log('onLoadFirstFrame', state)\n    })\n    this.boardClient.on('onSliceChanged', () => {\n      console.log('onSliceChanged')\n    })\n    this.boardClient.on('onPlayerStateChanged', state => {\n      console.log('onPlayerStateChanged', state)\n    })\n    this.boardClient.on('onStoppedWithError', error => {\n      this.appStore.uiStore.addToast(t('toast.replay_failed'))\n      this.setReplayFail(true)\n      console.warn('onStoppedWithError', JSON.stringify(error))\n    })\n    this.boardClient.on('onProgressTimeChanged', scheduleTime => {\n      this.setCurrentTime(scheduleTime)\n    })\n    try {\n      await this.boardClient.replay({\n        beginTimestamp: this.startTime,\n        duration: this.duration,\n        room: this.boardId,\n        mediaURL: `${cdnPrefix}/${this.mediaUrl}`,\n        roomToken: this.boardToken,\n      });\n      this.player = this.boardClient.player\n      this.player.seekToProgressTime(0);\n    } catch (err) {\n      this.appStore.uiStore.addToast(t('toast.replay_failed'))\n      throw err\n    }\n\n    this.player.bindHtmlElement($el)\n    this.online = true\n    window.addEventListener('keydown', (evt: any) => {\n      if (evt.code === 'Space') {\n        const player = this.player\n        if (this.online && player) {\n          switch (player.phase) {\n            case PlayerPhase.WaitingFirstFrame:\n            case PlayerPhase.Pause: {\n              player.play();\n              break;\n            }\n            case PlayerPhase.Playing: {\n              player.pause();\n              break;\n            }\n            case PlayerPhase.Ended: {\n              player.seekToProgressTime(0);\n              break;\n            }\n          }\n        }\n      }\n    })\n    window.addEventListener('resize', () => {\n      if (this.online && this.player) {\n        this.player.refreshViewSize();\n      }\n    })\n  }\n\n  @observable\n  recordStatus: number = 0\n\n  @observable\n  mediaUrl: string = ''\n\n  @observable\n  boardId: string = ''\n\n  @observable\n  boardToken: string = ''\n\n  @computed\n  get totalTime(): number {\n    return Math.abs(this.startTime - this.endTime)\n  }\n\n  pauseCurrentTime() {\n    if (this.online && this.player) {\n      this.player.pause()\n    }\n  }\n\n  seekToCurrentTime() {\n    const player = this.player\n    if (this.online && player) {\n      player.seekToProgressTime(this.currentTime);\n      player.play();\n    }\n  }\n\n  @observable\n  progress: number = 0\n\n  @action\n  updateProgress(v: number) {\n    this.progress = v;\n    this.currentTime = v;\n  }\n\n  handlePlayerClick() {\n    const player = this.player\n    if (this.online && player) {\n      if (player.phase === PlayerPhase.Playing) {\n        player.pause();\n        return;\n      }\n      if (player.phase === PlayerPhase.WaitingFirstFrame || player.phase === PlayerPhase.Pause) {\n        player.play();\n        return;\n      }\n  \n      if (player.phase === PlayerPhase.Ended) {\n        player.seekToProgressTime(0);\n        player.play();\n        return;\n      }\n    }\n  }\n\n  @action\n  async getCourseRecordBy(roomUuid: string) {\n    if (this.recordStatus === 2 && this.mediaUrl) {\n      // console.log(\"recordStatus changed\", roomUuid)\n      return\n    }\n    try {\n      let res = await this.recordService.getCourseRecordBy(roomUuid)\n      const recordList = res.list\n      recordList.sort((prev: any, cur: any) => {\n        return prev.startTime - cur.startTime\n      })\n      const lastRecord = recordList.slice(-1)[0]\n      const record = lastRecord\n      if (record) {\n        this.recordStatus = record.status\n        this.boardId = record.boardId\n        this.boardToken = record.boardToken\n        this.statusText = record.statusText\n        this.startTime = record.startTime\n        this.endTime = record.endTime\n        this.mediaUrl = record.url\n        this.currentTime = 0\n        console.log(\"record\", record)\n      }\n    } catch (err) {\n      this.appStore.uiStore.addToast(t('toast.failed_to_query_playback_list') + `${err.msg}`)\n      throw err\n    }\n  }\n\n  @action\n  reset () {\n    this.roomUuid = ''\n    this.boardUuid = ''\n    this.boardPreparing = false\n    this.recordStatus = 0\n    this.startTime = 0\n    this.endTime = 0\n    this.mediaUrl = ''\n    this.boardId = ''\n    this.boardToken = ''\n    this.statusText = ''\n    this.currentTime = 0\n    this.player = undefined\n    window.removeEventListener('resize', () => {})\n    window.removeEventListener('keydown', () => {})\n  }\n}","import { EduRoleTypeEnum } from './../../sdk/education/interfaces/index';\nimport { EduBoardService } from '../../sdk/board/edu-board-service';\nimport { EduRecordService } from '../../sdk/record/edu-record-service';\nimport { EduAudioSourceType, EduTextMessage, EduClassroomStateType, EduSceneType } from '../../sdk/education/interfaces/index';\nimport { RemoteUserRenderer } from '../../sdk/education/core/media-service/renderer/index';\nimport { RoomApi } from '../../services/room-api';\nimport { EduClassroomManager } from '@/sdk/education/room/edu-classroom-manager';\nimport { GlobalStorage } from '../../utils/custom-storage';\nimport { NetworkQuality } from '../../sdk/education/user/edu-student-service';\nimport { EduUserService, PeerInviteEnum } from '@/sdk/education/user/edu-user-service';\nimport { LocalUserRenderer, UserRenderer } from '../../sdk/education/core/media-service/renderer/index';\nimport { AppStore } from '@/stores/app/index';\nimport { AgoraWebRtcWrapper } from '../../sdk/education/core/media-service/web/index';\nimport { toJS, observable, computed, action, runInAction, autorun } from 'mobx';\nimport { AgoraElectronRTCWrapper } from '@/sdk/education/core/media-service/electron';\nimport { StartScreenShareParams, PrepareScreenShareParams } from '@/sdk/education/core/media-service/interfaces';\nimport { MediaService } from '@/sdk/education/core/media-service';\nimport { debounce, get } from 'lodash';\nimport { EduCourseState, EduUser, EduStream, EduVideoSourceType, EduRoleType } from '@/sdk/education/interfaces';\nimport { ChatMessage } from '@/utils/types';\nimport { t } from '@/i18n';\nimport { SimpleInterval } from '../mixin/simple-interval';\nimport { DialogType } from '@/components/dialog';\nimport { Mutex } from '@/utils/mutex';\n\nconst delay = 2000\n\nconst ms = 500\n\nconst networkQualityLevel = [\n  'unknown',\n  'excellent',\n  'good',\n  'poor',\n  'bad',\n  'very bad',\n  'down',\n]\n\nexport const networkQualities: {[key: string]: string} = {\n  'excellent': 'network-good',\n  'good': 'network-good',\n  'poor': 'network-normal',\n  'bad': 'network-normal',\n  'very bad': 'network-bad',\n  'down': 'network-bad',\n  'unknown': 'network-normal'\n}\n\nexport type EduMediaStream = {\n  streamUuid: string\n  userUuid: string\n  renderer?: UserRenderer\n  account: string\n  local: boolean\n  audio: boolean\n  video: boolean\n  // chat: boolean\n  showControls: boolean\n}\n\nexport class BreakoutRoomStore extends SimpleInterval {\n\n  static resolutions: any[] = [\n    {\n      name: '480p',\n      value: '480p_1',\n    },\n    {\n      name: '720p',\n      value: '720p_1',\n    },\n    {\n      name: '1080p',\n      value: '1080p_1'\n    }\n  ]\n\n  @observable\n  resolutionIdx: number = 0\n\n  @observable\n  deviceList: any[] = []\n\n  @observable\n  cameraLabel: string = '';\n\n  @observable\n  microphoneLabel: string = '';\n  _totalVolume: any;\n\n  @observable\n  _cameraId: string = '';\n\n  @observable\n  _microphoneId: string = '';\n  private _boardService?: EduBoardService;\n  private _recordService?: EduRecordService;\n\n  @computed\n  get cameraId(): string {\n    const defaultValue = ''\n    const idx = this.cameraList.findIndex((it: any) => it.label === this.cameraLabel)\n    if (this.cameraList[idx]) {\n      return this.cameraList[idx].deviceId\n    }\n    return defaultValue\n  }\n\n  @computed\n  get microphoneId(): string {\n    const defaultValue = ''\n    const idx = this.microphoneList.findIndex((it: any) => it.label === this.microphoneLabel)\n    if (this.microphoneList[idx]) {\n      return this.microphoneList[idx].deviceId\n    }\n    return defaultValue\n  }\n\n  @observable\n  resolution: string = '480p_1'\n\n  @computed\n  get playbackVolume(): number {\n    if (this._playbackVolume) {\n      return this._playbackVolume\n    }\n    return this.mediaService.getPlaybackVolume()\n  }\n\n  @observable\n  _playbackVolume: number = 0\n\n  @action\n  changePlaybackVolume(volume: number) {\n    this.mediaService.changePlaybackVolume(volume)\n    this._playbackVolume = volume\n  }\n\n  @observable\n  _microphoneTrack?: any = undefined;\n  @observable\n  _cameraRenderer?: LocalUserRenderer = undefined;\n  @observable\n  _screenVideoRenderer?: LocalUserRenderer = undefined;\n\n  @computed\n  get cameraRenderer(): LocalUserRenderer | undefined {\n    return this._cameraRenderer;\n  }\n\n  @observable\n  totalVolume: number = 0;\n\n  @computed\n  get screenVideoRenderer(): LocalUserRenderer | undefined {\n    return this._screenVideoRenderer;\n  }\n\n  appStore: AppStore;\n\n  @observable\n  currentWindowId: string = ''\n\n  @observable\n  customScreenShareWindowVisible: boolean = false;\n\n  @observable\n  customScreenShareItems: any[] = []\n\n  @observable\n  settingVisible: boolean = false\n\n  // autoplay: boolean = false\n\n  @observable\n  recordState: boolean = false\n\n  @computed\n  get remoteUsersRenderer() {\n    return this.appStore.mediaStore.remoteUsersRenderer\n  }\n\n  constructor(appStore: AppStore) {\n    super()\n    this.appStore = appStore\n    this.handlePopState = this.handlePopState.bind(this)\n  }\n\n  get boardService(): EduBoardService {\n    return this.appStore.boardService\n  }\n\n  get recordService(): EduRecordService {\n    return this.appStore.recordService\n  }\n\n  @observable\n  sharing: boolean = false;\n\n  @action\n  showSetting() {\n    this.settingVisible = true\n  }\n\n  @action\n  hideSetting() {\n    this.settingVisible = false\n  }\n\n  @action\n  resetCameraTrack () {\n    this._cameraRenderer = undefined\n  }\n\n  @action\n  resetMicrophoneTrack() {\n    this._microphoneTrack = undefined\n  }\n\n  @action\n  resetScreenTrack () {\n    this._screenVideoRenderer = undefined\n  }\n\n  @action\n  resetScreenStream() {\n    if (this.screenVideoRenderer) {\n      this.screenVideoRenderer.stop()\n      this._screenVideoRenderer = undefined\n    }\n    if (this.screenEduStream) {\n      this._screenEduStream = undefined\n    }\n  }\n\n  @action\n  reset() {\n    this.studentRoomUserList = []\n    this.teacherRoomUserList = []\n    this.studentRoomStreamList = []\n    this.teacherRoomStreamList = []\n    this.appStore.mediaStore.resetRoomState()\n    this.currentStudentRoomUuid = ''\n    this.delInterval('timer')\n    this.appStore.mediaStore.resetRoomState()\n    // this.remoteUsersRenderer = []\n    this.recording = false\n    this.resolutionIdx = 0\n    this.totalVolume = 0\n    this.cameraLabel = ''\n    this.microphoneLabel = ''\n    this.mediaService.reset()\n    this.closeCamera()\n    this.closeMicrophone()\n    this.resetScreenStream()\n    this.customScreenShareWindowVisible = false\n    this.currentWindowId = ''\n    this.customScreenShareItems = []\n    this._roomChatMessages = []\n    this.isMuted = undefined\n    this._cameraEduStream = undefined\n    this._screenEduStream = undefined\n    this._microphoneTrack = undefined\n    this.recordId = ''\n    this.joined = false\n    this._hasCamera = undefined\n    this._hasMicrophone = undefined\n    this.microphoneLock = false\n    this.cameraLock = false\n    this.joiningRTC = false\n    this.recordState = false\n    this._courseList = []\n    this.joinedGroup = false\n  }\n\n  @observable\n  _courseList: any[] = []\n\n  @computed\n  get courseList() {\n    return this._courseList\n  }\n\n  @action\n  showScreenShareWindowWithItems () {\n    if (this.isElectron) {\n      this.mediaService.prepareScreenShare().then((items: any) => {\n        runInAction(() => {\n          this.customScreenShareWindowVisible = true\n          this.customScreenShareItems = items\n        })\n      }).catch(err => {\n        console.warn('show screen share window with items', err)\n        if (err.code === 'ELECTRON_PERMISSION_DENIED') {\n          this.appStore.uiStore.addToast(t('toast.failed_to_enable_screen_sharing_permission_denied'))\n        } else {\n          this.appStore.uiStore.addToast(t('toast.failed_to_enable_screen_sharing') + ` code: ${err.code}, msg: ${err.msg}`)\n        }\n      })\n    }\n  }\n\n  get roomUuid(): string {\n    return this.largeClassroomManager?.roomUuid\n  }\n\n  @action\n  async startNativeScreenShareBy(windowId: number) {\n    try {\n      this.waitingShare = true\n      await this.largeClassroomManager?.userService.startShareScreen()\n      const params: any = {\n        channel: this.largeClassroomManager?.roomUuid,\n        uid: +this.largeClassroomManager?.userService.screenStream.stream.streamUuid,\n        token: this.largeClassroomManager?.userService.screenStream.token,\n      }\n      await this.mediaService.startScreenShare({\n        windowId: windowId as number,\n        params\n      })\n      if (!this.mediaService.screenRenderer) {\n        this.appStore.uiStore.addToast(t('create_screen_share_failed'))\n        return\n      } else {\n        this._screenVideoRenderer = this.mediaService.screenRenderer\n      }\n      this.removeScreenShareWindow()\n      this.sharing = true\n    } catch (err) {\n      console.warn(err)\n      // if (!this.mediaService.screenRenderer) {\n      //   await this.mediaService.stopScreenShare()\n      // }\n      this.waitingShare = false\n      this.appStore.uiStore.addToast(t('toast.failed_to_initiate_screen_sharing') + `${err.msg}`)\n      // throw err\n    }\n  }\n\n  @action\n  removeScreenShareWindow () {\n    if (this.isElectron) {\n      this.customScreenShareWindowVisible = false\n      this.customScreenShareItems = []\n    }\n  }\n\n  @computed\n  get cameraList() {\n    return this.deviceList.filter((it: any) => it.kind === 'videoinput')\n  }\n\n  @computed\n  get microphoneList() {\n    return this.deviceList.filter((it: any) => it.kind === 'audioinput')\n  }\n\n  init(option: {video?: boolean, audio?: boolean} = {video: true, audio: true}) {\n    if (option.video) {\n      this.mediaService.getCameras().then((list: any[]) => {\n        runInAction(() => {\n          this.deviceList = list;\n        })\n      })\n    }\n    if (option.audio) {\n      this.mediaService.getMicrophones().then((list: any[]) => {\n        runInAction(() => {\n          this.deviceList = list;\n        })\n      })\n    }\n  }\n\n  get mediaService(): MediaService {\n    return this.appStore.eduManager.mediaService as MediaService;\n  }\n\n  get web(): AgoraWebRtcWrapper {\n    return (this.mediaService.sdkWrapper as AgoraWebRtcWrapper)\n  }\n\n  get isWeb(): boolean {\n    return this.mediaService.sdkWrapper instanceof AgoraWebRtcWrapper\n  }\n\n  get isElectron(): boolean {\n    return this.mediaService.sdkWrapper instanceof AgoraElectronRTCWrapper\n  }\n\n  private _hasCamera?: boolean = undefined\n  private _hasMicrophone?: boolean = undefined\n\n  @action\n  async openCamera() {\n    if (this._cameraRenderer) {\n      return console.warn('[demo] Camera already exists')\n    }\n    if (this.cameraLock) {\n      return console.warn('[demo] openCamera locking')\n    }\n    this.lockCamera()\n    try {\n      const deviceId = this._cameraId\n      await this.mediaService.openCamera({deviceId})\n      this._cameraRenderer = this.mediaService.cameraRenderer\n      this.cameraLabel = this.mediaService.getCameraLabel()\n      this._cameraId = this.cameraId\n      console.log('[demo] action in openCamera >>> openCamera')\n      this.unLockCamera()\n    } catch (err) {\n      this.unLockCamera()\n      console.log('[demo] action in openCamera >>> openCamera')\n      console.warn(err)\n      throw err\n    }\n  }\n\n  @action\n  async closeCamera() {\n    try {\n      await this.mediaService?.closeCamera()\n      this.resetCameraTrack()\n    } catch (err) {\n      this.resetCameraTrack()\n      console.log('[breakout-room] err', err)\n    }\n  }\n\n  @action\n  async changeCamera(deviceId: string) {\n    await this.mediaService.changeCamera(deviceId)\n    this.cameraLabel = this.mediaService.getCameraLabel()\n    this._cameraId = deviceId\n  }\n\n  public cameraLock: boolean = false\n\n  lockCamera() {\n    this.cameraLock = true\n    console.log('[demo] lockCamera ')\n  }\n\n  unLockCamera() {\n    this.cameraLock = false\n    console.log('[demo] unlockCamera ')\n  }\n\n  @action\n  async muteLocalCamera() {\n    if (this.cameraLock) {\n      return console.warn('[demo] openCamera locking')\n    }\n    console.log('[demo] [local] muteLocalCamera')\n    if (this._cameraRenderer) {\n      await this.closeCamera()\n      this.unLockCamera()\n    }\n    await this.roomManager?.userService.updateMainStreamState({'videoState': false})\n  }\n\n  @action \n  async unmuteLocalCamera() {\n    console.log('[demo] [local] unmuteLocalCamera')\n    if (this.cameraLock) {\n      return console.warn('[demo] [mic lock] unmuteLocalCamera')\n    }\n    await this.openCamera()\n    await this.roomManager?.userService.updateMainStreamState({'videoState': true})\n  }\n\n  @action\n  async muteLocalMicrophone() {\n    console.log('[demo] [local] muteLocalMicrophone')\n    if (this.microphoneLock) {\n      return console.warn('[demo] [mic lock] muteLocalMicrophone')\n    }\n    await this.closeMicrophone()\n    this.unLockMicrophone()\n    await this.roomManager?.userService.updateMainStreamState({'audioState': false})\n  }\n\n  @action \n  async unmuteLocalMicrophone() {\n    console.log('[demo] [local] unmuteLocalMicrophone')\n    if (this.microphoneLock) {\n      return console.warn('[demo] [mic lock] unmuteLocalMicrophone')\n    }\n    await this.openMicrophone()\n    await this.roomManager?.userService.updateMainStreamState({'audioState': true})\n  }\n\n  public microphoneLock: boolean = false\n\n  lockMicrophone() {\n    this.microphoneLock = true\n    console.log('[demo] lockMicrophone ')\n  }\n\n  unLockMicrophone() {\n    this.microphoneLock = false\n    console.log('[demo] unLockMicrophone ')\n  }\n  @action\n  async openMicrophone() {\n    if (this._microphoneTrack) {\n      return console.warn('[demo] Microphone already exists')\n    }\n\n    if (this.microphoneLock) {\n      return console.warn('[demo] openMicrophone locking 1')\n    }\n    this.lockMicrophone()\n    try {\n      const deviceId = this._microphoneId\n      await this.mediaService.openMicrophone({deviceId})\n      this._microphoneTrack = this.mediaService.microphoneTrack\n      this.microphoneLabel = this.mediaService.getMicrophoneLabel()\n      console.log('[breakout-demo] action in openMicrophone >>> openMicrophone')\n      this._microphoneId = this.microphoneId\n      this.unLockMicrophone()\n    } catch (err) {\n      this.unLockMicrophone()\n      console.log('[demo] action in openMicrophone >>> openMicrophone')\n      console.warn(err)\n      throw err\n    }\n  }\n\n  @action\n  async closeMicrophone() {\n    if (this.microphoneLock) return console.warn('[demo] closeMicrophone microphone is locking')\n    await this.mediaService.closeMicrophone()\n    this.resetMicrophoneTrack()\n  }\n\n  @action\n  async changeMicrophone(deviceId: string) {\n    await this.mediaService.changeMicrophone(deviceId)\n    this.microphoneLabel = this.mediaService.getMicrophoneLabel()\n    this._microphoneId = deviceId\n  }\n\n  @action\n  async changeResolution(resolution: any) {\n    await this.mediaService.changeResolution(resolution)\n    runInAction(() => {\n      this.resolution = resolution\n    })\n  }\n\n  @observable\n  waitingShare: boolean = false\n\n  @action\n  async stopWebSharing() {\n    try {\n      this.waitingShare = true\n      if (this._screenVideoRenderer) {\n        await this.mediaService.stopScreenShare()\n        this.mediaService.screenRenderer && this.mediaService.screenRenderer.stop()\n        this._screenVideoRenderer = undefined\n      }\n      if (this._screenEduStream) {\n        await this.largeClassroomManager?.userService.stopShareScreen()\n        this._screenEduStream = undefined\n      }\n      this.sharing = false\n    } catch(err) {\n      this.appStore.uiStore.addToast(t('toast.failed_to_end_screen_sharing') + `${err.msg}`)\n    } finally {\n      this.waitingShare = false\n    }\n  }\n\n  @action\n  async startWebSharing() {\n    try {\n      this.waitingShare = true\n      await this.mediaService.prepareScreenShare({\n        shareAudio: 'auto',\n        encoderConfig: '720p'\n      })\n      await this.largeClassroomManager?.userService.startShareScreen()\n      const params: any = {\n        channel: this.largeClassroomManager?.roomUuid,\n        uid: +this.largeClassroomManager?.userService.screenStream.stream.streamUuid,\n        token: this.largeClassroomManager?.userService.screenStream.token,\n      }\n      console.log(\"screenStreamData params >>>>>> \", params)\n      console.log(\"screenStreamData >>>>>> \", this.largeClassroomManager?.userService.screenStream)\n\n      await this.mediaService.startScreenShare({\n        params\n      })\n      this._screenEduStream = this.largeClassroomManager?.userService.screenStream.stream\n      this._screenVideoRenderer = this.mediaService.screenRenderer\n      this.sharing = true\n    } catch (err) {\n      if (this.mediaService.screenRenderer) {\n        this.mediaService.screenRenderer.stop()\n        this.mediaService.screenRenderer = undefined\n        this._screenVideoRenderer = undefined\n        this.appStore.uiStore.addToast(t('toast.failed_to_initiate_screen_sharing_to_remote') + `${err.msg}`)\n      } else {\n        if (err.code === 'PERMISSION_DENIED') {\n          this.appStore.uiStore.addToast(t('toast.failed_to_enable_screen_sharing_permission_denied'))\n        } else {\n          this.appStore.uiStore.addToast(t('toast.failed_to_enable_screen_sharing') + ` code: ${err.code}, msg: ${err.msg}`)\n        }\n      }\n      console.warn(err)\n    } finally {\n      this.waitingShare = false\n    }\n  }\n\n  async startOrStopSharing() {\n    if (this.isWeb) {\n      if (this.sharing) {\n        await this.stopWebSharing()\n      } else {\n        await this.startWebSharing()\n      }\n    }\n\n    if (this.isElectron) {\n      if (this.sharing) {\n        await this.stopNativeSharing()\n      } else {\n        await this.showScreenShareWindowWithItems()\n      }\n    }\n  }\n\n  @action\n  async prepareScreenShare(params: PrepareScreenShareParams = {}) {\n    const res = await this.mediaService.prepareScreenShare(params)\n    if (this.mediaService.screenRenderer) {\n      this._screenVideoRenderer = this.mediaService.screenRenderer\n    }\n  }\n\n  @action\n  async stopNativeSharing() {\n    if (this.screenEduStream) {\n      await this.largeClassroomManager?.userService.stopShareScreen()\n      this._screenEduStream = undefined\n    }\n    if (this._screenVideoRenderer) {\n      await this.mediaService.stopScreenShare()\n      this._screenVideoRenderer && this._screenVideoRenderer.stop()\n      this._screenVideoRenderer = undefined\n    }\n    if (this.customScreenShareWindowVisible) {\n      this.customScreenShareWindowVisible = false\n    }\n    this.customScreenShareItems = []\n    this.sharing = false\n  }\n\n  @action\n  async resetWebPrepareScreen() {\n    if (this.mediaService.screenRenderer) {\n      this.mediaService.screenRenderer\n      this._screenVideoRenderer = undefined\n    }\n  }\n\n  @action\n  async startScreenShare(option: StartScreenShareParams) {\n  }\n\n  @computed\n  get userList(): EduUser[] {\n    return this.teacherRoomUserList.concat(this.studentRoomUserList)\n  }\n\n  @computed\n  get streamList(): EduStream[] {\n    return this.teacherRoomStreamList.concat(this.studentRoomStreamList)\n  }\n\n  @observable\n  teacherRoomUserList: EduUser[] = []\n\n  @observable\n  teacherRoomStreamList: EduStream[] = []\n\n  @action\n  async stopScreenShare() {\n\n  }\n\n  @observable\n  unreadMessageCount: number = 0\n\n  @observable\n  messages: any[] = []\n\n  @action\n  async sendMessageToCurrentRoom(message: any) {\n    if (this.roomInfo.userRole === 'teacher') {\n      try {\n        const fromRoomUuid = this.currentStudentRoomUuid || ''\n        const payload = JSON.stringify({\n          content: message,\n          role: EduRoleTypeEnum.teacher,\n          fromRoomName: this.groupClassroomManager?.roomName || '',\n          fromRoomUuid: fromRoomUuid\n        })\n        await this.largeClassroomManager?.userService.sendRoomChatMessage(payload)\n        this.addChatMessage({\n          id: this.userUuid,\n          ts: +Date.now(),\n          text: message,\n          account: this.roomInfo.userName,\n          sender: true,\n          role: EduRoleTypeEnum.teacher,\n          fromRoomName: '',\n          fromRoomUuid: fromRoomUuid\n        })\n        console.log('[chat-message] teacher sent', fromRoomUuid, ' isMain ', fromRoomUuid ? 'true' : 'false')\n      } catch (err) {\n        this.appStore.uiStore.addToast(t('toast.failed_to_send_chat'))\n        console.warn(err)\n      }\n    }\n\n    if (this.roomInfo.userRole === 'assistant') {\n      try {\n        const fromRoomUuid = this.currentStudentRoomUuid\n        const payload = JSON.stringify({\n          content: message,\n          role: EduRoleTypeEnum.assistant,\n          fromRoomUuid: fromRoomUuid,\n          fromRoomName: this.groupClassroomManager?.roomName || '',\n        })\n        await this.largeClassroomManager?.userService.sendRoomChatMessage(payload)\n        await this.groupClassroomManager?.userService.sendRoomChatMessage(payload)\n        this.addChatMessage({\n          id: this.userUuid,\n          ts: +Date.now(),\n          text: message,\n          account: this.roomInfo.userName,\n          sender: true,\n          role: EduRoleTypeEnum.assistant,\n          fromRoomName: this.groupClassroomManager?.roomName || '',\n          fromRoomUuid: fromRoomUuid,\n        })\n        console.log('[chat-message] assistant sent', fromRoomUuid)\n      } catch (err) {\n        this.appStore.uiStore.addToast(t('toast.failed_to_send_chat'))\n        console.warn(err)\n      }\n    }\n  }\n\n  @action\n  async sendMessage(message: any) {\n\n    const fromRoomUuid = this.groupClassroomManager.roomUuid\n    const payload = JSON.stringify({\n      content: message,\n      role: EduRoleTypeEnum.student,\n      fromRoomUuid: this.groupClassroomManager.roomUuid,\n      fromRoomName: this.groupClassroomManager?.roomName || '',\n    })\n    \n    if (this.roomInfo.userRole === 'student') {\n      try {\n        await this.largeClassroomManager?.userService.sendRoomChatMessage(payload)\n        await this.groupClassroomManager?.userService.sendRoomChatMessage(payload)\n        this.addChatMessage({\n          id: this.userUuid,\n          ts: +Date.now(),\n          text: message,\n          account: this.roomInfo.userName,\n          sender: true,\n          role: EduRoleTypeEnum.student,\n          fromRoomName: this.groupClassroomManager?.roomName || '',\n          fromRoomUuid: fromRoomUuid,\n        })\n        console.log('[chat-message] student sent', fromRoomUuid)\n      } catch (err) {\n        this.appStore.uiStore.addToast(t('toast.failed_to_send_chat'))\n        console.warn(err)\n      }\n    }\n  }\n\n  @observable\n  joined: boolean = false\n\n  @observable\n  menuVisible: boolean = false\n\n  @action\n  toggleMenu() {\n    this.menuVisible = !this.menuVisible\n  }\n\n  @action\n  resetTab() {\n    this.currentStudentRoomUuid = ''\n    this.switchTab('first')\n  }\n\n  @observable\n  activeTab: string = 'first'\n\n  @action\n  switchTab(tab: string) {\n    this.activeTab = tab\n  }\n\n  @action\n  switchTabToRoom(roomUuid: string) {\n    this.switchTab('second')\n    this.currentStudentRoomUuid = roomUuid\n  }\n\n  @computed\n  get roomInfo() {\n    return this.appStore.roomInfo\n  }\n\n  @action\n  resetRoomInfo() {\n    this.appStore.resetRoomInfo()\n  }\n\n  get userUuid() {\n    return `${this.appStore.userUuid}`\n  }\n\n  @observable\n  classState: number = 0\n\n  // @observable\n  // _delay: number = 0\n\n  @computed\n  get delay(): string {\n    return `${this.appStore.mediaStore._delay}`\n  }\n\n  @observable\n  time: number = 0\n\n  @computed\n  get networkQuality(): string {\n    return this.appStore.mediaStore.networkQuality\n  }\n\n  // @observable\n  // networkQuality: string = 'unknown'\n\n  // @action\n  // updateNetworkQuality(v: string) {\n  //   this.networkQuality = v\n  // }\n\n  @observable\n  _cpuRate: number = 0\n\n  @computed\n  get cpuRate(): string {\n    return `${this._cpuRate}%`\n  }\n\n  get roomManager(): EduClassroomManager | undefined {\n    if (this.roomInfo.userRole === 'teacher') {\n      return this.largeClassroomManager\n    }\n\n    if (this.roomInfo.userRole === 'student') {\n      return this.groupClassroomManager\n    }\n  }\n\n  // _largeClassroomManager?: EduClassroomManager = undefined;\n\n  get largeClassroomManager(): EduClassroomManager {\n    return this.appStore.roomManager as EduClassroomManager\n  }\n\n  // _groupClassroomManager?: EduClassroomManager = undefined;\n\n  get groupClassroomManager(): EduClassroomManager {\n    return this.appStore.groupClassroomManager as EduClassroomManager\n  }\n\n  @observable\n  _cameraEduStream?: EduStream = undefined\n\n  @observable\n  _screenEduStream?: EduStream = undefined\n\n  @computed\n  get screenEduStream(): EduStream {\n    return this._screenEduStream as EduStream\n  }\n\n  @computed\n  get cameraEduStream(): EduStream {\n    return this._cameraEduStream as EduStream\n  }\n\n  roomApi!: RoomApi\n\n  @observable\n  joiningRTC: boolean = false\n\n  handlePopState(evt: any) {\n    window.history.pushState(null, document.title, null);\n    const uiStore = this.appStore.uiStore\n    const breakoutRoomStore = this\n    const hash = evt.currentTarget.location.hash\n    const isClass = hash.match(/\\/assistant\\/courses\\/\\S+/)\n    console.log(\"[popstate] isClass\", isClass, hash)\n    if (isClass) {\n      if (breakoutRoomStore.joinedGroup && !uiStore.hasDialog('exitRoom')) {\n        uiStore.showDialog({\n          type: 'exitRoom',\n          message: t('icon.exit-room'),\n        })\n      }\n    } else {\n      if (breakoutRoomStore.joined && !uiStore.hasDialog('exitRoom')) {\n        uiStore.showDialog({\n          type: 'exitRoom',\n          message: t('icon.exit-room'),\n        })\n      }\n    }\n  }\n  \n  @action\n  async joinRtcAsTeacher(args: any) {\n    try {\n      if (!this.mediaService.isWeb) throw 'electron not support'\n      await this.mediaService.join(args)\n      this.joiningRTC = true\n    } catch (err) {\n      this.appStore.uiStore.addToast(t('toast.failed_to_join_rtc_please_refresh_and_try_again'))\n      console.warn(err)\n      throw err\n    }\n  }\n\n  @action\n  async joinRtcAsStudent(args: any) {\n    try {\n      console.log('[breakout] ', args)\n      if (!this.mediaService.isWeb) throw 'electron not supported'\n      await this.mediaService.join(args.studentChannel)\n      this.mediaGroup = await this.mediaService.web.joinChannel(args.teacherChannel)\n      this.joiningRTC = true\n    } catch (err) {\n      this.appStore.uiStore.addToast(t('toast.failed_to_join_rtc_please_refresh_and_try_again'))\n      console.warn(err)\n      throw err\n    }\n  }\n\n  @action\n  async joinRtcAsAssistant(args: any) {\n    try {\n      if (!this.mediaService.isWeb) throw 'electron not supported'\n      await this.mediaService.join(args.studentChannel)\n      this.mediaGroup = await this.mediaService.web.joinChannel(args.teacherChannel)\n      this.joiningRTC = true\n    } catch (err) {\n      this.appStore.uiStore.addToast(t('toast.failed_to_join_rtc_please_refresh_and_try_again'))\n      console.warn(err)\n      throw err\n    }\n  }\n\n  async leaveRtc() {\n    try {\n      if (!this.joiningRTC) return\n      this.joiningRTC = false\n      if (this.mediaGroup) {\n        await this.mediaGroup?.leave()\n        this.mediaGroup.removeAllListeners()\n        this.mediaGroup = null as any\n        console.log(\"[rtc] mediaGroup success\")\n      }\n      if (this.mediaService) {\n        await this.closeCamera()\n        await this.closeMicrophone()\n        await this.mediaService.leave()\n        this.appStore.uiStore.addToast(t('toast.leave_rtc_channel'))\n      }\n      this.appStore.reset()\n    } catch (err) {\n      this.appStore.uiStore.addToast(t('toast.failed_to_leave_rtc'))\n      console.warn(err)\n      throw err;\n    }\n  }\n\n  @action\n  async prepareCamera() {\n    if (this._hasCamera === undefined) {\n      const cameras = await this.mediaService.getCameras()\n      this._hasCamera = !!cameras.length\n      if (this._hasCamera && this.mediaService.isWeb) {\n        this.mediaService.web.publishedVideo = true\n      }\n    }\n  }\n\n  @action\n  async prepareMicrophone() {\n    if (this._hasMicrophone === undefined) {\n      const microphones = await this.mediaService.getMicrophones()\n      this._hasMicrophone = !!microphones.length\n      if (this._hasMicrophone && this.mediaService.isWeb) {\n        this.mediaService.web.publishedAudio = true\n      }\n    }\n  }\n\n  isBigClassStudent(): boolean {\n    const userRole = this.roomInfo.userRole\n    return +this.roomInfo.roomType === 2 && userRole === 'student'\n  }\n\n  get eduManager() {\n    return this.appStore.eduManager\n  }\n\n  public readonly mutex = new Mutex()\n\n  handlePeerMessage() {\n    const decodeMsg = (str: string) => {\n      try {\n        return JSON.parse(str)\n      } catch(err) {\n        console.warn(err)\n        return null\n      }\n    }\n    this.eduManager.on('user-message', async (evt: any) => {\n      await this.mutex.dispatch<Promise<void>>(async () => {\n        if (!this.joiningRTC) {\n          return\n        }\n        try {\n          console.log('[rtm] user-message', evt)\n          const fromUserUuid = evt.message.fromUser.userUuid\n          const fromUserName = evt.message.fromUser.userName\n          const msg = decodeMsg(evt.message.message)\n          console.log(\"user-message\", msg)\n          if (msg) {\n            const {cmd, data} = msg\n            const {type, userName} = data\n            console.log(\"data\", data)\n            this.showNotice(type as PeerInviteEnum, fromUserUuid)\n            if (type === PeerInviteEnum.studentApply) {\n              this.showDialog(fromUserName)\n            }\n            if (type === PeerInviteEnum.teacherStop) {\n              try {\n                await this.closeCamera()\n                await this.closeMicrophone()\n                this.appStore.uiStore.addToast(t('toast.co_video_close_success'))\n              } catch (err) {\n                this.appStore.uiStore.addToast(t('toast.co_video_close_failed'))\n                console.warn(err)\n              }\n            }\n            if (type === PeerInviteEnum.teacherAccept \n              && this.isBigClassStudent()) {\n              try {\n                await this.prepareCamera()\n                await this.prepareMicrophone()\n                console.log(\"propertys \", this._hasCamera, this._hasMicrophone)\n                if (this._hasCamera) {\n                  await this.openCamera()\n                }\n  \n                if (this._hasMicrophone) {\n                  await this.openMicrophone()\n                }\n              } catch (err) {\n                console.warn('published failed', err) \n                throw err\n              }\n              this.appStore.uiStore.addToast(t('toast.publish_rtc_success'))\n            }\n          }\n        } catch (err) {\n          console.error(`[demo] [breakout] user-message async handler failed`)\n          console.error(err)\n        }\n      })\n    })\n  }\n\n  async prepareLargeClassroom(roomUuid: string, userRole: string) {\n    const roomManager = this.eduManager.createClassroom({\n      roomUuid: roomUuid,\n      roomName: this.roomInfo.roomName\n    })\n    roomManager.on('seqIdChanged', (evt: any) => {\n      console.log(\"seqIdChanged\", evt)\n      if (this.roomInfo.userRole === 'teacher') {\n        this.appStore.uiStore.updateCurSeqId(evt.curSeqId)\n        this.appStore.uiStore.updateLastSeqId(evt.latestSeqId)\n      }\n    })\n    // 本地用户更新\n    roomManager.on('local-user-updated', (evt: any) => {\n      this.teacherRoomUserList =roomManager.getFullUserList()\n      console.log(\"local-user-updated\", evt)\n    })\n    // 本地流加入\n    // roomManager.on('local-stream-added', (evt: any) => {\n    //   this.teacherRoomStreamList = roomManager.getFullStreamList()\n    //   console.log(\"local-stream-added\", evt)\n    // })\n    // 本地流更新\n    roomManager.on('local-stream-updated', async (evt: any) => {\n      await this.mutex.dispatch<Promise<void>>(async () => {\n        if (!this.joiningRTC) {\n          return\n        }\n        try {\n          if (this.roomInfo.userRole !== 'teacher') return\n          if (evt.type === 'main') {\n            const localStream = roomManager.getLocalStreamData()\n            console.log(\"[demo] [breakout] largeClassroom local-stream-updated# localStream \", localStream, this.joiningRTC)\n            if (localStream && localStream.state !== 0) {\n              this._cameraEduStream = localStream.stream\n              await this.prepareCamera()\n              await this.prepareMicrophone()\n              console.log(\"[demo] [breakout] largeClassroom this._cameraEduStream\", this._cameraEduStream)\n              if (this.joiningRTC) {\n                if (this._hasCamera) {\n                  if (this.cameraEduStream.hasVideo) {\n                    await this.openCamera()\n                  } else {\n                    await this.closeCamera()\n                  }\n                }\n                if (this._hasMicrophone) {\n                  if (this.cameraEduStream.hasAudio) {\n                    await this.openMicrophone()\n                  } else {\n                    await this.closeMicrophone()\n                  }\n                }\n              }\n            } else {\n              console.log(\"[demo] [breakout] largeClassroom reset camera edu stream\", localStream, localStream && localStream.state)\n              this._cameraEduStream = undefined\n            }\n          }\n  \n          if (evt.type === 'screen') {\n            const screenStream = roomManager.getLocalScreenData()\n            console.log(\"[demo] [breakout] largeClassroom getLocalScreenData#screenStream \", screenStream)\n            if (screenStream && screenStream.state !== 0) {\n              this._screenEduStream = screenStream.stream\n              this.sharing = true\n            } else {\n              console.log(\"reset screen edu stream\", screenStream, screenStream && screenStream.state)\n              this._screenEduStream = undefined\n              this.sharing = false\n            }\n          }\n          console.log(\"[demo] [breakout] largeClassroom# local-stream-updated\", evt)\n        } catch (err) {\n          console.error('[demo] [breakout] largeClassroom# local-stream-updated ', err.msg)\n          console.error(err)\n        }\n      })\n    })\n    // 本地流移除\n    roomManager.on('local-stream-removed', async (evt: any) => {\n      await this.mutex.dispatch<Promise<void>>(async () => {\n        if (!this.joiningRTC) {\n          return\n        }\n        try {\n          if (this.roomInfo.userRole !== 'teacher') return\n          if (evt.type === 'main') {\n            this._cameraEduStream = undefined\n            await this.closeCamera()\n            await this.closeMicrophone()\n          }\n          console.log(\"local-stream-removed\", evt)\n        } catch (err) {\n          console.error('[demo] [breakout] LargeClassroom# local-stream-removed ', err.msg)\n          console.error(err)\n        }\n      })\n    })\n    // 远端人加入\n    roomManager.on('remote-user-added', (evt: any) => {\n      runInAction(() => {\n        this.teacherRoomUserList =roomManager.getFullUserList()\n      })\n      console.log(\"remote-user-added\", evt)\n    })\n    // 远端人更新\n    roomManager.on('remote-user-updated', (evt: any) => {\n      runInAction(() => {\n        this.teacherRoomUserList =roomManager.getFullUserList()\n      })\n      console.log(\"remote-user-updated\", evt)\n    })\n    // 远端人移除\n    roomManager.on('remote-user-removed', (evt: any) => {\n      runInAction(() => {\n        this.teacherRoomUserList =roomManager.getFullUserList()\n      })\n      console.log(\"remote-user-removed\", evt)\n    })\n    // 远端流加入\n    roomManager.on('remote-stream-added', (evt: any) => {\n      runInAction(() => {\n        this.teacherRoomStreamList = roomManager.getFullStreamList()\n        if (this.roomInfo.userRole !== 'teacher') {\n          if (this.streamList.find((it: EduStream) => it.videoSourceType === EduVideoSourceType.screen)) {\n            this.sharing = true\n          } else { \n            this.sharing = false\n          }\n        }\n      })\n      console.log(\"remote-stream-added\", evt)\n    })\n    // 远端流移除\n    roomManager.on('remote-stream-removed', (evt: any) => {\n      runInAction(() => {\n        this.teacherRoomStreamList = roomManager.getFullStreamList()\n        if (this.roomInfo.userRole !== 'teacher') {\n          if (this.streamList.find((it: EduStream) => it.videoSourceType === EduVideoSourceType.screen)) {\n            this.sharing = true\n          } else { \n            this.sharing = false\n          }\n        }\n      })\n      console.log(\"remote-stream-removed\", evt)\n    })\n    // 远端流更新\n    roomManager.on('remote-stream-updated', (evt: any) => {\n      runInAction(() => {\n        this.teacherRoomStreamList = roomManager.getFullStreamList()\n        if (this.roomInfo.userRole !== 'teacher') {\n          if (this.streamList.find((it: EduStream) => it.videoSourceType === EduVideoSourceType.screen)) {\n            this.sharing = true\n          } else { \n            this.sharing = false\n          }\n        }\n      })\n      console.log(\"remote-stream-updated\", evt)\n    })\n    // 教室更新\n    roomManager.on('classroom-property-updated', (classroom: any) => {\n      console.log(\"classroom-property-updated\", classroom)\n      const groups = get(classroom, 'roomProperties.groups')\n      if (groups) {\n        this._courseList = groups\n      }\n      const record = get(classroom, 'roomProperties.record')\n      if (record) {\n        const state = record.state\n        if (state === 1) {\n          this.recordState = true\n        } else {\n          if (state === 0 && this.recordState) {\n            this.addChatMessage({\n              id: 'system',\n              ts: Date.now(),\n              text: '',\n              account: 'system',\n              link: this.roomUuid,\n              sender: false,\n              fromRoomUUid: '',\n              role: EduRoleTypeEnum.teacher,\n              // toRoomUuid: 'all',\n            })\n            this.recordState = false\n            this.recordId = ''\n          }\n        }\n      }\n        const prevClassState = this.classState\n\n        const newClassState = classroom.roomStatus.courseState\n\n        if (prevClassState !== newClassState) {\n          this.classState = newClassState\n          \n          if (this.classState === 1) {\n            this.startTime = get(classroom, 'roomStatus.startTime', 0)\n            this.addInterval('timer', () => {\n              this.appStore.updateTime(+this.startTime)\n            }, ms)\n          } else {\n            this.startTime = get(classroom, 'roomStatus.startTime', 0)\n            this.delInterval('timer')\n          }\n        }\n        this.isMuted = !classroom.roomStatus.isStudentChatAllowed\n    })\n    // teacher room manager\n    roomManager.on('room-chat-message', (evt: any) => {\n      console.log('[teacher] room-chat-message ', JSON.stringify(evt))\n      const {textMessage} = evt;\n      const message = textMessage as EduTextMessage\n      const payload = JSON.parse(message.message)\n      if (this.roomInfo.userRole !== 'teacher') {\n        if (+payload.role === EduRoleTypeEnum.teacher) {\n          this.addChatMessage({\n            id: message.fromUser.userUuid,\n            ts: message.timestamp,\n            text: payload.content,\n            account: message.fromUser.userName,\n            sender: false,\n            role: +payload.role,\n            fromRoomName: payload.fromRoomName,\n            fromRoomUuid: payload.fromRoomUuid,\n          })\n        }\n      }\n\n      if (this.roomInfo.userRole === 'teacher') {\n        this.addChatMessage({\n          id: message.fromUser.userUuid,\n          ts: message.timestamp,\n          text: payload.content,\n          account: message.fromUser.userName,\n          sender: false,\n          role: +payload.role,\n          fromRoomName: payload.fromRoomName,\n          fromRoomUuid: payload.fromRoomUuid,\n        })\n      }\n    })\n\n    const roles: Record<string, string> = {\n      'teacher': 'host',\n      'student': 'audience',\n      'assistant': 'assistant'\n    }\n\n    console.log(\"[rules] current Role\", roles[userRole])\n\n    await roomManager.join({\n      userRole: roles[userRole],\n      roomUuid,\n      userName: `${this.roomInfo.userName}`,\n      userUuid: `${this.userUuid}`,\n      autoPublish: true,\n    })\n\n    const roomInfo = roomManager.getClassroomInfo()\n    this.classState = roomInfo.roomStatus.courseState\n    this.startTime = get(roomInfo, 'roomStatus.startTime', 0)\n\n    if (this.classState === 1) {\n      this.addInterval('timer', () => {\n        this.appStore.updateTime(+this.startTime)\n      }, ms)\n    } else {\n      this.appStore.resetTime()\n    }\n    this.isMuted = !roomInfo.roomStatus.isStudentChatAllowed\n    const classroomInfo = roomManager.getClassroomInfo()\n    const courseList = get(classroomInfo, 'roomProperties.groups', null)\n    if (courseList) {\n      this._courseList = courseList\n    }\n    return roomManager\n  }\n\n  @observable\n  studentRoomUserList: EduUser[] = []\n\n  @observable\n  studentRoomStreamList: EduStream[] = []\n\n  @action\n  async prepareStudentClassroom(roomUuid: string, roomName: string, userRole: string) {\n    const roomManager = this.eduManager.createClassroom({\n      roomUuid: roomUuid,\n      roomName: roomName\n    })\n\n    const roles: Record<string, string> = {\n      'student': 'broadcaster',\n      'assistant': 'assistant'\n    }\n\n    roomManager.on('seqIdChanged', (evt: any) => {\n      // console.log(\"[student] seqIdChanged\", evt)\n      if (this.roomInfo.userRole === 'student') {\n        this.appStore.uiStore.updateCurSeqId(evt.curSeqId)\n        this.appStore.uiStore.updateLastSeqId(evt.latestSeqId)\n      }\n    })\n    // 本地用户更新\n    roomManager.on('local-user-updated', (evt: any) => {\n      this.teacherRoomUserList = roomManager.getFullUserList()\n      console.log('[student] local-user-updated', evt)\n    })\n    // 本地流加入\n    // roomManager.on('local-stream-added', (evt: any) => {\n    //   this.teacherRoomStreamList = roomManager.getFullStreamList()\n    //   console.log(\"local-stream-added\", evt)\n    // })\n    // 本地流更新\n    roomManager.on('local-stream-updated', async (evt: any) => {\n      await this.mutex.dispatch<Promise<void>>(async () => {\n        if (!this.joiningRTC) {\n          return\n        }\n        try {\n          if (this.roomInfo.userRole !== 'student') return\n          if (evt.type === 'main') {\n            const localStream = roomManager.getLocalStreamData()\n            console.log(\"[demo] [breakout] [student] local-stream-updated# localStream \", localStream, this.joiningRTC)\n            if (localStream && localStream.state !== 0) {\n              this._cameraEduStream = localStream.stream\n\n              await this.prepareCamera()\n              await this.prepareMicrophone()\n              console.log(\"[demo] [breakout] [student] this._cameraEduStream\", this._cameraEduStream)\n              if (this.joiningRTC) {\n                if (this._hasCamera) {\n                  if (this.cameraEduStream.hasVideo) {\n                    await this.openCamera()\n                  } else {\n                    await this.closeCamera()\n                  }\n                }\n                if (this._hasMicrophone) {\n                  if (this.cameraEduStream.hasAudio) {\n                    await this.openMicrophone()\n                  } else {\n                    await this.closeMicrophone()\n                  }\n                }\n              }\n            } else {\n              console.log(\"[demo] [breakout] [student] reset camera edu stream\", localStream, localStream && localStream.state)\n              this._cameraEduStream = undefined\n            }\n          }\n\n          if (evt.type === 'screen') {\n            // if (this.roomInfo.userRole === 'teacher') {\n            const screenStream = roomManager.getLocalScreenData()\n            console.log(\"[demo] [breakout] [student] getLocalScreenData#screenStream \", screenStream)\n            if (screenStream && screenStream.state !== 0) {\n              this._screenEduStream = screenStream.stream\n              this.sharing = true\n            } else {\n              console.log(\"[demo] [breakout] [student] reset screen edu stream\", screenStream, screenStream && screenStream.state)\n              this._screenEduStream = undefined\n              this.sharing = false\n            }\n            // }\n          }\n          console.log(\"[demo] [breakout] [student] local-stream-updated\", evt)\n        } catch (err) {\n          console.error('[demo] [breakout] [student] Classroom# local-stream-updated ', err.msg)\n          console.error(err)\n        }\n      })\n    })\n    // 本地流移除\n    roomManager.on('local-stream-removed', async (evt: any) => {\n      await this.mutex.dispatch<Promise<void>>(async () => {\n        if (!this.joiningRTC) {\n          return\n        }\n        try {\n          if (this.roomInfo.userRole !== 'student') return\n          if (evt.type === 'main') {\n            this._cameraEduStream = undefined\n            await this.closeCamera()\n            await this.closeMicrophone()\n          }\n          console.log(\"[demo] [breakout] [student] local-stream-removed\", evt)\n        } catch (err) {\n          console.error('[demo] [breakout] [student] Classroom# local-stream-removed ', err.msg)\n          console.error(err)\n        }\n      })\n    })\n    // 远端人加入\n    roomManager.on('remote-user-added', (evt: any) => {\n      runInAction(() => {\n        this.studentRoomUserList  = roomManager.getFullUserList()\n      })\n      console.log('[student] remote-stream-added', evt)\n    })\n    // 远端人更新\n    roomManager.on('remote-user-updated', (evt: any) => {\n      runInAction(() => {\n        this.studentRoomUserList  = roomManager.getFullUserList()\n      })\n      console.log('[student] remote-stream-updated', evt)\n    })\n    // 远端人移除\n    roomManager.on('remote-user-removed', (evt: any) => {\n      runInAction(() => {\n        this.studentRoomUserList  = roomManager.getFullUserList()\n      })\n      console.log('[student] remote-stream-removed', evt)\n    })\n    // 远端流加入\n    roomManager.on('remote-stream-added', (evt: any) => {\n      runInAction(() => {\n        this.studentRoomStreamList = roomManager.getFullStreamList()\n      })\n      console.log('[student] remote-stream-added', evt)\n    })\n    // 远端流移除\n    roomManager.on('remote-stream-removed', (evt: any) => {\n      runInAction(() => {\n        this.studentRoomStreamList = roomManager.getFullStreamList()\n      })\n      console.log('[student] remote-stream-removed', evt)\n    })\n    // 远端流更新\n    roomManager.on('remote-stream-updated', (evt: any) => {\n      runInAction(() => {\n        this.studentRoomStreamList = roomManager.getFullStreamList()\n      })\n      console.log('[student] remote-stream-updated', evt)\n    })\n    // student room manager\n    roomManager.on('room-chat-message', (evt: any) => {\n      console.log('[student] room-chat-message ', JSON.stringify(evt))\n      const {textMessage} = evt;\n      const message = textMessage as EduTextMessage\n\n      const payload = JSON.parse(message.message)\n      this.addChatMessage({\n        id: message.fromUser.userUuid,\n        ts: message.timestamp,\n        text: payload.content,\n        account: message.fromUser.userName,\n        sender: false,\n        role: +payload.role,\n        fromRoomUuid: payload.fromRoomUuid,\n      })\n    })\n\n    await roomManager.join({\n      userRole: roles[userRole],\n      roomUuid,\n      userName: `${this.roomInfo.userName}`,\n      userUuid: `${this.userUuid}`,\n      autoPublish: true,\n    })\n    console.log('EDU-STATE #EduClassroomManager#join ', JSON.stringify(roomManager.getClassroomInfo()))\n    return roomManager\n  }\n\n  getLargeClassroomRole(role: string) {\n    if (role === 'teacher') {\n      return 'host'\n    }\n    if (role === 'assistant') {\n      return 'assistant'\n    }\n    return 'audience'\n  }\n\n  @action\n  async prepareClassroom(role: string) {\n    this.roomApi = new RoomApi()\n    let {roomUuid} = await this.roomApi.fetchRoom({\n      roomName: `${this.roomInfo.roomName}`,\n      roomType: +this.roomInfo.roomType as number,\n    })\n    console.log('[breakout] uuid', this.userUuid)\n    this.handlePeerMessage()\n    await this.eduManager.login(this.userUuid)\n    console.log('[breakout] login succeed', this.userUuid)\n    const roomManager = await this.prepareLargeClassroom(roomUuid, role)\n    console.log('[breakout] prepareLargeClassroom succeed')\n    if (['student'].includes(role)) {\n      let groupData = await this.prepareGroup(roomUuid, roomManager.userToken)\n      const studentRoomManager = await this.prepareStudentClassroom(groupData.roomUuid, groupData.roomName, role)\n      this.appStore.groupClassroomManager = studentRoomManager\n      console.log('[breakout] prepareStudentClassroom succeed')\n    }\n    this.appStore.roomManager = roomManager\n    const roomInfo = this.largeClassroomManager.getClassroomInfo()\n    this.classState = roomInfo.roomStatus.courseState\n    this.isMuted = !roomInfo.roomStatus.isStudentChatAllowed\n  }\n\n  @action\n  async joinAsStudent() {\n    try {\n      await this.prepareClassroom(this.roomInfo.userRole)\n      console.log('[breakout] joinAsStudent')\n      const groupManager = this.groupClassroomManager\n      const largeRoomManager = this.largeClassroomManager\n      console.log('[breakout] groupManager', groupManager)\n      this.appStore._boardService = new EduBoardService(largeRoomManager.userToken, largeRoomManager.roomUuid)\n      console.log('[breakout whiteboard] invoke init')\n      await this.appStore.boardStore.init()\n      console.log('[breakout whiteboard] after invoke init')\n      this.appStore._recordService = new EduRecordService(largeRoomManager.userToken)\n      const mainStream = groupManager.data.streamMap['main']\n      const largeRoomMainStream = largeRoomManager.data.streamMap['main']\n      const roomInfo = this.largeClassroomManager.getClassroomInfo()\n      const groupRoom = groupManager.getClassroomInfo()\n\n      console.log('[breakout], groupRoom', groupRoom, ' roomInfo ', roomInfo)\n  \n      const localStreamData = groupManager.data.localStreamData\n      await groupManager.userService.publishStream({\n        videoSourceType: EduVideoSourceType.camera,\n        audioSourceType: EduAudioSourceType.mic,\n        streamUuid: mainStream.streamUuid,\n        streamName: '',\n        hasVideo: localStreamData && localStreamData.stream ? localStreamData.stream.hasVideo : true,\n        hasAudio: localStreamData && localStreamData.stream ? localStreamData.stream.hasAudio : true,\n        userInfo: {} as EduUser\n      })\n\n      await this.joinRtcAsStudent({\n        studentChannel:{\n          uid: +mainStream.streamUuid,\n          channel: groupRoom.roomInfo.roomUuid,\n          token: mainStream.rtcToken\n        },\n        teacherChannel: {\n          uid: +largeRoomMainStream.streamUuid,\n          channel: roomInfo.roomInfo.roomUuid,\n          token: largeRoomMainStream.rtcToken\n        }\n      })\n\n      this.currentStudentRoomUuid = groupRoom.roomInfo.roomUuid\n\n      const courseList = get(groupRoom, 'roomProperties.groups', null)\n      if (courseList) {\n        this._courseList = courseList\n      }\n\n      this.appStore.uiStore.addToast(t('toast.publish_business_flow_successfully'))\n      this._cameraEduStream = this.groupClassroomManager.userService.localStream.stream\n      try {\n        await this.prepareCamera()\n        await this.prepareMicrophone()\n        if (this._cameraEduStream) {\n          if (this._cameraEduStream.hasVideo) {\n            await this.openCamera()\n          } else {\n            await this.closeCamera()\n          }\n          if (this._cameraEduStream.hasAudio) {\n            await this.openMicrophone()\n          } else {\n            await this.closeMicrophone()\n          }\n        }\n      } catch (err) {\n        this.appStore.uiStore.addToast(t('toast.media_method_call_failed') + `: ${err.msg}`)\n        console.warn(err)\n      }\n    \n      const roomProperties = groupManager.getClassroomInfo().roomProperties\n      if (roomProperties) {\n        this.recordId = get(roomProperties, 'record.recordId', '')\n      } else {\n        this.recordId = ''\n      }\n    \n      this.studentRoomUserList = groupManager.getFullUserList()\n      this.teacherRoomUserList = largeRoomManager.getFullUserList()\n      this.studentRoomStreamList = groupManager.getFullStreamList()\n      this.teacherRoomStreamList = largeRoomManager.getFullStreamList()\n    } catch (err) {\n      console.error(err)\n      throw err\n    }\n  }\n\n  @action\n  async joinAsTeacher() {\n    await this.prepareClassroom(this.roomInfo.userRole)\n    console.log('[breakout] classroom as teacher')\n    const roomManager = this.largeClassroomManager\n    this.appStore._boardService = new EduBoardService(roomManager.userToken, roomManager.roomUuid)\n    console.log('[breakout whiteboard] invoke init')\n    await this.appStore.boardStore.init()\n    console.log('[breakout whiteboard] after invoke init')\n    this.appStore._recordService = new EduRecordService(roomManager.userToken)\n    const mainStream = roomManager.data.streamMap['main']\n    const roomInfo = this.largeClassroomManager.getClassroomInfo()\n    console.log(\"[breakout] joinAsTeacher \", JSON.stringify({mainStream, roomInfo}))\n    await this.joinRtcAsTeacher({\n      uid: +mainStream.streamUuid,\n      channel: roomInfo.roomInfo.roomUuid,\n      token: mainStream.rtcToken\n    })\n\n    const localStreamData = roomManager.data.localStreamData\n  \n    console.log(\"localStreamData\", localStreamData)\n    await roomManager.userService.publishStream({\n      videoSourceType: EduVideoSourceType.camera,\n      audioSourceType: EduAudioSourceType.mic,\n      streamUuid: mainStream.streamUuid,\n      streamName: '',\n      hasVideo: localStreamData && localStreamData.stream ? localStreamData.stream.hasVideo : true,\n      hasAudio: localStreamData && localStreamData.stream ? localStreamData.stream.hasAudio : true,\n      userInfo: {} as EduUser\n    })\n    this.appStore.uiStore.addToast(t('toast.publish_business_flow_successfully'))\n    this._cameraEduStream = this.largeClassroomManager.userService.localStream.stream\n    try {\n      await this.prepareCamera()\n      await this.prepareMicrophone()\n      if (this._cameraEduStream) {\n        if (this._cameraEduStream.hasVideo) {\n          await this.openCamera()\n        } else {\n          await this.closeCamera()\n        }\n        if (this._cameraEduStream.hasAudio) {\n          await this.openMicrophone()\n        } else {\n          await this.closeMicrophone()\n        }\n      }\n    } catch (err) {\n      this.appStore.uiStore.addToast(t('toast.media_method_call_failed') + `: ${err.msg}`)\n      console.warn(err)\n    }\n\n    const roomProperties = roomManager.getClassroomInfo().roomProperties\n    if (roomProperties) {\n      this.recordId = get(roomProperties, 'record.recordId', '')\n    } else {\n      this.recordId = ''\n    }\n  \n    const classroomInfo = roomManager.getClassroomInfo()\n    const courseList = get(classroomInfo, 'roomProperties.groups', null)\n    if (courseList) {\n      this._courseList = courseList\n    }\n\n    this.teacherRoomUserList = roomManager.getFullUserList()\n    this.teacherRoomStreamList = roomManager.getFullStreamList()\n  }\n\n  startTime: number = 0\n  @action\n  async assistantJoinLargeClassroom() {\n    this.roomApi = new RoomApi()\n    let {roomUuid} = await this.roomApi.fetchRoom({\n      roomName: `${this.roomInfo.roomName}`,\n      roomType: +this.roomInfo.roomType as number,\n    })\n    console.log('[breakout] uuid', this.userUuid)\n    this.handlePeerMessage()\n    await this.eduManager.login(this.userUuid)\n    console.log('[breakout] login succeed', this.userUuid)\n    const role = this.roomInfo.userRole\n    const roomManager = await this.prepareLargeClassroom(roomUuid, role)\n    console.log('[breakout] prepareLargeClassroom succeed')\n    this.appStore.roomManager = roomManager\n  }\n\n  @action\n  async assistantJoinGroupClassroomByCourse(studentRoomUuid: string, studentRoomName: string) {\n    const studentRoomManager = await this.prepareStudentClassroom(studentRoomUuid, studentRoomName, this.roomInfo.userRole)\n    this.appStore.groupClassroomManager = studentRoomManager\n  }\n\n  @action\n  async loginAsAssistant() {\n    try {\n      window.addEventListener('popstate', this.handlePopState, false)\n      this.appStore.uiStore.startLoading()\n      if (this.roomInfo) {\n        if (this.roomInfo.userRole === 'assistant') {\n          if (!this.largeClassroomManager) {\n            await this.assistantJoinLargeClassroom()\n          }\n        }\n      }\n      this.appStore.uiStore.stopLoading()\n      this.joined = true\n    } catch (err) {\n      window.removeEventListener('popstate', this.handlePopState, false)\n      this.appStore.uiStore.stopLoading()\n      throw err\n    }\n  }\n\n  @observable\n  joinedGroup: boolean =false\n\n  @action\n  async joinAsAssistant(groupUuid: string, groupName: string) {\n    try {\n      console.log(\"[breakout] joinAsAssistant \", JSON.stringify({groupUuid, groupName}))\n      if (!this.largeClassroomManager) {\n        await this.assistantJoinLargeClassroom()\n      }\n      await this.joinGroupAsAssistant(groupUuid, groupName)\n      this.currentStudentRoomUuid = groupUuid\n      this.joinedGroup = true\n    } catch (err) {\n      console.warn(err)\n      throw err\n    }\n  }\n\n  // @action\n  // async joinGroupBy(courseName: string) {\n  //   try {\n  //     this.appStore.uiStore.startLoading()\n  //     if (this.roomInfo) {\n  //       if (this.roomInfo.userRole === 'assistant') {\n  //         await this.joinGroupAsAssistant(courseName)\n  //       }\n  //     }\n  //     this.appStore.uiStore.stopLoading()\n  //     this.joined = true\n  //   } catch (err) {\n  //     this.appStore.uiStore.stopLoading()\n  //     throw err\n  //   }\n  // }\n\n  @action\n  async leaveGroupBy(courseName: string){\n    try {\n      this.appStore.uiStore.startLoading()\n      if (this.roomInfo) {\n        if (this.roomInfo.userRole === 'assistant') {\n          await this.leaveGroupAsAssistant(courseName)\n        }\n      }\n      this.appStore.uiStore.stopLoading()\n      this.joined = true\n    } catch (err) {\n      this.appStore.uiStore.stopLoading()\n      throw err\n    }\n  }\n\n  @action\n  resetAssistantState() {\n    this.currentStudentRoomUuid = ''\n    // this.remoteUsersRenderer = []\n    this.appStore.mediaStore.resetRoomState()\n    this.recording = false\n    this.resolutionIdx = 0\n    this.totalVolume = 0\n    this.cameraLabel = ''\n    this.microphoneLabel = ''\n    this.mediaService.reset()\n    this.resetScreenStream()\n    this.teacherRoomStreamList = []\n    this.teacherRoomUserList =[]\n    this.customScreenShareWindowVisible = false\n    this.currentWindowId = ''\n    this.customScreenShareItems = []\n    this._roomChatMessages = []\n    this.isMuted = undefined\n    this._cameraEduStream = undefined\n    this._screenEduStream = undefined\n    this._microphoneTrack = undefined\n    this.recordId = ''\n    this.joined = false\n    this._hasCamera = undefined\n    this._hasMicrophone = undefined\n    this.joiningRTC = false\n    this.recordState = false\n    this._courseList = []\n  }\n\n  @action\n  async leaveGroupAsAssistant(courseName: string) {\n    try {\n      await this.leaveRtc()\n      await this.appStore.boardStore.leave()\n      await this.groupClassroomManager?.leave()\n      this.appStore.uiStore.addToast(t('toast.successfully_left_the_business_channel'))\n      this.resetAssistantState()\n      this.appStore.uiStore.updateCurSeqId(0)\n      this.appStore.uiStore.updateLastSeqId(0)\n    } catch (err) {\n      console.warn(err)\n      throw err\n    }\n  }\n\n  @action\n  async joinGroupAsAssistant(courseName: string, groupName: string) {\n    try {\n      console.log('[assistant] ', courseName, groupName)\n      await this.assistantJoinGroupClassroomByCourse(courseName, groupName)\n      const groupManager = this.groupClassroomManager\n      const largeRoomManager = this.largeClassroomManager\n      this.appStore._boardService = new EduBoardService(largeRoomManager.userToken, largeRoomManager.roomUuid)\n      console.log('[breakout whiteboard] invoke init')\n      await this.appStore.boardStore.init()\n      console.log('[breakout whiteboard] after invoke init')\n      this.appStore._recordService = new EduRecordService(largeRoomManager.userToken)\n      const mainStream = groupManager.data.streamMap['main']\n      const largeRoomMainStream = largeRoomManager.data.streamMap['main']\n      const roomInfo = this.largeClassroomManager.getClassroomInfo()\n      const groupRoom = groupManager.getClassroomInfo()\n\n      const config = {\n        studentChannel:{\n          uid: +mainStream.streamUuid,\n          channel: groupRoom.roomInfo.roomUuid,\n          token: mainStream.rtcToken\n        },\n        teacherChannel: {\n          uid: +largeRoomMainStream.streamUuid,\n          channel: roomInfo.roomInfo.roomUuid,\n          token: largeRoomMainStream.rtcToken\n        }\n      }\n  \n      console.log(\"[breakout] joinRtcAsAssistant \", JSON.stringify(config), \" largeRoomMainStream \", JSON.stringify(largeRoomMainStream), \" groupRoom \", JSON.stringify(groupRoom.roomInfo), \" mainStream \", JSON.stringify(mainStream))\n      await this.joinRtcAsAssistant(config)\n      \n      const roomProperties = groupManager.getClassroomInfo().roomProperties\n      if (roomProperties) {\n        this.recordId = get(roomProperties, 'record.recordId', '')\n      } else {\n        this.recordId = ''\n      }\n\n      const classroomInfo = largeRoomManager.getClassroomInfo()\n      const courseList = get(classroomInfo, 'roomProperties.groups', null)\n      if (courseList) {\n        this._courseList = courseList\n      }\n    \n      this.studentRoomUserList = groupManager.getFullUserList()\n      this.teacherRoomUserList = largeRoomManager.getFullUserList()\n      this.studentRoomStreamList = groupManager.getFullStreamList()\n      this.teacherRoomStreamList = largeRoomManager.getFullStreamList()\n    } catch (err) {\n      console.error(err)\n      throw err\n    }\n  }\n\n\n\n  async prepareGroup(roomUuid: string, userToken: string) {\n    let res = await this.roomApi.acquireRoomGroupBy(roomUuid, userToken)\n    this.roomInfo.groupName = res.roomName\n    this.roomInfo.groupUuid = res.groupUuid\n    return res\n  }\n\n\n  @action\n  async assistantJoinRoom(courseUuid: string) {\n    try {\n      this.appStore.uiStore.startLoading()\n      if (this.roomInfo) {\n        if (this.roomInfo.userRole === 'assistant') {\n          await this.joinAsAssistant(courseUuid, this.roomInfo.groupName as string)\n        }\n      }\n      this.appStore.uiStore.stopLoading()\n      this.joined = true\n    } catch (err) {\n      this.appStore.uiStore.stopLoading()\n      throw err\n    }\n  }\n\n  @action\n  async join() {\n    try {\n      window.addEventListener('popstate', this.handlePopState, false)\n      this.appStore.uiStore.startLoading()\n      if (this.roomInfo) {\n        if (this.roomInfo.userRole === 'teacher') {\n          await this.joinAsTeacher()\n        }\n        if (this.roomInfo.userRole === 'student') {\n          await this.joinAsStudent()\n        }\n      }\n      this.appStore.uiStore.stopLoading()\n      this.joined = true\n    } catch (err) {\n      this.appStore.uiStore.stopLoading()\n      window.removeEventListener('popstate', this.handlePopState, false)\n      throw err\n    }\n  }\n\n  get teacherUuid(): string {\n    const teacher = this.userList.find((it: EduUser) => it.role === EduRoleType.teacher)\n    if (teacher) {\n      return teacher.userUuid\n    }\n    return ''\n  }\n\n  get localUser(): any {\n    return this.roomInfo\n  }\n\n  @computed\n  get teacherStream(): EduMediaStream {\n    // 当本地是老师时\n    const localUser = this.localUser\n    if (localUser && localUser.userRole === 'teacher'\n      && this.cameraEduStream) {\n      return {\n        local: true,\n        userUuid: this.appStore.userUuid,\n        account: localUser.userName,\n        streamUuid: this.cameraEduStream.streamUuid,\n        video: this.cameraEduStream.hasVideo,\n        audio: this.cameraEduStream.hasAudio,\n        renderer: this.cameraRenderer as LocalUserRenderer,\n        showControls: this.canControl(this.appStore.userUuid)\n      }\n    }\n\n    // 当远端是老师时\n    const teacherStream = this.streamList.find((it: EduStream) => it.userInfo.role as string === 'host' && it.userInfo.userUuid === this.teacherUuid && it.videoSourceType !== EduVideoSourceType.screen) as EduStream\n    if (teacherStream) {\n      const user = this.getUserBy(teacherStream.userInfo.userUuid as string) as EduUser\n      return {\n        local: false,\n        account: user.userName,\n        userUuid: user.userUuid,\n        streamUuid: teacherStream.streamUuid,\n        video: teacherStream.hasVideo,\n        audio: teacherStream.hasAudio,\n        renderer: this.remoteUsersRenderer.find((it: RemoteUserRenderer) => +it.uid === +teacherStream.streamUuid) as RemoteUserRenderer,\n        showControls: this.canControl(user.userUuid)\n      }\n    }\n\n    return {\n      account: 'teacher',\n      streamUuid: '',\n      userUuid: '',\n      local: false,\n      video: false,\n      audio: false,\n      renderer: undefined,\n      showControls: false\n    }\n  }\n\n  private getUserBy(userUuid: string): EduUser {\n    return this.userList.find((it: EduUser) => it.userUuid === userUuid) as EduUser\n  }\n\n  private getStreamBy(userUuid: string): EduStream {\n    return this.streamList.find((it: EduStream) => it.userInfo.userUuid as string === userUuid) as EduStream\n  }\n\n  @computed\n  get screenShareStream(): EduMediaStream {\n    // 当本地存在业务流时\n    if (this.screenEduStream) {\n      return {\n        local: true,\n        account: '',\n        userUuid: this.screenEduStream.userInfo.userUuid as string,\n        streamUuid: this.screenEduStream.streamUuid,\n        video: this.screenEduStream.hasVideo,\n        audio: this.screenEduStream.hasAudio,\n        renderer: this._screenVideoRenderer as LocalUserRenderer,\n        showControls: false\n      }\n    } else {\n      return this.teacherRoomStreamList.reduce((acc: EduMediaStream[], stream: EduStream) => {\n        const teacher = this.teacherRoomUserList.find((user: EduUser) => user.role === 'host')\n        if (!teacher || stream.userInfo.userUuid !== teacher.userUuid || stream.videoSourceType !== EduVideoSourceType.screen) {\n          return acc;\n        } else {\n          acc.push({\n            local: false,\n            account: '',\n            userUuid: stream.userInfo.userUuid,\n            streamUuid: stream.streamUuid,\n            video: stream.hasVideo,\n            audio: stream.hasAudio,\n            renderer: this.remoteUsersRenderer.find((it: RemoteUserRenderer) => +it.uid === +stream.streamUuid) as RemoteUserRenderer,\n            showControls: false\n          })\n        }\n        return acc;\n      }, [])[0]\n    }\n  }\n\n  isLocalStream(stream: EduStream): boolean {\n    return this.appStore.userUuid === stream.userInfo.userUuid\n  }\n\n  @computed\n  get studentStreams(): EduMediaStream[] {\n    let streamList = this.studentRoomStreamList.reduce(\n      (acc: EduMediaStream[], stream: EduStream) => {\n        const user = this.studentRoomUserList.find((user: EduUser) => (user.userUuid === stream.userInfo.userUuid && ['broadcaster'].includes(user.role)))\n        if (!user || this.isLocalStream(stream)) return acc;\n        acc.push({\n          local: false,\n          account: user.userName,\n          userUuid: stream.userInfo.userUuid as string,\n          streamUuid: stream.streamUuid,\n          video: stream.hasVideo,\n          audio: stream.hasAudio,\n          renderer: this.remoteUsersRenderer.find((it: RemoteUserRenderer) => +it.uid === +stream.streamUuid) as RemoteUserRenderer,\n          showControls: this.canControl(user.userUuid)\n        })\n        return acc;\n      }\n    , [])\n\n    console.log('[rtm] streamList', streamList)\n\n    const localUser = this.localUser\n\n    const isStudent = ['student'].includes(localUser.userRole)\n\n    if (this.cameraEduStream && isStudent) {\n      streamList = [{\n        local: true,\n        account: localUser.userName,\n        userUuid: this.cameraEduStream.userInfo.userUuid as string,\n        streamUuid: this.cameraEduStream.streamUuid,\n        video: this.cameraEduStream.hasVideo,\n        audio: this.cameraEduStream.hasAudio,\n        renderer: this.cameraRenderer as LocalUserRenderer,\n        showControls: this.canControl(this.appStore.userUuid)\n      } as EduMediaStream].concat(streamList)\n    }\n    return streamList\n  }\n\n  @action\n  async leaveCourse() {\n    try {\n      await this.leaveRtc()\n      await this.appStore.boardStore.leave()\n      // this.appStore.boardStore.setReady(false)\n      await this.eduManager.logout()\n      await this.largeClassroomManager?.leave()\n      await this.groupClassroomManager?.leave()\n      await this.largeClassroomManager?.removeAllListeners()\n      await this.groupClassroomManager?.removeAllListeners()\n      this.appStore.groupClassroomManager = undefined\n      this.appStore.roomManager = undefined\n      this.appStore.uiStore.addToast(t('toast.successfully_left_the_business_channel'))\n      this.reset()\n      this.appStore.uiStore.updateCurSeqId(0)\n      this.appStore.uiStore.updateLastSeqId(0)\n      // this.appStore.uiStore.reset()\n    } catch (err) {\n      this.reset()\n      console.error(err)\n    }\n  }\n\n  @action\n  async leave() {\n    try {\n      window.removeEventListener('popstate', this.handlePopState, false)\n      await this.leaveRtc()\n      await this.appStore.boardStore.leave()\n      // this.appStore.boardStore.setReady(false)\n      await this.eduManager.logout()\n      await this.largeClassroomManager?.leave()\n      await this.groupClassroomManager?.leave()\n      await this.largeClassroomManager?.removeAllListeners()\n      await this.groupClassroomManager?.removeAllListeners()\n      this.appStore.groupClassroomManager = undefined\n      this.appStore.roomManager = undefined\n      this.appStore.uiStore.addToast(t('toast.successfully_left_the_business_channel'))\n      this.reset()\n      this.resetRoomInfo()\n      this.appStore.uiStore.updateCurSeqId(0)\n      this.appStore.uiStore.updateLastSeqId(0)\n      // this.appStore.uiStore.reset()\n    } catch (err) {\n      this.reset()\n      console.error(err)\n    }\n  }\n\n  @action\n  async startClass() {\n    try {\n      await this.largeClassroomManager?.userService.updateCourseState(EduCourseState.EduCourseStateStart)\n      // this.classState = true\n      this.appStore.uiStore.addToast(t('toast.course_started_successfully'))\n    } catch (err) {\n      console.log(err)\n      this.appStore.uiStore.addToast(t('toast.setting_start_failed'))\n    }\n  }\n\n  @action\n  async stopClass() {\n    try {\n      await this.largeClassroomManager?.userService.updateCourseState(EduCourseState.EduCourseStateStop)\n      // this.classState = false\n      this.appStore.uiStore.addToast(t('toast.the_course_ends_successfully'))\n    } catch (err) {\n      console.log(err)\n      this.appStore.uiStore.addToast(t('toast.setting_ended_failed'))\n    }\n  }\n\n  @computed\n  get mutedChat(): boolean {\n    if (this.isMuted !== undefined) {\n      return this.isMuted\n    }\n    const classroom = this.largeClassroomManager?.getClassroomInfo()\n    if (classroom && classroom.roomStatus) {\n      return !classroom.roomStatus.isStudentChatAllowed\n    }\n    return true\n  }\n\n  @observable\n  isMuted?: boolean = undefined\n\n  @action\n  async muteChat() {\n    const sceneType = +this.roomInfo.roomType === 3 ? EduSceneType.SceneLarge : +this.roomInfo.roomType\n    const roles = ['broadcaster']\n    if (sceneType === EduSceneType.SceneLarge) {\n      roles.push('audience')\n    }\n    await this.largeClassroomManager?.userService.muteStudentChatByRoles(roles)\n    this.isMuted = true\n  }\n\n  @action\n  async unmuteChat() {\n    const sceneType = +this.roomInfo.roomType === 3 ? EduSceneType.SceneLarge : +this.roomInfo.roomType\n    const roles = ['broadcaster']\n    if (sceneType === EduSceneType.SceneLarge) {\n      roles.push('audience')\n    }\n    await this.largeClassroomManager?.userService.unmuteStudentChatByRoles(roles)\n    this.isMuted = false\n  }\n\n  canControl(userUuid: string): boolean {\n    return ['teacher', 'assistant'].includes(this.roomInfo.userRole) || this.userUuid === userUuid\n  }\n\n  private _unreadMessageCount: number = 0\n\n  // @computed\n  // get unreadMessageCount(): number {\n  //   return this._unreadMessageCount\n  // }\n\n  @observable\n  _roomChatMessages: ChatMessage[] = []\n\n  @action\n  addChatMessage(args: any) {\n    this._roomChatMessages.push(args)\n  }\n\n  @computed\n  get currentStudentRoomName(): string {\n    if (this.currentStudentRoomUuid) {\n      return this._courseList.find((it: any) => it.roomUuid === this.currentStudentRoomUuid)?.roomName\n    }\n    return ''\n  }\n\n  @observable\n  currentStudentRoomUuid: string = ''\n\n  @computed\n  get roomChatMessages(): ChatMessage[] {\n    if (['student', 'assistant'].includes(this.roomInfo.userRole)) {\n      if (this.currentStudentRoomUuid) {\n        return this._roomChatMessages\n          .filter(\n            (chat: ChatMessage) => \n            `${chat.fromRoomUuid}` === `${this.currentStudentRoomUuid}` || !chat.fromRoomUuid\n          )\n      }\n    }\n    if (this.roomInfo.userRole === 'teacher') {\n      if (this.currentStudentRoomUuid) {\n        return this._roomChatMessages\n          .filter(\n            (chat: ChatMessage) => \n            `${chat.fromRoomUuid}` === `${this.currentStudentRoomUuid}`\n          )\n      }\n    }\n    return this._roomChatMessages\n  }\n\n  @computed\n  get muteControl(): boolean {\n    if (this.roomInfo) {\n      return this.roomInfo.userRole === 'teacher'\n    }\n    return false\n  }\n\n  @observable\n  mediaGroup: MediaService = null as any\n\n  @action\n  async muteStudentChat(userUuid: string, isLocal: boolean) {\n    if (isLocal) {\n      // await this.groupClassroomManager?.userService.updateUserState({'chat': false})\n    } else {\n      const user = this.getUserBy(userUuid)\n      // await this.groupClassroomManager?.userService.remoteStopStudentCamera(targetStream as EduStream)\n    }\n  }\n\n  @action\n  async unmuteStudentChat(userUuid: string, isLocal: boolean) {\n    if (isLocal) {\n      // await this.groupClassroomManager?.userService.updateUserState({'chat': false})\n    } else {\n      const user = this.getUserBy(userUuid)\n      // await this.groupClassroomManager?.userService.remoteStopStudentCamera(targetStream as EduStream)\n    }\n  }\n\n  @action\n  async muteStudentVideo(userUuid: string, isLocal: boolean) {\n    if (isLocal) {\n      await this.closeCamera()\n      await this.groupClassroomManager?.userService.updateMainStreamState({'videoState': false})\n    } else {\n      const stream = this.getStreamBy(userUuid)\n      if (stream) {\n        // await this.mediaGroup.muteRemoteVideo(+stream.streamUuid, true)\n        await this.mediaService.muteRemoteVideoByClient(this.mediaGroup, +stream.streamUuid, true)\n      }\n      const targetStream = this.streamList.find((it: EduStream) => it.userInfo.userUuid === userUuid)\n      await this.groupClassroomManager?.userService.remoteStopStudentCamera(targetStream as EduStream)\n    }\n  }\n\n  @action\n  async unmuteStudentVideo(userUuid: string, isLocal: boolean) {\n    if (isLocal) {\n      await this.openCamera()\n      await this.groupClassroomManager?.userService.updateMainStreamState({'videoState': true})\n    } else {\n      const stream = this.getStreamBy(userUuid)\n      const targetStream = this.streamList.find((it: EduStream) => it.userInfo.userUuid === userUuid)\n      await this.groupClassroomManager?.userService.remoteStartStudentCamera(targetStream as EduStream)\n    }\n  }\n\n  @action\n  async muteStudentAudio(userUuid: string, isLocal: boolean) {\n    if (isLocal) {\n      await this.closeMicrophone()\n      await this.groupClassroomManager?.userService.updateMainStreamState({'audioState': false})\n    } else {\n      const stream = this.getStreamBy(userUuid)\n      if (stream) {\n        await this.mediaService.muteRemoteAudioByClient(this.mediaGroup, +stream.streamUuid, true)\n      }\n      const targetStream = this.streamList.find((it: EduStream) => it.userInfo.userUuid === userUuid)\n      await this.groupClassroomManager?.userService.remoteStopStudentMicrophone(targetStream as EduStream)\n    }\n  }\n\n  @action\n  async unmuteStudentAudio(userUuid: string, isLocal: boolean) {\n    if (isLocal) {\n      await this.groupClassroomManager?.userService.updateMainStreamState({'audioState': true})\n    } else {\n      const stream = this.getStreamBy(userUuid)\n      const targetStream = this.streamList.find((it: EduStream) => it.userInfo.userUuid === userUuid)\n      await this.groupClassroomManager?.userService.remoteStartStudentMicrophone(targetStream as EduStream)\n    }\n  }\n\n  @action\n  async muteAudio(userUuid: string, isLocal: boolean, userRole: string) {\n    if (userRole === 'teacher') {\n      if (isLocal) {\n        console.log('before muteLocalAudio', this.microphoneLock)\n        await this.muteLocalMicrophone()\n        console.log('after muteLocalAudio', this.microphoneLock)\n      } else {\n        const targetStream = this.streamList.find((it: EduStream) => it.userInfo.userUuid === userUuid)\n        await this.largeClassroomManager?.userService.remoteStopStudentMicrophone(targetStream as EduStream)\n      }\n    }\n  }\n\n  async unmuteAudio(userUuid: string, isLocal: boolean, userRole: string) {\n    if (userRole === 'teacher') {\n      if (isLocal) {\n        console.log('before unmuteLocalMicrophone', this.microphoneLock)\n        await this.unmuteLocalMicrophone()\n        console.log('after unmuteLocalMicrophone', this.microphoneLock)\n      } else {\n        const stream = this.getStreamBy(userUuid)\n        const targetStream = this.streamList.find((it: EduStream) => it.userInfo.userUuid === userUuid)\n        await this.largeClassroomManager?.userService.remoteStartStudentMicrophone(targetStream as EduStream)\n      }\n    }\n  }\n\n  async muteVideo(userUuid: string, isLocal: boolean, userRole: string) {\n    if (isLocal) {\n      console.log('before muteLocalCamera', this.cameraLock)\n      await this.muteLocalCamera()\n      console.log('after muteLocalCamera', this.cameraLock)\n    } else {\n      const targetStream = this.streamList.find((it: EduStream) => it.userInfo.userUuid === userUuid)\n      await this.largeClassroomManager?.userService.remoteStopStudentCamera(targetStream as EduStream)\n    }\n  }\n\n  async unmuteVideo(userUuid: string, isLocal: boolean, userRole: string) {\n    if (isLocal) {\n      console.log('before unmuteLocalCamera', this.cameraLock)\n      await this.unmuteLocalCamera()\n      console.log('after unmuteLocalCamera', this.cameraLock)\n    } else {\n      const stream = this.getStreamBy(userUuid)\n      const targetStream = this.streamList.find((it: EduStream) => it.userInfo.userUuid === userUuid)\n      await this.largeClassroomManager?.userService.remoteStartStudentCamera(targetStream as EduStream)\n    }\n  }\n\n  @observable\n  recordId: string = ''\n\n  @observable\n  recording: boolean = false\n\n  @computed\n  get isRecording(): boolean {\n    if (this.recordId) return true\n    return false\n  }\n\n  async startOrStopRecording(){\n    try {\n      this.recording = true\n      if (this.isRecording) {\n        await this.stopRecording()\n      } else {\n        await this.startRecording()\n      }\n      this.recording = false\n    } catch (err) {\n      this.recording = false\n    }\n  }\n\n  @action\n  async startRecording() {\n    try {\n      let {recordId} = await this.recordService.startRecording(this.roomUuid)\n      this.recordId = recordId\n      this.appStore.uiStore.addToast(t('toast.start_recording_successfully'))\n    } catch (err) {\n      this.appStore.uiStore.addToast(t('toast.start_recording_failed') + `, ${err.msg}`)\n    }\n  }\n\n  @action\n  async stopRecording() {\n    try {\n      await this.recordService.stopRecording(this.roomUuid, this.recordId)\n      this.appStore.uiStore.addToast(t('toast.successfully_ended_recording'))\n      this.recordId = ''\n    } catch (err) {\n      this.appStore.uiStore.addToast(t('toast.failed_to_end_recording') + `, ${err.msg}`)\n    }\n  }\n\n  @observable\n  notice?: any = undefined\n\n  removeDialogBy(userUuid: any) {\n    const target = this.appStore\n    .uiStore\n    .dialogs.filter((it: DialogType) => it.dialog.userUuid)\n    .find((it: DialogType) => it.dialog.userUuid === userUuid)\n    if (target) {\n      this.appStore.uiStore.removeDialog(target.id)\n    }\n  }\n\n  @action\n  showNotice(type: PeerInviteEnum, userUuid: string) {\n    let text = t('toast.you_have_a_default_message')\n    switch(type) {\n      case PeerInviteEnum.teacherAccept: {\n        text = t('toast.the_teacher_agreed')\n        break;\n      }\n      case PeerInviteEnum.studentApply: {\n        text = t('toast.student_applied')\n        break;\n      }\n      case PeerInviteEnum.teacherStop: {\n        text = t('toast.you_were_dismissed_by_the_teacher')\n        break;\n      }\n      case PeerInviteEnum.studentStop:\n      case PeerInviteEnum.studentCancel: \n        text = t('toast.student_canceled')\n        this.removeDialogBy(userUuid)\n        break;\n      case PeerInviteEnum.teacherReject: {\n        text = t('toast.the_teacher_refused')\n        break;\n      }\n      case PeerInviteEnum.teacherReject: {\n        text = t('toast.the_teacher_refused')\n        break;\n      }\n    }\n    this.notice = {\n      reason: text,\n      userUuid\n    }\n    this.appStore.uiStore.addToast(this.notice.reason)\n  }\n\n  @action\n  async callApply() {\n    try {\n      const teacher = this.largeClassroomManager?.getFullUserList().find((it: EduUser) => it.userUuid === this.teacherStream.userUuid)\n      if (teacher) {\n        await this.largeClassroomManager?.userService.sendCoVideoApply(teacher)\n      }\n    } catch (err) {\n      this.appStore.uiStore.addToast(t('toast.failed_to_initiate_a_raise_of_hand_application') + ` ${err.msg}`)\n    }\n  }\n\n  @action\n  async callEnded() {\n    try {\n      const teacher = this.largeClassroomManager?.getFullUserList().find((it: EduUser) => it.userUuid === this.teacherStream.userUuid)\n      if (teacher) {\n        await this.largeClassroomManager?.userService.studentCancelApply(teacher)\n      }\n    } catch (err) {\n      this.appStore.uiStore.addToast(t('toast.failed_to_end_the_call') + ` ${err.msg}`)\n    }\n  }\n\n  showDialog(userName: string) {\n    this.appStore.uiStore.showDialog({\n      type: 'apply',\n      message: `${userName}` + t('icon.requests_to_connect_the_microphone')\n    })\n  }\n\n  async teacherRejectApply() {\n    const userUuid = (this.notice as any).userUuid\n    const user = this.largeClassroomManager?.getFullUserList().find(it => it.userUuid === userUuid)\n    if (user) {\n      await this.largeClassroomManager?.userService.rejectCoVideoApply(user)\n    }\n  }\n\n  async teacherAcceptApply() {\n    const userUuid = (this.notice as any).userUuid\n    const user = this.largeClassroomManager?.data.userList.find(it => it.user.userUuid === userUuid)\n    if (user) {\n      await this.largeClassroomManager?.userService.acceptCoVideoApply(user.user)\n      await this.largeClassroomManager?.userService.inviteStreamBy({\n        roomUuid: this.roomUuid,\n        streamUuid: user.streamUuid,\n        userUuid: user.user.userUuid\n      })\n    }\n  }\n\n}","import { AppStore } from '@/stores/app';\nimport { debounce } from 'lodash';\nimport { t } from '@/i18n';\nimport { observable, action, computed } from 'mobx';\nimport { LocalUserRenderer } from '@/sdk/education/core/media-service/renderer';\n\nconst delay = 2000\n\nconst networkQualityLevel = [\n  'unknown',\n  'excellent',\n  'good',\n  'poor',\n  'bad',\n  'very bad',\n  'down',\n]\n\nconst networkQualities: {[key: string]: string} = {\n  'excellent': 'network-good',\n  'good': 'network-good',\n  'poor': 'network-normal',\n  'bad': 'network-normal',\n  'very bad': 'network-bad',\n  'down': 'network-bad',\n  'unknown': 'network-bad',\n}\n\nexport class MediaStore {\n  @observable\n  autoplay: boolean = false;\n\n  @observable\n  remoteUsersRenderer: any[] = []\n\n  get mediaService() {\n    return this.appStore.mediaService\n  }\n\n  @observable\n  _delay: number = 0\n\n  @computed\n  get delay(): string {\n    return `${this._delay}`\n  }\n\n  private appStore: AppStore;\n\n  constructor(appStore: any) {\n    this.appStore = appStore\n    this.mediaService.on('rtcStats', (evt: any) => {\n      this.appStore.updateCpuRate(evt.cpuTotalUsage)\n    })\n    this.mediaService.on('audio-device-changed', debounce(async (info: any) => {\n      console.log(\"audio device changed\")\n      this.appStore.uiStore.addToast(t('toast.audio_equipment_has_changed'))\n      await this.appStore.deviceStore.init({audio: true})\n    }, delay))\n    this.mediaService.on('video-device-changed', debounce(async (info: any) => {\n      console.log(\"video device changed\")\n      this.appStore.uiStore.addToast(t('toast.video_equipment_has_changed'))\n      await this.appStore.deviceStore.init({video: true})\n    }, delay))\n    this.mediaService.on('audio-autoplay-failed', () => {\n      if (!this.autoplay) {\n        this.autoplay = true\n        this.appStore.uiStore.showAutoplayNotification()\n      }\n    })\n    this.mediaService.on('watch-rtt', (evt: any) => {\n      this._delay = evt.RTT\n    })\n    this.mediaService.on('user-published', (evt: any) => {\n      this.remoteUsersRenderer = this.mediaService.remoteUsersRenderer\n      console.log('sdkwrapper update user-pubilshed')\n    })\n    this.mediaService.on('user-unpublished', (evt: any) => {\n      this.remoteUsersRenderer = this.mediaService.remoteUsersRenderer\n    })\n    this.mediaService.on('network-quality', (evt: any) => {\n      let defaultQuality = 'unknown'\n\n      let downlinkNetworkQuality = +evt.downlinkNetworkQuality;\n      let uplinkNetworkQuality = +evt.uplinkNetworkQuality;\n      let qualityStr = defaultQuality\n      let value = Math.max(downlinkNetworkQuality, uplinkNetworkQuality)\n      qualityStr = networkQualityLevel[value]\n      // console.log('[web] network-quality value', value, qualityStr)\n      // if (downlinkNetworkQuality <= uplinkNetworkQuality) {\n      //   qualityStr = networkQualityLevel[downlinkNetworkQuality]\n      // } else {\n      //   qualityStr = networkQualityLevel[uplinkNetworkQuality]\n      // }\n      this.updateNetworkQuality(qualityStr || defaultQuality)\n      // console.log('network-quality', evt, qualityStr)\n    })\n    this.mediaService.on('connection-state-change', (evt: any) => {\n      console.log('connection-state-change', JSON.stringify(evt))\n    })\n  }\n\n  @observable\n  networkQuality: string = 'unknown'\n\n  @action\n  updateNetworkQuality(v: string) {\n    this.networkQuality = v\n  }\n\n  reset () {\n    this.remoteUsersRenderer = []\n    this.networkQuality = 'unknown'\n    this.autoplay = false\n  }\n\n  @observable\n  _microphoneTrack?: any = undefined;\n\n  @observable\n  _cameraRenderer?: LocalUserRenderer = undefined;\n\n  @observable\n  _screenVideoRenderer?: LocalUserRenderer = undefined;\n\n  @computed\n  get cameraRenderer(): LocalUserRenderer | undefined {\n    return this._cameraRenderer;\n  }\n  @computed\n  get screenVideoRenderer(): LocalUserRenderer | undefined {\n    return this._screenVideoRenderer;\n  }\n\n  @action\n  async openCamera() {\n\n  }\n\n  @action\n  async startWebSharing() {\n\n  }\n\n  @action\n  async stopWebSharing() {\n\n  }\n\n  @action\n  async stopNativeSharing() {\n\n  }\n\n  @action\n  async showScreenShareWindowWithItems() {\n\n  }\n\n  @action\n  async prepareScreenShare() {\n\n  }\n\n\n  @action\n  resetRoomState() {\n    this.remoteUsersRenderer = []\n    this.networkQuality = 'unknown'\n    this.autoplay = false\n    this._delay = 0\n  }\n}","import { EduRecordService } from './../../sdk/record/edu-record-service';\nimport { EduBoardService } from './../../sdk/board/edu-board-service';\nimport { DeviceStore } from './device';\nimport { UIStore } from './ui';\nimport { EduManager } from '@/sdk/education/manager';\nimport { EduUserService } from '@/sdk/education/user/edu-user-service';\nimport { BoardStore } from './board';\nimport AgoraRTC from 'agora-rtc-sdk-ng';\nimport { RoomStore } from './room';\nimport { RecordingStore } from './recording';\nimport AgoraRTM from 'agora-rtm-sdk';\nimport { ReplayStore } from './replay';\nimport { BreakoutRoomStore } from './breakout-room';\nimport { get } from 'lodash';\nimport { GlobalStorage } from '@/utils/custom-storage';\nimport { autorun, toJS, observable, action, computed, runInAction } from 'mobx';\nimport { MediaStore } from './media';\nimport { EduClassroomManager } from '@/sdk/education/room/edu-classroom-manager';\nimport { t } from '@/i18n';\nimport { EduCourseState, EduStream } from '@/sdk/education/interfaces';\nimport { LocalUserRenderer } from '@/sdk/education/core/media-service/renderer';\nimport { PrepareScreenShareParams } from '@/sdk/education/core/media-service/interfaces';\nimport { AgoraWebRtcWrapper } from '@/sdk/education/core/media-service/web';\nimport { AgoraElectronRTCWrapper } from '@/sdk/education/core/media-service/electron';\n\n// AgoraRTC.setLogLevel(4)\n\nconst APP_ID: string = process.env.REACT_APP_AGORA_APP_ID as string;\nconsole.log(\"APP_ID \", APP_ID)\nconst CUSTOMER_ID: string = process.env.REACT_APP_AGORA_CUSTOMER_ID as string;\nconst CUSTOMER_CERTIFICATE: string = process.env.REACT_APP_AGORA_CUSTOMER_CERTIFICATE as string;\nconst platform = process.env.REACT_APP_RUNTIME_PLATFORM as string;\n\nexport class AppStore {\n\n  uiStore!: UIStore;\n  boardStore!: BoardStore;\n  roomStore!: RoomStore;\n  deviceStore!: DeviceStore;\n  recordingStore!: RecordingStore;\n  breakoutRoomStore!: BreakoutRoomStore;\n  replayStore!: ReplayStore;\n  mediaStore!: MediaStore;\n\n  eduManager!: EduManager;\n\n  userService?: EduUserService;\n\n  _boardService?: EduBoardService;\n  _recordService?: EduRecordService;\n\n  get boardService() {\n    return this._boardService as EduBoardService;\n  }\n\n  get recordService() {\n    return this._recordService as EduRecordService;\n  }\n\n  get mediaService() {\n    return this.eduManager.mediaService\n  }\n\n  get isWeb(): boolean {\n    return this.mediaService.sdkWrapper instanceof AgoraWebRtcWrapper\n  }\n\n  get isElectron(): boolean {\n    return this.mediaService.sdkWrapper instanceof AgoraElectronRTCWrapper\n  }\n\n  @observable\n  roomInfo: Record<string, string> = {}\n\n  private load() {\n    EduManager.enableDebugLog(true);\n    const storage = GlobalStorage.read(\"room\")\n    if (storage) {\n      this.roomInfo = storage.roomInfo\n    }\n  }\n\n  constructor() {\n    this.load()\n    autorun(() => {\n      const data = toJS(this)\n      GlobalStorage.save(\"room\", {\n        roomInfo: data.roomInfo,\n      })\n    })\n    if (platform === 'electron') {\n      this.eduManager = new EduManager({\n        appId: APP_ID,\n        customerId: CUSTOMER_ID,\n        platform: 'electron',\n        customerCertificate: CUSTOMER_CERTIFICATE,\n        logLevel: '' as any,\n        logDirectoryPath: '',\n        // @ts-ignore\n        agoraRtc: window.rtcEngine,\n        agoraRtm: AgoraRTM,\n      })\n    } else {\n      this.eduManager = new EduManager({\n        appId: APP_ID,\n        customerId: CUSTOMER_ID,\n        platform: 'web',\n        customerCertificate: CUSTOMER_CERTIFICATE,\n        logLevel: '' as any,\n        logDirectoryPath: '',\n        agoraRtc: AgoraRTC,\n        agoraRtm: AgoraRTM,\n        codec: 'vp8'\n      })\n    }\n\n    this.mediaStore = new MediaStore(this)\n    this.uiStore = new UIStore(this)\n    this.boardStore = new BoardStore(this)\n    this.recordingStore = new RecordingStore(this)\n    this.roomStore = new RoomStore(this)\n    this.deviceStore = new DeviceStore(this)\n    this.replayStore = new ReplayStore(this)\n    this.breakoutRoomStore = new BreakoutRoomStore(this)\n\n    this._screenVideoRenderer = undefined\n  }\n\n  get userRole (): string {\n    return get(this, 'roomInfo.userRole')\n  }\n\n  get roomType (): number {\n    return +get(this, 'roomInfo.roomType', -1)\n  }\n\n  @action\n  resetRoomInfo() {\n    this.roomInfo = {}\n  }\n\n  get userUuid(): string {\n    return `${this.roomInfo.userName}${this.roomInfo.userRole}`\n  }\n\n  roomManager?: EduClassroomManager = undefined\n\n  groupClassroomManager?: EduClassroomManager = undefined\n\n  @observable\n  delay: number = 0\n\n  @observable\n  time: number = 0\n\n  @observable\n  cpuRate: number = 0\n\n  @action\n  updateCpuRate(rate: number) {\n    this.cpuRate = rate\n  }\n\n  updateTime(startTime: number) {\n    if (startTime) {\n      const preState = Math.abs(Date.now() - startTime)\n      this.time = preState\n    }\n  }\n  \n\n  resetTime() {\n    this.time = 0\n  }\n\n  // @observable\n  // classState: boolean = false\n\n  // @action\n  // async startClass() {\n  //   try {\n  //     await this.roomManager?.userService.updateCourseState(EduCourseState.EduCourseStateStart)\n  //     // this.classState = true\n  //     this.uiStore.addToast(t('toast.course_started_successfully'))\n  //   } catch (err) {\n  //     console.log(err)\n  //     this.uiStore.addToast(t('toast.setting_start_failed'))\n  //   }\n  // }\n\n  // @action\n  // async stopClass() {\n  //   try {\n  //     await this.roomManager?.userService.updateCourseState(EduCourseState.EduCourseStateStop)\n  //     // this.classState = false\n  //     this.uiStore.addToast(t('toast.the_course_ends_successfully'))\n  //   } catch (err) {\n  //     console.log(err)\n  //     this.uiStore.addToast(t('toast.setting_ended_failed'))\n  //   }\n  // }\n\n  @action\n  setRoomInfo(payload: any) {\n    this.roomInfo = ({\n      roomName: payload.roomName,\n      roomType: payload.roomType,\n      userName: payload.userName,\n      userRole: payload.role,\n      userUuid: `${payload.userName}${payload.role}`\n    })\n  }\n\n  @observable\n  waitingShare: boolean = false\n\n  @observable\n  _screenVideoRenderer?: LocalUserRenderer = undefined;\n\n  @observable\n  _screenEduStream?: EduStream = undefined\n\n  @observable\n  sharing: boolean = false\n\n  @observable\n  customScreenShareWindowVisible: boolean = false\n  \n  @observable\n  customScreenShareItems: any[] = []\n\n  @action\n  async stopWebSharing() {\n    try {\n      this.waitingShare = true\n      if (this._screenVideoRenderer) {\n        await this.mediaService.stopScreenShare()\n        this.mediaService.screenRenderer && this.mediaService.screenRenderer.stop()\n        this._screenVideoRenderer = undefined\n      }\n      if (this._screenEduStream) {\n        await this.roomManager?.userService.stopShareScreen()\n        this._screenEduStream = undefined\n      }\n      this.sharing = false\n    } catch(err) {\n      this.uiStore.addToast(t('toast.failed_to_end_screen_sharing') + `${err.msg}`)\n    } finally {\n      this.waitingShare = false\n    }\n  }\n\n  @action\n  async startWebSharing() {\n    try {\n      this.waitingShare = true\n      await this.mediaService.prepareScreenShare({\n        shareAudio: 'auto',\n        encoderConfig: '720p'\n      })\n      await this.roomManager?.userService.startShareScreen()\n      const streamUuid = this.roomManager!.userService.screenStream.stream.streamUuid\n      const params: any = {\n        channel: this.roomManager?.roomUuid,\n        uid: +streamUuid,\n        token: this.roomManager?.userService.screenStream.token,\n      }\n      console.log(\"screenStreamData params >>>>>> \", JSON.stringify(params))\n      console.log(\"screenStreamData >>>>>> \", JSON.stringify(this.roomManager?.userService.screenStream))\n\n      await this.mediaService.startScreenShare({\n        params\n      })\n      this._screenEduStream = this.roomManager?.userService.screenStream.stream\n      this._screenVideoRenderer = this.mediaService.screenRenderer\n      this.sharing = true\n    } catch (err) {\n      if (this.mediaService.screenRenderer) {\n        this.mediaService.screenRenderer.stop()\n        this.mediaService.screenRenderer = undefined\n        this._screenVideoRenderer = undefined\n        this.uiStore.addToast(t('toast.failed_to_initiate_screen_sharing_to_remote') + `${err.msg}`)\n      } else {\n        this.uiStore.addToast(t('toast.failed_to_enable_screen_sharing') + `${err.msg}`)\n      }\n      console.warn(err)\n    } finally {\n      this.waitingShare = false\n    }\n  }\n\n  async startOrStopSharing() {\n    if (this.isWeb) {\n      if (this.sharing) {\n        await this.stopWebSharing()\n      } else {\n        await this.startWebSharing()\n      }\n    }\n\n    if (this.isElectron) {\n      if (this.sharing) {\n        await this.stopNativeSharing()\n      } else {\n        await this.showScreenShareWindowWithItems()\n      }\n    }\n  }\n\n  @action\n  showScreenShareWindowWithItems () {\n    if (this.isElectron) {\n      this.mediaService.prepareScreenShare().then((items: any) => {\n        runInAction(() => {\n          this.customScreenShareWindowVisible = true\n          this.customScreenShareItems = items\n        })\n      }).catch(err => {\n        console.warn('show screen share window with items', err)\n      })\n    }\n  }\n\n  @action\n  async resetWebPrepareScreen() {\n    if (this.mediaService.screenRenderer) {\n      this.mediaService.screenRenderer\n      this._screenVideoRenderer = undefined\n    }\n  }\n\n\n  @action\n  async prepareScreenShare(params: PrepareScreenShareParams = {}) {\n    const res = await this.mediaService.prepareScreenShare(params)\n    if (this.mediaService.screenRenderer) {\n      this._screenVideoRenderer = this.mediaService.screenRenderer\n    }\n  }\n\n  @computed\n  get screenEduStream(): EduStream {\n    return this._screenEduStream as EduStream\n  }\n\n  @action\n  async stopNativeSharing() {\n    if (this.screenEduStream) {\n      await this.roomManager?.userService.stopShareScreen()\n      this._screenEduStream = undefined\n    }\n    if (this._screenVideoRenderer) {\n      await this.mediaService.stopScreenShare()\n      this._screenVideoRenderer && this._screenVideoRenderer.stop()\n      this._screenVideoRenderer = undefined\n    }\n    if (this.customScreenShareWindowVisible) {\n      this.customScreenShareWindowVisible = false\n    }\n    this.customScreenShareItems = []\n    this.sharing = false\n  }\n\n  @action\n  async startNativeScreenShareBy(windowId: number) {\n    try {\n      this.waitingShare = true\n      await this.roomManager?.userService.startShareScreen()\n      const streamUuid = this.roomManager!.userService.screenStream.stream.streamUuid\n      const params: any = {\n        channel: this.roomManager?.roomUuid,\n        uid: +streamUuid,\n        token: this.roomManager?.userService.screenStream.token,\n      }\n      await this.mediaService.startScreenShare({\n        windowId: windowId as number,\n        params\n      })\n      if (!this.mediaService.screenRenderer) {\n        this.uiStore.addToast(t('create_screen_share_failed'))\n        return\n      } else {\n        this._screenVideoRenderer = this.mediaService.screenRenderer\n      }\n      this.removeScreenShareWindow()\n      this.sharing = true\n    } catch (err) {\n      console.warn(err)\n      // if (!this.mediaService.screenRenderer) {\n      //   await this.mediaService.stopScreenShare()\n      // }\n      this.waitingShare = false\n      this.uiStore.addToast(t('toast.failed_to_initiate_screen_sharing') + `${err.msg}`)\n      // throw err\n    }\n  }\n\n  @action\n  removeScreenShareWindow () {\n    if (this.isElectron) {\n      this.customScreenShareWindowVisible = false\n      this.customScreenShareItems = []\n    }\n  }\n\n  @action\n  reset() {\n    this._boardService = undefined\n    this._recordService = undefined\n    // this.roomInfo = {}\n    this.resetWebPrepareScreen()\n    this.removeScreenShareWindow()\n  }\n}\n\nexport { UIStore } from './ui';\nexport { BoardStore } from './board';\nexport { RoomStore } from './room';\nexport { DeviceStore } from './device';\nexport { BreakoutRoomStore } from './breakout-room';\nexport { ReplayStore } from './replay';\nexport { RecordingStore } from './recording';","import React, { useState } from 'react';\nimport { Theme, FormControl, Tooltip } from '@material-ui/core';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {CustomButton} from '@/components/custom-button';\nimport { RoleRadio } from '@/components/role-radio';\nimport {CustomIcon} from '@/components/icon';\nimport {FormInput} from '@/components/form-input';\nimport {FormSelect} from '@/components/form-select';\nimport {LangSelect} from '@/components/lang-select';\nimport {useHistory} from 'react-router-dom';\n// import {GithubIcon} from '@/components/github-icon';\nimport { t } from '../i18n';\nimport { useUIStore, useRoomStore, useAppStore } from '@/hooks';\nimport { UIStore } from '@/stores/app';\nimport { GlobalStorage } from '@/utils/custom-storage';\nimport { EduManager } from '@/sdk/education/manager';\nimport {isElectron} from '@/utils/platform';\n\nconst useStyles = makeStyles ((theme: Theme) => ({\n  formControl: {\n    minWidth: '240px',\n    maxWidth: '240px',\n  }\n}));\n\ntype SessionInfo = {\n  roomName: string\n  roomType: number\n  userName: string\n  role: string\n}\n\nconst defaultState: SessionInfo = {\n  roomName: '',\n  roomType: 0,\n  role: '',\n  userName: '',\n}\n\nconst roomTypes = isElectron ?  UIStore.roomTypes.filter((it: any) => it.value !== 3) : UIStore.roomTypes\n\n\nfunction HomePage() {\n  document.title = t(`home.short_title.title`)\n\n  const classes = useStyles();\n\n  const history = useHistory();\n\n  const uiStore = useUIStore();\n\n  const appStore = useAppStore();\n\n  const handleSetting = (evt: any) => {\n    history.push({pathname: '/setting'})\n  }\n\n  const [lock, setLock] = useState<boolean>(false);\n\n  const handleUpload = async (evt: any) => {\n    try {\n      setLock(true)\n      const id = await EduManager.uploadLog('0')\n      uiStore.showDialog({\n        type: 'feedLog',\n        message: `id: ${id}`\n      })\n      setLock(false)\n    } catch (err) {\n      uiStore.addToast(t('upload_log_failed'))\n      setLock(false)\n    }\n  }\n\n  const [session, setSessionInfo] = useState<SessionInfo>(defaultState);\n\n  const [required, setRequired] = useState<any>({} as any);\n\n  const handleSubmit = () => {\n    if (!session.roomName) {\n      setRequired({...required, roomName: t('home.missing_room_name')});\n      return;\n    }\n\n    if (!session.userName) {\n      setRequired({...required, userName: t('home.missing_your_name')});\n      return;\n    }\n\n    if (!session.role) {\n      setRequired({...required, role: t('home.missing_role')});\n      return;\n    }\n    \n    if (!roomTypes[session.roomType]) return;\n    appStore.setRoomInfo({\n      ...session,\n      roomType: roomTypes[session.roomType].value\n    })\n    const path = roomTypes[session.roomType].path\n\n    if (session.role === 'assistant') {\n      history.push(`/breakout-class/assistant/courses`)\n    } else {\n      history.push(`/classroom/${path}`)\n    }\n      // history.push(`/classroom/${path}`)\n  }\n\n  return (\n    <div className={`flex-container ${uiStore.isElectron ? 'draggable' : 'home-cover-web' }`}>\n      {uiStore.isElectron ? null : \n      <div className=\"web-menu\">\n        <div className=\"web-menu-container\">\n          <div className=\"short-title\">\n            <span className=\"title\">{t('home.short_title.title')}</span>\n            {/* <span className=\"subtitle\">{t('home.short_title.subtitle')}</span> */}\n            <span className=\"build-version\">{t(\"build_version\")}</span>\n          </div>\n          <div className=\"setting-container\">\n            <div className=\"flex-row\">\n              <Tooltip title={t(\"icon.upload-log\")} placement=\"top\">\n                <span>\n                  <CustomIcon className={lock ? \"icon-loading\" : \"icon-upload\"} onClick={handleUpload}></CustomIcon>\n                </span>\n              </Tooltip>\n              <Tooltip title={t(\"icon.setting\")} placement=\"top\">\n                <span>\n                  <CustomIcon className=\"icon-setting\" onClick={handleSetting}/>\n                </span>\n              </Tooltip>\n            </div>\n              <LangSelect\n                value={uiStore.language.match(/^zh/) ? 0 : 1}\n                onChange={(evt: any) => {\n                  const value = evt.target.value;\n                  window.location.reload()\n                  if (value === 0) {\n                    uiStore.setLanguage('zh-CN');\n                  } else {\n                    uiStore.setLanguage('en');\n                  }\n                }}\n                items={UIStore.languages}>\n              </LangSelect>\n          </div>\n        </div>\n      </div>\n      }\n      <div className=\"custom-card\">\n        {/* {!uiStore.isElectron ? <GithubIcon /> : null} */}\n        <div className=\"flex-item cover\">\n          {uiStore.isElectron ? \n          <>\n          <div className={`short-title ${GlobalStorage.getLanguage()}`}>\n            <span className=\"title\">{t('home.short_title.title')}</span>\n            {/* <span className=\"subtitle\">{t('home.short_title.subtitle')}</span> */}\n          </div>\n          <div className={`cover-placeholder ${t('home.cover_class')}`}></div>\n          <div className='build-version'>{t(\"build_version\")}</div>\n          </>\n          : <div className={`cover-placeholder-web ${t('home.cover_class')}`}></div>\n          }\n        </div>\n        <div className=\"flex-item card\">\n          <div className=\"position-top card-menu\">\n            {uiStore.isElectron && \n            <>\n                <Tooltip title={t(\"icon.setting\")} placement=\"bottom\">\n                  <span>\n                    <CustomIcon className=\"icon-setting\" onClick={handleSetting}/>\n                  </span>\n                </Tooltip>\n                <div className=\"icon-container\">\n                  <CustomIcon className=\"icon-minimum\" onClick={() => {\n                    uiStore.windowMinimum()\n                  }}/>\n                  <CustomIcon className=\"icon-close\" onClick={() => {\n                    uiStore.windowClose()\n                  }}/>\n                </div>\n            </>\n            }\n          </div>\n          <div className=\"position-content flex-direction-column\">\n            <FormControl className={classes.formControl}>\n              <FormInput\n                alphabetical={true}\n                Label={t('home.room_name')}\n                value={session.roomName}\n                onChange={\n                  (val: string) => {\n                    setSessionInfo({\n                      ...session,\n                      roomName: val\n                    });\n                  }\n                }\n                requiredText={required.roomName}\n              />\n            </FormControl>\n            <FormControl className={classes.formControl}>\n              <FormInput\n                alphabetical={true}\n                Label={t('home.nickname')}\n                value={session.userName}\n                onChange={(val: string) => {\n                  setSessionInfo({\n                    ...session,\n                    userName: val\n                  });\n                }}\n                requiredText={required.userName}\n              />\n            </FormControl>\n            <FormControl className={classes.formControl}>\n              <FormSelect \n                Label={t('home.room_type')}\n                value={session.roomType}\n                onChange={(evt: any) => {\n                  setSessionInfo({\n                    ...session,\n                    roomType: evt.target.value\n                  });\n                }}\n                items={roomTypes\n                  .map((it: any) => ({\n                  value: it.value,\n                  text: t(`${it.text}`),\n                  path: it.path\n                }))}\n              />\n            </FormControl>\n            <FormControl className={classes.formControl}>\n              <RoleRadio value={session.role} type={session.roomType} onChange={(evt: any) => {\n                 setSessionInfo({\n                   ...session,\n                   role: evt.target.value\n                 });\n              }} requiredText={required.role}></RoleRadio>\n            </FormControl>\n            <CustomButton name={t('home.room_join')} onClick={handleSubmit}/>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default React.memo(HomePage);","import React, { useEffect, useRef } from 'react'\nimport { IMediaRenderer } from '@/sdk/education/core/media-service/renderer'\n\ninterface RendererPlayerProps {\n  preview?: boolean\n  track?: IMediaRenderer\n  id?: string\n  className?: string\n  fitMode?: boolean\n}\n\nexport const RendererPlayer = (props: RendererPlayerProps) => {\n\n  const ref = useRef<HTMLDivElement | null>(null)\n\n  useEffect(() => {\n    if (ref.current && props.track) {\n      props.track.play && props.track.play(ref.current, props.fitMode)\n    }\n    return () => props.track && props.track.stop && props.track.stop(props.preview)\n  }, [ref, props.track, props.fitMode, props.preview])\n\n\n  return (\n    <div key={props.track && props.track.videoTrack ? props.track.videoTrack.getTrackId() : ''} id={props.id ? props.id : ''} className={props.className} ref={ref}>\n    </div>\n  )\n}","import React, { useEffect } from 'react'\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport { observer } from \"mobx-react\";\nimport { CustomButton } from '@/components/custom-button';\nimport { useDeviceStore, useUIStore } from '@/hooks';\nimport { RendererPlayer } from '@/components/media-player';\nimport { RoomStore } from '@/stores/app';\nimport { t } from '@/i18n';\n\nexport const VideoPage = observer((props: any) => {\n\n  const uiStore = useUIStore()\n  const deviceStore = useDeviceStore()\n\n  const handleChangeCamera = (evt: any) => {\n    deviceStore.changeTestCamera(evt.target.value)\n  }\n\n  const handleChangeResolutions = (evt: any) => {\n    deviceStore.changeTestResolution(evt.target.value)\n  }\n\n  useEffect(() => {\n    deviceStore.init({video: true})\n    deviceStore.openTestCamera()\n    return () => {\n      deviceStore.closeTestCamera()\n    }\n  }, [deviceStore])\n  \n  const onOk = () => {\n    deviceStore.setCameraTestResult('ok')\n    deviceStore.setActiveItem('audio')\n  }\n\n  const onNo = () => {\n    deviceStore.setCameraTestResult('error')\n    deviceStore.setActiveItem('audio')\n  }\n\n  return (\n    <div className=\"device-page-container\">\n      <div className=\"items-columns space-between\">\n        <div className=\"items-row camera\">\n          <InputLabel id=\"camera\">Camera</InputLabel>\n          <Select\n            labelId=\"camera\"\n            id=\"camera\"\n            value={deviceStore.cameraId}\n            onChange={handleChangeCamera}\n          >\n            {deviceStore.cameraList.map((cameraProp: any, idx: number) => (\n              <MenuItem key={idx} value={cameraProp.deviceId}>{cameraProp.label}</MenuItem>\n            ))}\n          </Select>\n        </div>\n        <div className=\"items-row resolution\">\n          <InputLabel id=\"resolutions\">Resolutions</InputLabel>\n          <Select\n            labelId=\"resolutions\"\n            id=\"resolutions\"\n            value={deviceStore.resolution}\n            onChange={handleChangeResolutions}\n          >\n            {RoomStore.resolutions.map((resolution: any, idx: number) => (\n              <MenuItem key={idx} value={resolution.value}>{resolution.name}</MenuItem>\n            ))}\n          </Select>\n        </div>\n      </div>\n      <RendererPlayer\n        key={deviceStore.cameraId}\n        id=\"stream-player\"\n        track={deviceStore.cameraRenderer}\n        preview={true}\n      />\n      <span style={{textAlign: 'center'}}>{t('device.is_look')}</span>\n      <div className=\"footer\">\n        <div className=\"button-group\">\n          <div className=\"items-row\">\n            <CustomButton onClick={onNo} className=\"unconfirm custom-button\" name={t('device.no')} />\n            <CustomButton onClick={onOk} name={t('device.yes')} />\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n})","import React from 'react';\nimport {CustomIcon} from '@/components/icon';\nimport {makeStyles} from '@material-ui/core/styles';\n\nimport './index.scss';\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    marginTop: '8px',\n  },\n  sliderClass: {\n    color: '#44A2FC',\n    minWidth: '210px',\n    marginLeft: '6px',\n  },\n  sliderRailClass: {\n    height: '12px',\n    color: '#44A2FC'\n  },\n  sliderMarkClass: {\n    height: '12px',\n    color: '#CCCCCC'\n  }\n});\n\nfunction CustomSlider(props: any) {\n\n  const totalVolumes = props.totalVolumes\n\n  return (\n    <div className=\"voice-sliders\">\n      {[...Array(totalVolumes)].map((e: any, key: number) => <span className={props.volume > key ? \"active\" : \"\"} key={key}></span>)}\n    </div>\n  )\n}\n\nconst defaultTotalVolumes = 52;\n\nfunction VoiceSlider(props: any) {\n  const classes = useStyles(props);\n  const volume = props.volume;\n\n  const totalVolumes = props.totalVolumes ? props.totalVolumes : defaultTotalVolumes;\n\n  return (\n    <div className={classes.root}>\n      {!props.hideIcon ? <CustomIcon className=\"icon-voice\" disable /> : null}\n      <CustomSlider totalVolumes={totalVolumes} volume={volume * totalVolumes} className={classes.sliderClass} />\n    </div>\n  );\n}\n\nexport default function (props: any) {\n  return (\n    <div className=\"volume-container\">\n      <VoiceSlider\n        totalVolumes={props.totalVolumes}\n        hideIcon={props.hideIcon}\n        volume={props.volume}\n      />\n    </div>\n  )\n}","import React, { useEffect } from 'react'\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport { observer } from \"mobx-react\";\nimport VoiceVolume from '@/components/volume/voice';\nimport { useDeviceStore, useUIStore } from '@/hooks';\nimport { CustomButton } from '@/components/custom-button';\nimport { t } from '@/i18n';\n\nexport const AudioPage = observer((props: any) => {\n\n  const deviceStore = useDeviceStore()\n\n  const uiStore = useUIStore()\n\n  const handleChangeMicrophone = (evt: any) => {\n    deviceStore.changeTestMicrophone(evt.target.value)\n  }\n\n  useEffect(() => {\n    deviceStore.init({audio: true})\n    deviceStore.openTestMicrophone()\n    return () => {\n      deviceStore.closeTestMicrophone()\n    }\n  }, [deviceStore])\n\n  const onOk = () => {\n    deviceStore.setMicrophoneTestResult('ok')\n    deviceStore.setActiveItem('speaker')\n  }\n\n  const onNo = () => {\n    deviceStore.setMicrophoneTestResult('error')\n    deviceStore.setActiveItem('speaker')\n  }\n\n  return (\n    <div className=\"device-page-container\">\n      <div>\n        <div className=\"items-row microphone\">\n          <InputLabel id=\"microphone\">Microphone</InputLabel>\n          <Select\n            labelId=\"microphone\"\n            id=\"microphone\"\n            value={deviceStore.microphoneId}\n            onChange={handleChangeMicrophone}\n          >\n            {deviceStore.microphoneList.map((microphoneProp: any, idx: number) => (\n              <MenuItem key={idx} value={microphoneProp.deviceId}>{microphoneProp.label}</MenuItem>\n            ))}\n          </Select>\n        </div>\n        <div className=\"items-row\">\n          <div>\n            <VoiceVolume totalVolumes={110} hideIcon={true} volume={deviceStore.totalVolume} />\n          </div>\n        </div>\n      </div>\n      <div>\n        <div id=\"microphone-player\"></div>\n      </div>\n      <div className=\"footer\">\n        <div className={deviceStore.microphoneList.length > 0 ? \"microphone-icon-large\" : \"microphone-icon-large-error\"}></div>\n          <span>{t('device.test_microphone')}</span>\n        <div className=\"button-group\">\n          <div className=\"items-row\">\n            <CustomButton onClick={onNo} className=\"unconfirm custom-button\" name=\"否\"></CustomButton>\n            <CustomButton onClick={onOk} name=\"是\"></CustomButton>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n})","import React, {useEffect} from 'react';\nimport {CustomIcon} from '@/components/icon';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Slider from '@material-ui/core/Slider';\n\nimport './index.scss';\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    marginTop: '8px',\n  },\n  sliderClass: {\n    color: '#44A2FC',\n    minWidth: '210px',\n    marginLeft: '6px'\n  }\n});\n\ninterface SliderProps {\n  totalVolume?: number\n  volume: number\n  onChange: (volume: number) => void\n  hideIcon?: boolean\n  siderClassName?: string\n}\n\nexport default function ContinuousSlider(props: SliderProps) {\n  const classes = useStyles(props);\n  // const [value, setValue] = React.useState<number>(props.volume);\n\n  const handleChange = (event: any, newValue: any) => {\n    props.onChange(newValue)\n  };\n\n  // useEffect(() => {\n  //   props.onChange(value);\n  // }, [value]);\n\n  return (\n    <div className=\"volume-container\">\n      <div className={classes.root}>\n        {!props.hideIcon ? <CustomIcon className=\"icon-speaker\" disable/> : null}\n        <Slider className={props.siderClassName ? props.siderClassName : classes.sliderClass} value={props.volume} onChange={handleChange} aria-labelledby=\"continuous-slider\" />\n      </div>\n    </div>\n  );\n}","import React, { useState, useRef } from 'react'\nimport { observer } from \"mobx-react\";\nimport VoiceVolume from '@/components/volume/voice';\nimport SpeakerVolume from '@/components/volume/speaker';\nimport { useInterval } from 'react-use';\nimport {CustomButton} from '@/components/custom-button';\nimport { useDeviceStore, useUIStore } from '@/hooks';\nimport { t } from '@/i18n';\n\nexport const SpeakerPage = observer((props: any) => {\n\n  const deviceStore = useDeviceStore()\n  const uiStore = useUIStore()\n  const [volumeLevel, setVolumeLevel] = useState<number>(0);\n  const [audioTestisPlaying, setAudioTestisPlaying] = useState<boolean>(false);\n\n  const audio_url = 'https://webdemo.agora.io/test_audio.mp3'\n\n  const audioRef = useRef<HTMLAudioElement | null>(null)\n\n  useInterval(() => {\n    if (audioRef.current) {\n      if (audioTestisPlaying) {\n        const volume = audioRef.current.volume\n        setVolumeLevel(volume)\n      } else {\n        setVolumeLevel(0)\n      }\n    }\n  }, 300);\n\n  const stopPlay = (current: HTMLAudioElement) => {\n    if (current) {\n      current.pause()\n      current.currentTime = 0\n    }\n  }\n\n  const handleClick = () => {\n    if (audioRef.current) {\n      if (audioTestisPlaying) {\n        stopPlay(audioRef.current)\n        setAudioTestisPlaying(false)\n      } else {\n        audioRef.current.volume = deviceStore.playbackVolume / 100\n        audioRef.current.play()\n        setAudioTestisPlaying(true)\n      }\n    }\n  }\n\n  const changeSpeakerVolume = (volume: any) => {\n    if (audioRef.current) {\n      const audioVolume = volume / 100;\n      audioRef.current.volume = audioVolume;\n    }\n    deviceStore.changePlaybackVolume(volume);\n  };\n\n  const onOk = () => {\n    if (audioRef.current) {\n      stopPlay(audioRef.current)\n    }\n    deviceStore.setSpeakerTestResult('ok')\n    deviceStore.setActiveItem('test')\n  }\n\n  const onNo = () => {\n    if (audioRef.current) {\n      stopPlay(audioRef.current)\n    }\n    deviceStore.setSpeakerTestResult('error')\n    deviceStore.setActiveItem('test')\n  }\n\n  return (\n    <div className=\"device-page-container\">\n      <div>\n        <div className=\"items-row\">\n          <div>\n            <VoiceVolume totalVolumes={110} hideIcon={true} volume={volumeLevel} />\n          </div>\n          <div>\n            <SpeakerVolume\n              totalVolume={255}\n              hideIcon={true}\n              siderClassName={'maximum-sider'}\n              volume={deviceStore.playbackVolume}\n              onChange={changeSpeakerVolume}\n            />\n            音量: {deviceStore.playbackVolume}\n          </div>\n        </div>\n      </div>\n      <div className=\"footer\">\n        <div className={audioTestisPlaying ? \"pause-icon\" : \"play-icon\"}\n          onClick={handleClick}>\n          <audio id=\"audio\" src={audio_url} ref={audioRef} />\n        </div>\n        <span className=\"margin-top-30\">{audioTestisPlaying ? t('device.is_hear'): t('device.click_play')}</span>\n        {audioTestisPlaying ? \n        <div className=\"button-group\">\n          <div className=\"items-row\">\n            <CustomButton onClick={onNo} className=\"unconfirm custom-button\" name={t('device.no')} />\n            <CustomButton onClick={onOk} name={t('device.yes')} />\n          </div>\n        </div> : null}\n      </div>\n    </div>\n  )\n})","import React from 'react'\nimport { observer } from 'mobx-react'\nimport { useUIStore, useDeviceStore } from '@/hooks'\nimport { CustomButton } from '@/components/custom-button'\nimport { useLocation, useHistory } from 'react-router-dom'\nimport { t } from '@/i18n';\n\nexport const TestReportPage = observer(() => {\n\n  const history = useHistory()\n  const location = useLocation()\n  const uiStore = useUIStore()\n  const deviceStore = useDeviceStore()\n  \n  const onExit = () => {\n    deviceStore.setActiveItem('video')\n    if (location.pathname === '/setting') {\n      history.push('/')\n    } else {\n      deviceStore.hideSetting()\n    }\n  }\n\n  const onTestAgain = () => {\n    deviceStore.setActiveItem('video')\n  }\n\n  return (\n    <div className=\"device-page-container\">\n      <div className=\"test-box\">\n        <div className=\"test-item\">\n          <div className=\"camera-icon-test\"></div>\n          <div className=\"text\">\n            <span>{t('device.camera')}:</span>\n            <div className={deviceStore.cameraTestResult === 'ok' ? \"icon-success-test\" : \"icon-error-test\"}></div>\n            <span>{deviceStore.cameraLabel}</span>\n          </div>\n        </div>\n        <div className=\"test-item\">\n          <div className=\"microphone-icon-test\"></div>\n          <div className=\"text\">\n            <span>{t('device.microphone')}:</span>\n            <div className={deviceStore.microphoneTestResult === 'ok' ? \"icon-success-test\" : \"icon-error-test\"}></div>\n            <span>{deviceStore.microphoneLabel}</span>\n          </div>\n        </div>\n        <div className=\"test-item\">\n          <div className=\"speaker-icon-test\"></div>\n          <div className=\"text\">\n            <span>{t('device.speaker')}:</span>\n            <div className={deviceStore.speakerTestResult === 'ok' ? \"icon-success-test\" : \"icon-error-test\"}></div>\n            <span>{deviceStore.speakerLabel}</span>\n          </div>\n        </div>\n      </div>\n      <div className=\"footer\">\n        <div className=\"button-group\">\n          <div className=\"items-row\">\n            <CustomButton  onClick={onTestAgain} className=\"unconfirm custom-button\" name={t('device.test_again')} />\n            <CustomButton  onClick={onExit} name={t('device.close')} />\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n})","import React from 'react';\nimport {VideoPage} from './video';\nimport {AudioPage} from './audio';\nimport {SpeakerPage} from './speaker';\nimport './index.scss';\nimport { TestReportPage } from './test-report';\nimport { observer } from 'mobx-react';\nimport { useUIStore, useDeviceStore } from '@/hooks';\nimport { Tooltip } from '@material-ui/core';\nimport {CustomIcon} from '@/components/icon';\nimport { t } from '@/i18n';\nimport {useHistory, useLocation} from 'react-router-dom';\n\ninterface DeviceMenuProps {\n  headerTitle: string\n  testReportTitle: string\n  cameraTitle: string\n  microphoneTitle: string\n  speakerTitle: string\n  active: string\n  onClick(name: string): void\n}\n\nexport const DeviceMenu: React.FC<any> = (props: DeviceMenuProps) => {\n  const title = props.active === 'test' ? props.testReportTitle : props.headerTitle\n\n  const onClick = (name: string) => {\n    props.onClick(name)\n  }\n  \n  return (\n    <div className=\"device-menu\">\n      <div className=\"header\">\n        {title}\n      </div>\n      {\n        props.active === 'test' ? null :\n        <>\n          <a onClick={() => {\n            onClick('video')\n          }} className={`item link-item ${props.active === 'video' ? 'active' : ''}`}>\n            <div className=\"camera-icon\"></div>\n            <div className=\"item-name\">\n              {props.cameraTitle}\n            </div>\n          </a>\n          <a onClick={() => {\n            onClick('audio')\n          }} className={`item link-item ${props.active === 'audio' ? 'active' : ''}`}>\n            <div className=\"microphone-icon\"></div>\n            <div className=\"item-name\">\n              {props.microphoneTitle}\n            </div>\n          </a>\n          <a onClick={() => {\n            onClick('speaker')\n          }} className={`item link-item ${props.active === 'speaker' ? 'active' : ''}`}>\n            <div className=\"speaker-icon\"></div>\n            <div className=\"item-name\">\n              {props.speakerTitle}\n            </div>\n          </a>\n        </>\n      }\n    </div>\n  )\n}\n\ntype DeviceViewsProps = {\n  active: string\n}\n\nexport const DeviceViews: React.FC<DeviceViewsProps> = (props) => {\n\n  const uiStore = useUIStore()\n\n  const deviceStore = useDeviceStore()\n\n  const location = useLocation()\n\n  const history = useHistory()\n\n  return (\n    <>\n      <div className=\"device-view\">\n        {uiStore.isWeb && \n        <div className=\"web-menu-position-top\">\n          <CustomIcon className=\"icon-close\" onClick={() => {\n            if (location.pathname === '/setting') {\n              history.push('/')\n            } else {\n              deviceStore.hideSetting()\n            }\n          }}/>\n        </div>\n        }\n        {uiStore.isElectron && <div className=\"electron-menu-position-top\">\n          <>\n              <div className=\"icon-container\">\n                <CustomIcon className=\"icon-minimum\" onClick={() => {\n                  uiStore.windowMinimum()\n                }}/>\n                <CustomIcon className=\"icon-close\" onClick={() => {\n                  history.push('/')\n                  // uiStore.windowClose()\n                }}/>\n              </div>\n          </>\n        </div>\n        }\n        {props.active === 'video' && <VideoPage />}\n        {props.active === 'audio' && <AudioPage />}\n        {props.active === 'speaker' && <SpeakerPage />}\n        {props.active === 'test' && <TestReportPage />}\n      </div>\n    </>\n  )\n}\n\nexport const DeviceDetect = (props: any) => {\n  return (\n    <div className={`${props.className ? props.className :''}`}>\n      <div className={`device-container`}>\n        <DeviceMenu\n          active={props.activeDeviceItem}\n          headerTitle={t('device.detect')}\n          cameraTitle={t('device.camera')}\n          microphoneTitle={t('device.microphone')}\n          speakerTitle={t('device.speaker')}\n          testReportTitle={t('device.test_report')}\n          onClick={props.onClick}\n        />\n        <DeviceViews active={props.activeDeviceItem}></DeviceViews>\n      </div>\n    </div>\n  )\n}\n\nexport const DeviceDetectPage = observer((props: any) => {\n  const deviceStore = useDeviceStore()\n  const uiStore = useUIStore()\n  return (\n    <div className={`flex-container ${uiStore.isElectron ? 'draggable' : 'home-cover-web'}`}>\n      <DeviceDetect\n        onClick={(name: string) => {\n          deviceStore.setActiveItem(name)\n        }}\n        activeDeviceItem={deviceStore.activeDeviceItem}\n      />\n    </div>\n  )\n})\n\nexport const DeviceDetectController = observer(() => {\n\n  const deviceStore = useDeviceStore()\n\n  return (\n    deviceStore.settingVisible ? \n      <DeviceDetect\n        onClick={(name: string) => {\n          deviceStore.setActiveItem(name)\n        }}\n        className={\"internal-card\"}\n        activeDeviceItem={deviceStore.activeDeviceItem}\n      /> : null\n  )\n})","import React, { useState } from 'react';\nimport { CustomIcon } from '@/components/icon';\nimport './nav.scss';\nimport { CustomButton } from '@/components/custom-button';\nimport * as moment from 'moment';\nimport { isElectron, platform } from '@/utils/platform';\n// import Log from '@/utils/LogUploader';\nimport { Tooltip } from '@material-ui/core';\nimport { useUIStore, useRoomStore, useAppStore, useMediaStore, useBreakoutRoomStore } from '@/hooks';\nimport { t } from '@/i18n';\nimport { observer } from 'mobx-react';\nimport { useLocation } from 'react-router-dom';\nimport { networkQualities as networkQualityIcon } from '@/stores/app/room'\nimport { EduManager } from '@/sdk/education/manager';\n\ninterface NavProps {\n  delay: string\n  network: string\n  cpu: string\n  role: string\n  roomName: string\n  time: number\n  classState: boolean\n}\n\nconst BreakoutStartClassButton = observer((props: any) => {\n\n  const breakoutRoomStore = useBreakoutRoomStore()\n\n  const classState = breakoutRoomStore.classState === 1\n\n  return (\n    <CustomButton className={`nav-button ${classState ? \"stop\" : \"start\"}`} name={classState ? t('nav.class_end') : t('nav.class_start')} onClick={async (evt: any) => {\n      if (!classState) {\n        await breakoutRoomStore.startClass()\n      } else {\n        await breakoutRoomStore.stopClass()\n      }\n    }} />\n  )\n})\n\nconst BasicStartClassButton = observer((props: any) => {\n  const roomStore = useRoomStore()\n\n  const classState = roomStore.classState === 1\n\n  return (\n    <CustomButton className={`nav-button ${classState ? \"stop\" : \"start\"}`} name={classState ? t('nav.class_end') : t('nav.class_start')} onClick={async (evt: any) => {\n      if (!classState) {\n        await roomStore.startClass()\n      } else {\n        await roomStore.stopClass()\n      }\n    }} />\n  )\n})\n\nconst StartClassButton = (props: any) => {\n  return (\n    props.isBreakout ? <BreakoutStartClassButton /> : <BasicStartClassButton />\n  )\n}\n\nconst BreakoutUploadButton = observer(() => {\n  \n  const uiStore = useUIStore()\n  const breakoutRoomStore = useBreakoutRoomStore()\n\n  const [lock, setLock] = useState<boolean>(false)\n\n  const handleUpload = async () => {\n    try {\n      setLock(true)\n      const id = await EduManager.uploadLog(breakoutRoomStore.roomUuid)\n      uiStore.showDialog({\n        type: 'feedLog',\n        message: `id: ${id}`\n      })\n      setLock(false)\n    } catch (err) {\n      uiStore.addToast(t('upload_log_failed'))\n      setLock(false)\n    }\n  }\n\n  return (\n    <Tooltip title={t(\"icon.upload-log\")} placement=\"bottom\">\n      <span>\n        <CustomIcon className={lock ? \"icon-loading\" : \"icon-upload\"}\n          onClick={async (evt: any) => {\n            await handleUpload()\n          }}>\n        </CustomIcon>\n      </span>\n    </Tooltip>\n  )\n})\n\nconst BasicUploadButton = observer(() => {\n\n  const roomStore = useRoomStore()\n  const uiStore = useUIStore()\n\n  const [lock, setLock] = useState<boolean>(false)\n\n  const handleUpload = async () => {\n    try {\n      setLock(true)\n      const id = await EduManager.uploadLog(roomStore.roomUuid)\n      uiStore.showDialog({\n        type: 'feedLog',\n        message: `id: ${id}`\n      })\n      setLock(false)\n    } catch (err) {\n      uiStore.addToast(t('upload_log_failed'))\n      setLock(false)\n    }\n  }\n\n  return (\n    <Tooltip title={t(\"icon.upload-log\")} placement=\"bottom\">\n      <span>\n        <CustomIcon className={lock ? \"icon-loading\" : \"icon-upload\"}\n          onClick={async (evt: any) => {\n          await handleUpload()\n          }}>\n        </CustomIcon>\n      </span>\n    </Tooltip>\n  )\n})\n\nconst UploadButton = (props: any) => {\n  return (\n    props.isBreakout ? <BreakoutUploadButton /> : <BasicUploadButton />\n  )\n}\n\nexport const Nav = observer((props: any) => {\n  const uiStore = useUIStore();\n\n  const appStore = useAppStore();\n\n  const mediaStore = useMediaStore();\n\n  const location = useLocation()\n\n  const role = appStore.roomInfo.userRole\n  const roomName = appStore.roomInfo.roomName\n\n  const delay = mediaStore.delay\n  const time = appStore.time\n  const network = mediaStore.networkQuality\n  const cpu = appStore.cpuRate\n\n  const isCourses = location.pathname.match(/courses/)\n\n  const isBreakout = location.pathname.match(/breakout/)\n\n  return (\n    <>\n      <div className={`nav-container ${isElectron ? 'draggable' : ''}`}>\n        <div className=\"class-title\">\n          <span className=\"room-name\">{roomName}</span>\n          {role === 'teacher' ?\n            <StartClassButton isBreakout={isBreakout} /> : null}\n        </div>\n        <div className=\"network-state\">\n          <div>\n            {\n              !isCourses ?\n                <div className=\"nav-information\">\n                  <span>\n                    {uiStore.isWeb ? <span className=\"net-field\">{t('nav.delay')}<span className=\"net-field-value\">{delay}</span></span> : null}\n                  </span>\n                  {/* <span className=\"net-field\">Packet Loss Rate: <span className=\"net-field-value\">{lossPacket}</span></span> */}\n                  <span className=\"net-field net-field-container\">\n                    {t('nav.network')}\n                    <span className={`net-field-value ${networkQualityIcon[network]}`} style={{ marginLeft: '.2rem' }}>\n                    </span>\n                  </span>\n                  <span className=\"net-field net-field-container\">\n                    curSeqId\n                    <span className={`net-field-value`} style={{ marginLeft: '.2rem' }}>\n                      {uiStore.curSeqId}\n                    </span>\n                  </span>\n                  <span className=\"net-field net-field-container\">\n                    lastSeqId\n                    <span className={`net-field-value`} style={{ marginLeft: '.2rem' }}>\n                      {uiStore.lastSeqId}\n                    </span>\n                  </span>\n                  {uiStore.isElectron ? <span className=\"net-field\">{t('nav.cpu')}<span className=\"net-field-value\">{cpu}%</span></span> : null}\n                </div> : null}\n          </div>\n        </div>\n        <div className=\"menu\">\n          <>\n          <div className=\"timer\">\n            <CustomIcon className=\"icon-time\" disable />\n            <span className=\"time\">{moment.utc(time).format('HH:mm:ss')}</span>\n          </div>\n          <span className=\"menu-split\" />\n          </>\n          <div className={platform === 'web' ? \"btn-group\" : 'electron-btn-group'}>\n            {/* {platform === 'web' ?\n            <>\n            <Tooltip title={t(\"icon.setting\")} placement=\"bottom\">\n              <span>\n                <CustomIcon className=\"icon-setting\" onClick={(evt: any) => {\n                  uiStore.showSetting()\n                }}/>\n              </span>\n            </Tooltip>\n            </> : null\n          } */}\n            <UploadButton isBreakout={isBreakout} />\n            <Tooltip title={t(\"icon.exit-room\")} placement=\"bottom\">\n              <span>\n                <CustomIcon className=\"icon-exit\" onClick={(evt: any) => {\n                  uiStore.showDialog({\n                    type: 'exitRoom',\n                    message: t('icon.exit-room')\n                  })\n                }} />\n              </span>\n            </Tooltip>\n          </div>\n          {uiStore.isElectron &&\n            <div className=\"menu-group\">\n              <CustomIcon className=\"icon-minimum\" icon onClick={() => {\n                uiStore.windowMinimum()\n              }} />\n              <CustomIcon className=\"icon-maximum\" icon onClick={() => {\n                uiStore.windowMaximum()\n              }} />\n              <CustomIcon className=\"icon-close\" icon onClick={() => {\n                uiStore.windowClose()\n              }} />\n            </div>}\n        </div>\n      </div>\n    </>\n  )\n})\n\nexport const NavController = () => {\n  return (\n    <Nav\n    />\n  )\n}","import React, {useState} from 'react';\nimport './native-shared-window.scss';\nimport {CustomButton} from '@/components/custom-button';\nimport { useRoomStore } from '@/hooks'\nimport { observer } from 'mobx-react';\n\nexport const WindowItem: React.FC<any> = ({\n  ownerName,\n  name,\n  className,\n  windowId,\n  image,\n}) => {\n\n  return (\n    <div className={className ? className : ''} >\n      <div className=\"screen-image\">\n        <div className=\"content\" style={{ backgroundImage: `url(data:image/png;base64,${image})` }}>\n        </div>\n      </div>\n      <div className=\"screen-meta\">{name}</div>\n    </div>\n  )\n}\n\nexport interface WindowListProps {\n  title: string\n  items: any[]\n  windowId: number\n  selectWindow: (windowId: any) => void\n  confirm: (evt: any) => void\n  cancel: (evt: any) => void\n}\n\nexport const WindowList: React.FC<WindowListProps> = ({\n  title,\n  items,\n  windowId,\n  selectWindow,\n  confirm,\n  cancel\n}) => {\n  return (\n    <div className=\"window-picker-mask\">\n      <div className=\"window-picker\">\n        <div className=\"header\">\n          <div className=\"title\">{title}</div>\n          <div className=\"cancelBtn\" onClick={cancel}></div>\n        </div>\n        <div className='screen-container'>\n          {\n            items.map((it: any, key: number) =>\n              <div className=\"screen-item\" \n                key={key}\n                onClick={() => {\n                  selectWindow(it.windowId);\n                }}\n                onDoubleClick={confirm}\n                >\n                <WindowItem\n                  ownerName={it.ownerName}\n                  name={it.name}\n                  className={`window-item ${it.windowId === windowId ? 'active' : ''}`}\n                  windowId={it.windowId}\n                  image={it.image}\n                />\n              </div>\n            )\n          }\n        </div>\n        <div className='footer'>\n          <CustomButton className={'share-confirm-btn'} name={\"start\"}\n            onClick={confirm} />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst NativeSharedWindowController = observer(() => {\n  const roomStore = useRoomStore()\n\n  const [windowId, setWindowId] = useState<number>(0)\n\n  return (\n    roomStore.customScreenShareWindowVisible ? \n    <WindowList\n      windowId={windowId}\n      title={'Please select and click window for share'}\n      items={roomStore.customScreenShareItems}\n      cancel={() => {\n        roomStore.removeScreenShareWindow()\n      }}\n      selectWindow={(windowId: any) => {\n        console.log('windowId', windowId)\n        setWindowId(windowId)\n      }}\n      confirm={async (evt: any) => {\n        if (!windowId) {\n          console.warn(\"windowId is empty\");\n          return;\n        }\n        console.log('windowId confirm', windowId)\n        await roomStore.startNativeScreenShareBy(windowId)\n      }}\n    />\n    : null\n  )\n})\n\nexport default function NativeSharedWindowContainer() {\n  return (\n    <NativeSharedWindowController />\n  )\n}","import React from 'react'\nimport { observer } from 'mobx-react'\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert, { AlertProps } from '@material-ui/lab/Alert';\nimport { useUIStore } from '@/hooks'\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport { Theme } from '@material-ui/core/styles/createMuiTheme';\n\nexport const Alert = (props: AlertProps) => {\n  return (\n    <MuiAlert elevation={6} variant=\"filled\" {...props} />\n  )\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nexport const AutoplayToast = observer(() => {\n\n  const classes = useStyles()\n\n  const uiStore = useUIStore()\n\n  const handleClose = () => uiStore.removeAutoplayNotification()\n\n  return (\n    <Snackbar open={uiStore.autoplayToast} onClose={handleClose}>\n      <Alert>\n        autoplay audio failed\n      </Alert>\n    </Snackbar>\n  )\n})","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles = makeStyles(theme => ({\n  progress: {\n    margin: theme.spacing(2),\n    color: '#44A2FC'\n  },\n  container: {\n    position: 'absolute',\n    top: '0px',\n    left: '0px',\n    height: '100%',\n    width: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    background: '#ffffff',\n    opacity: 0.8,\n    zIndex: 99999\n  }\n}));\n\nexport const Loading: React.FC<{}> = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes.container}>\n      <CircularProgress className={classes.progress} />\n    </div>\n  );\n}\n\nexport default function LoadContainer () {\n\n  // const state = useGlobalState();\n\n  const loading = false;\n\n  return (\n    loading ? <Loading /> : null\n  )\n}","import React, { useEffect, useRef } from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport {NavController} from '@/components/nav';\nimport NativeSharedWindow from '@/components/native-shared-window';\nimport { DeviceDetectController } from '../device-detect';\nimport { AutoplayToast } from '@/components/autoplay-toast';\nimport { useRoomStore, useUIStore, useAppStore } from '@/hooks';\nimport { Loading } from '@/components/loading';\nimport { observer } from 'mobx-react';\nimport { t } from '@/i18n'; \n \nimport './room.scss';\n\nexport const roomTypes = [\n  {value: 0, path: 'one-to-one'},\n  {value: 1, path: 'small-class'},\n  {value: 2, path: 'big-class'},\n  // {value: 3, path: 'breakout-class'},\n];\n\nfunction getIpc() {\n  //@ts-ignore\n  return window.ipc\n}\n\nconst RoomController = observer(({children}: any) => {\n  useEffect(() => {\n    const ipc = getIpc()\n    if (ipc && ipc.send) {\n      ipc.send('resize-window', {width: 990, height: 706});\n    }\n    return () => {\n      const ipc = getIpc()\n      if (ipc && ipc.send) {\n        ipc.send('resize-window', {width: 700, height: 500});\n      }\n    }\n  }, [getIpc])\n\n  const uiStore = useUIStore()\n\n  const location = useLocation()\n\n  const roomStore = useRoomStore()\n\n  const appStore = useAppStore()\n\n  const history = useHistory()\n\n  useEffect(() => {\n    if (!appStore.userRole) {\n      history.push('/')\n      return\n    }\n    window.history.pushState(null, document.title, window.location.href);\n\n    const handlePopState = (evt: any) => {\n      window.history.pushState(null, document.title, null);\n      if (roomStore.joined && !uiStore.hasDialog('exitRoom')) {\n        uiStore.showDialog({\n          type: 'exitRoom',\n          message: t('icon.exit-room'),\n        })\n      }\n    }\n\n    window.addEventListener('popstate', handlePopState, false)\n\n    let pathList = location.pathname.split('/')\n    let path = pathList[pathList.length - 1]\n\n    roomStore.join().then(() => {\n      uiStore.addToast(t('toast.successfully_joined_the_room'))\n    }).catch((err) => {\n      console.warn(err.msg)\n      uiStore.addToast(t('toast.failed_to_join_the_room') + `${JSON.stringify(err.msg)}`)\n    })\n\n    \n    return () => {\n      window.removeEventListener('popstate', handlePopState, false)\n    }\n  }, [])\n  \n  let pathList = location.pathname.split('/')\n  let path = pathList[pathList.length - 1]\n  const index = roomTypes.findIndex((it: any) => path === it.path)\n\n  const value = roomTypes[index].path\n  \n  return (\n    <div className={`classroom ${value}`}>\n      {uiStore.loading ? <Loading /> : null}\n      <AutoplayToast />\n      <DeviceDetectController />\n      <NativeSharedWindow />\n      <NavController />\n      {children} \n\n    </div>\n  );\n})\n\nexport function RoomPage({ children }: any) {\n  return (\n    <RoomController>\n      {children}\n    </RoomController>\n  )\n}\n\n","import React, { useEffect, useRef, useState } from 'react';\nimport './toast.scss';\nimport { observer } from 'mobx-react';\nimport { useUIStore } from '@/hooks';\n\nexport interface SnackbarMessage {\n  message: string;\n  key: number;\n}\n\nexport const useMounted = () => {\n  const mounted = useRef<boolean>(true)\n\n  useEffect(() => {\n    return () => {\n      mounted.current = false\n    }\n  }, [])\n  return mounted.current\n}\n\nexport const useTimeout = (fn: CallableFunction, delay: number) => {\n  const mounted = useMounted()\n\n  const timer = useRef<any>(null)\n\n  useEffect(() => {\n    timer.current = setTimeout(() => {\n      fn && mounted && fn()\n    }, delay)\n\n    return () => {\n      if (timer.current) {\n        clearTimeout(timer.current)\n      }\n    }\n  }, [timer])\n}\n\ninterface ToastProps {\n  message: string\n  closeToast: CallableFunction\n}\n\nconst ToastMessage = (props: ToastProps) => {\n\n  useTimeout(() => {\n    props && props.closeToast()\n  }, 2500)\n\n  return (\n    <div className={\"custom-toast\"}>\n      <div className=\"toast-container\">\n        <span className=\"text\">{props.message}</span>\n      </div>\n    </div>\n  )\n}\n\nexport const Toast = observer(() => {\n\n  const uiStore = useUIStore()\n\n  return (\n    <div className=\"notice-message-container\">\n      {uiStore.toastQueue.map((message: string, idx: number) => \n        <ToastMessage\n          message={message}\n          key={`${idx}${message}${Date.now()}`}\n          closeToast={() => {\n            uiStore.removeToast(message)\n            console.log(\"close Toast\", message)\n          }}\n        />\n      )}\n    </div>\n  )\n})","import React from 'react'\nimport { CustomIcon } from \"../icon\"\nimport './index.scss'\nimport { useRoomStore } from '@/hooks'\nimport { RendererPlayer } from '../media-player'\n\ntype VideoPlayerProps = {\n  className?: string\n  userUuid: string\n  streamUuid: string\n  showClose: boolean\n  account: string\n  renderer?: any\n  role: string\n  audio: boolean\n  video: boolean\n  local?: boolean\n  share?: boolean\n  showControls: boolean\n  handleClickVideo?: (userUuid: string, isLocal: boolean) => void\n  handleClickAudio?: (userUuid: string, isLocal: boolean) => void\n}\n\nexport const VideoPlayer: React.FC<VideoPlayerProps> = ({\n  className,\n  showClose,\n  streamUuid,\n  userUuid,\n  account,\n  renderer,\n  local = false,\n  role,\n  audio,\n  video,\n  showControls,\n  share = false,\n  handleClickVideo,\n  handleClickAudio\n}) => {\n\n  const roomStore = useRoomStore()\n\n  const handleClose = async () => {\n    await roomStore.closeStream(userUuid, local)\n  }\n\n  const handleAudioClick = async () => {\n    if (handleClickAudio) {\n      return handleClickAudio(userUuid, local)\n    }\n    if (audio) {\n      await roomStore.muteAudio(userUuid, local)\n    } else {\n      await roomStore.unmuteAudio(userUuid, local)\n    }\n  }\n\n  const handleVideoClick = async () => {\n    if (handleClickVideo) {\n      return handleClickVideo(userUuid, local)\n    }\n    if (video) {\n      await roomStore.muteVideo(userUuid, local)\n    } else {\n      await roomStore.unmuteVideo(userUuid, local)\n    }\n  }\n\n  return (\n    <div className={`${className ? className : 'agora-video-view'}`}>\n      {showClose ? <div className=\"icon-close\" onClick={handleClose}></div> : null}\n      {\n        share === true ? null : \n        <div className={role === 'teacher' ? 'teacher-placeholder' : 'student-placeholder'}>\n        </div>\n      }\n      { share ? \n        <RendererPlayer key={renderer && renderer.videoTrack ? renderer.videoTrack.getTrackId() : ''} track={renderer} id={streamUuid} fitMode={true} className=\"rtc-video\" /> :\n        <>\n          { renderer && video ? <RendererPlayer key={renderer && renderer.videoTrack ? renderer.videoTrack.getTrackId() : ''} track={renderer} id={streamUuid} className=\"rtc-video\" /> : null}\n        </>\n      }\n      { \n        account ? \n        <div className=\"video-profile\">\n          <span className=\"account\">{account}</span>\n          {showControls ?\n            <span className=\"media-btn\">\n              <CustomIcon onClick={handleAudioClick} className={audio ? \"icon-speaker-on\" : \"icon-speaker-off\"} data={\"audio\"} />\n              <CustomIcon onClick={handleVideoClick} className={video ? \"icons-camera-unmute-s\" : \"icons-camera-mute-s\"} data={\"video\"} />\n            </span> : null}\n        </div>\n        : null\n      }\n    </div>\n  )\n}","import React, { useRef, useEffect, useState, useLayoutEffect } from 'react';\nimport {VideoPlayer} from '@/components/video-player';\nimport './video-marquee.scss';\nimport { AgoraMediaStream } from '@/utils/types';\nimport { observer } from 'mobx-react';\nimport { useRoomStore } from '@/hooks';\n\nconst showScrollbar = () => {\n  const $marquee = document.querySelector(\".video-marquee .agora-video-view\");\n  if ($marquee) {\n    const clientWidth = $marquee.clientWidth;\n    const marqueeLength: number = document.querySelectorAll(\".video-marquee .agora-video-view\").length;\n    const videoMarqueeMark = document.querySelector('.video-marquee-mask')\n    if (clientWidth && videoMarqueeMark) {\n      const videoMarqueeWidth = videoMarqueeMark.clientWidth;\n      const width: number = clientWidth * marqueeLength;\n      if (videoMarqueeWidth <= width) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nexport const VideoMarquee = observer(() => {\n\n  const {teacherStream, studentStreams} = useRoomStore()\n\n\n  const marqueeEl = useRef(null);\n\n  const scrollLeft = (current: any, offset: number) => {\n    current.scrollLeft += (offset * current.childNodes[1].offsetWidth);\n  }\n\n  const handleScrollLeft = (evt: any) => {\n    scrollLeft(marqueeEl.current, 1);\n  }\n\n  const handleScrollRight = (evt: any) => {\n    scrollLeft(marqueeEl.current, -1);\n  }\n\n  const ref = useRef<boolean>(false);\n\n  useEffect(() => {\n    return () => {\n      ref.current = true;\n    }\n  }, []);\n\n  const [scrollBar, setScrollBar] = useState<boolean>(false);\n\n  useLayoutEffect(() => {\n    if (!studentStreams.length) return;\n    !ref.current && setScrollBar(showScrollbar());\n  }, [studentStreams]);\n\n  useEffect(() => {\n    window.addEventListener('resize', (evt: any) => {\n      !ref.current && setScrollBar(showScrollbar());\n    });\n    return () => {\n      window.removeEventListener('resize', () => {});\n    }\n  }, []);\n\n  return (\n    <div className=\"video-marquee-container\">\n      <div className=\"main\">\n        <VideoPlayer\n          showClose={false}\n          role=\"teacher\"\n          {...teacherStream}\n        />\n      </div>\n      <div className=\"video-marquee-mask\">\n        <div className=\"video-marquee\" ref={marqueeEl}>\n        {scrollBar ? \n          <div className=\"scroll-btn-group\">\n            <div className=\"icon icon-left\" onClick={handleScrollLeft}></div>\n            <div className=\"icon icon-right\" onClick={handleScrollRight}></div>\n          </div> : null\n        }\n          {studentStreams.map((studentStream: any, key: number) => (\n            <VideoPlayer\n              key={key}\n              showClose={false}\n              role=\"student\"\n              {...studentStream}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  )\n})","import React from 'react';\nimport './progress.scss';\nimport { CircularProgress } from '@material-ui/core';\n\ntype ProgressProps = {\n  title: string\n}\n\nexport const Progress: React.FC<ProgressProps> = ({\n  title,\n}) => {\n  return (\n    <div className=\"progress-cover\">\n      <div className=\"progress\">\n        <div className=\"content\">\n          <CircularProgress className=\"circular\"/>\n          <span className=\"title\">{title}...</span>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default React.memo(Progress);","import React from 'react';\nimport { Progress } from '../progress/progress';\nimport { t } from '@/i18n';\nimport { observer } from 'mobx-react';\nimport { useBoardStore } from '@/hooks';\n\nexport const BoardLoading = observer(() => {\n  const boardStore = useBoardStore()\n  return (\n    boardStore.loadingType ? <Progress title={boardStore.loadingType === 'converting' ? t(\"whiteboard.converting\") : t(\"whiteboard.loading\")}></Progress> : null\n  )\n})","import React, { useRef } from 'react';\nimport {t} from '@/i18n';\nimport { observer } from 'mobx-react';\nimport { useBoardStore } from '@/hooks';\n\nexport const UploadBtn: React.FC<any> = observer(() => {\n\n  const ImageInput = useRef<any>(null);\n  const DynamicInput = useRef<any>(null);\n  const StaticInput = useRef<any>(null);\n  const AudioVideoInput = useRef<any>(null);\n\n  const boardStore = useBoardStore()\n\n  const uploadDynamic = async (event: any) => {\n    try {\n      boardStore.setTool('')\n      const file = event.currentTarget.files[0];\n      await boardStore.uploadDynamicPPT(file)\n    } finally {\n      if (DynamicInput.current) {\n        DynamicInput.current.value = ''\n      }\n    }\n  }\n\n  const uploadStatic = async (event: any) => {\n    try {\n      boardStore.setTool('')\n      const file = event.currentTarget.files[0];\n      await boardStore.uploadStaticFile(file)\n    } finally {\n      if (StaticInput.current) {\n        StaticInput.current.value = ''\n      }\n    }\n  }\n\n  const uploadImage = async (event: any) => {\n    try {\n      boardStore.setTool('')\n      const file = event.currentTarget.files[0];\n      await boardStore.uploadImage(file)\n    } finally {\n      if (ImageInput.current) {\n        ImageInput.current.value = ''\n      }\n    }\n  }\n\n  const uploadAudioVideo = async (event: any) => {\n    try {\n      boardStore.setTool('')\n      const file = event.currentTarget.files[0];\n      await boardStore.uploadAudioVideo(file)\n    } finally {\n      if (AudioVideoInput.current) {\n        AudioVideoInput.current.value = ''\n      }\n    }\n  }\n\n  return (\n    <div className=\"upload-btn\">\n      <div className=\"upload-items\">\n        <label htmlFor=\"upload-image\">\n          <div className=\"upload-image-resource\"></div>\n          <div className=\"text-container\">\n            <div className=\"title\">{t('upload_picture')}</div>\n            <div className=\"description\">bmp, jpg, png, gif</div>\n          </div>\n        </label>\n        <input ref={ImageInput} id=\"upload-image\" accept=\"image/*,.bmp,.jpg,.png,.gif\"\n          onChange={uploadImage} type=\"file\"></input>\n      </div>\n      <div className=\"slice-dash\"></div>\n      <div className=\"upload-items\">\n        <label htmlFor=\"upload-dynamic\">\n          <div className=\"upload-dynamic-resource\"></div>\n          <div className=\"text-container\">\n            <div className=\"title\">{t('convert_webpage')}</div>\n            <div className=\"description\">pptx</div>\n          </div>\n        </label>\n        <input ref={DynamicInput} id=\"upload-dynamic\" accept=\".pptx\" onChange={uploadDynamic} type=\"file\"></input>\n      </div>\n      <div className=\"slice-dash\"></div>\n      <div className=\"upload-items\">\n        <label htmlFor=\"upload-static\">\n          <div className=\"upload-static-resource\"></div>\n          <div className=\"text-container\">\n            <div className=\"title\">{t('convert_to_picture')}</div>\n            <div className=\"description\">pptx, word, pdf support</div>\n          </div>\n        </label>\n        <input ref={StaticInput} id=\"upload-static\" accept=\".doc,.docx,.ppt,.pptx,.pdf\" onChange={uploadStatic} type=\"file\"></input>\n      </div>\n      <div className=\"slice-dash\"></div>\n      <div className=\"upload-items\">\n        <label htmlFor=\"upload-video\">\n          <div className=\"upload-static-resource\"></div>\n          <div className=\"text-container\">\n            <div className=\"title\">{t('upload_audio_video')}</div>\n            <div className=\"description\">mp4,mp3</div>\n          </div>\n        </label>\n        <input ref={AudioVideoInput} id=\"upload-video\" accept=\".mp4,.mp3\" onChange={uploadAudioVideo} type=\"file\"></input>\n      </div>\n    </div>\n  )\n})","import React from 'react';\nimport {CustomIcon} from '@/components/icon';\nimport { Tooltip, ClickAwayListener } from '@material-ui/core';\nimport {UploadBtn} from './upload/upload-btn'\nimport { observer } from 'mobx-react';\nimport { useBoardStore, useRoomStore } from '@/hooks';\nimport { BoardStore } from '@/stores/app/board';\nimport { SketchPicker } from 'react-color';\nimport { PPTProgressPhase } from '@/utils/upload-manager';\nimport { get } from 'lodash';\nimport { t } from '@/i18n';\n\n\nconst ToolItem = (props: any) => {\n  const onClick = (evt: any) => {\n    props.onClick(props.name);\n  }\n  return (\n    <Tooltip title={props.text} placement=\"right\">\n      <span>\n      <CustomIcon data={props.name}\n        onClick={onClick} className={`items ${props.name} ${props.active ? 'active' : ''}`} />\n      </span>\n    </Tooltip>\n  )\n}\n\nexport const Tools = observer(() => {\n\n  const items: any[] = BoardStore.items\n\n  const boardStore = useBoardStore()\n\n  const roomStore = useRoomStore()\n\n  const handleClickOutSide = () => {\n    switch(boardStore.selector) {\n      case 'upload': {\n        boardStore.setTool('')\n        break;\n      }\n      case 'color_picker': {\n        boardStore.setTool('pencil')\n        break;\n      }\n      case 'text': {\n        boardStore.setTool('')\n        break;\n      }\n    }\n  }\n\n  return (\n    <ClickAwayListener onClickAway={handleClickOutSide}>\n      <div className=\"tools\">\n          <div className=\"board-tools-menu\">\n            {items\n              .filter((it: any) => {\n                if (get(roomStore, 'roomInfo.userRole', 'student') === 'student') {\n                  if (['add', 'upload', 'hand_tool'].indexOf(it.name) !== -1) return false\n                }\n                return true\n              })\n              .map((item: any, key: number) => (\n              <ToolItem\n                key={key}\n                text={item.text}\n                name={item.name}\n                onClick={(name: string) => {\n                  boardStore.setTool(name)\n                }}\n                active={boardStore.selector === item.name}\n              >\n              </ToolItem>\n            ))}\n          </div>\n        {boardStore.showColorPicker ? \n          <SketchPicker\n            color={boardStore.strokeColor}\n            onChangeComplete={(color: any) => {\n              boardStore.changeColor(color)\n            }}\n          />\n        : null\n        }  \n        {boardStore.showUpload ?\n          <UploadBtn />\n          : null\n        }\n      </div>\n    </ClickAwayListener>\n\n  )\n})","import React from 'react';\nimport {CustomIcon} from '@/components/icon';\n\ninterface ControlItemProps {\n  name: string\n  onClick: (name: string) => any | Promise<any>\n  active: boolean\n  text?: string\n  loading?: boolean\n}\n\nexport const ControlItem = (props: ControlItemProps) => {\n  const onClick = (evt: any) => {\n    props.onClick(props.name);\n  }\n  return (\n    props.text ?\n      <div className={`control-btn control-${props.name} ${props.loading ? 'icon-loading' : ''}`} onClick={onClick}>\n        <div className={`btn-icon ${props.name} ${props.active ? 'active' : ''}`}\n          data-name={props.name} />\n        <div className=\"control-text\">{props.text}</div>\n      </div>\n      :\n      <CustomIcon\n        loading={props.loading}\n        data={props.name}\n        onClick={onClick}\n        className={`items ${props.name} ${props.active ? 'active' : ''}`}\n      />\n  )\n}","import React from 'react';\nimport { Tooltip } from '@material-ui/core';\nimport {t} from '@/i18n';\n\nexport type ScaleControllerProps = {\n  lockBoard: boolean\n  zoomScale: number\n  zoomChange: (scale: number) => void\n  onClick: () => void\n  onClickBoardLock: () => void\n};\n\nexport default class ScaleController extends React.Component<ScaleControllerProps, {}> {\n\n  private static readonly syncDuration: number = 200;\n\n  private static readonly dividingRule: ReadonlyArray<number> = Object.freeze(\n      [\n          0.10737418240000011,\n          0.13421772800000012,\n          0.16777216000000014,\n          0.20971520000000016,\n          0.26214400000000015,\n          0.3276800000000002,\n          0.4096000000000002,\n          0.5120000000000001,\n          0.6400000000000001,\n          0.8,\n          1,\n          1.26,\n          1.5876000000000001,\n          2.000376,\n          2.5204737600000002,\n          3.1757969376000004,\n          4.001504141376,\n          5.041895218133761,\n          6.352787974848539,\n          8.00451284830916,\n          10,\n      ],\n  );\n\n  private tempRuleIndex?: number;\n  private syncRuleIndexTimer: any = null;\n\n  public constructor(props: ScaleControllerProps) {\n      super(props);\n  }\n\n  private delaySyncRuleIndex(): void {\n      if (this.syncRuleIndexTimer !== null) {\n          clearTimeout(this.syncRuleIndexTimer);\n          this.syncRuleIndexTimer = null;\n      }\n      this.syncRuleIndexTimer = setTimeout(() => {\n          this.syncRuleIndexTimer = null;\n          this.tempRuleIndex = undefined;\n\n      }, ScaleController.syncDuration);\n  }\n\n  private static readRuleIndexByScale(scale: number): number {\n      const {dividingRule} = ScaleController;\n\n      if (scale < dividingRule[0]) {\n          return 0;\n      }\n      for (let i = 0; i < dividingRule.length; ++i) {\n          const prePoint = dividingRule[i - 1];\n          const point = dividingRule[i];\n          const nextPoint = dividingRule[i + 1];\n\n          const begin = prePoint === undefined ? Number.MIN_SAFE_INTEGER : (prePoint + point) / 2;\n          const end = nextPoint === undefined ? Number.MAX_SAFE_INTEGER : (nextPoint + point) / 2;\n\n          if (scale >= begin && scale <= end) {\n              return i;\n          }\n      }\n      return dividingRule.length - 1;\n  }\n\n  private moveTo100(): void {\n      this.tempRuleIndex = ScaleController.readRuleIndexByScale(1);\n      this.delaySyncRuleIndex();\n      this.props.zoomChange(1);\n  }\n\n\n  private moveRuleIndex(deltaIndex: number): void {\n\n      if (this.tempRuleIndex === undefined) {\n          this.tempRuleIndex = ScaleController.readRuleIndexByScale(this.props.zoomScale);\n      }\n      this.tempRuleIndex += deltaIndex;\n\n      if (this.tempRuleIndex > ScaleController.dividingRule.length - 1) {\n          this.tempRuleIndex = ScaleController.dividingRule.length - 1;\n\n      } else if (this.tempRuleIndex < 0) {\n          this.tempRuleIndex = 0;\n      }\n      const targetScale = ScaleController.dividingRule[this.tempRuleIndex];\n\n      this.delaySyncRuleIndex();\n      this.props.zoomChange(targetScale);\n  }\n\n  public render(): React.ReactNode {\n      return (\n        <div className=\"zoom-controls\">\n          <Tooltip title={t(\"zoom_control.folder\")} placement=\"top\">\n            <div className=\"zoom-icon\" onClick={() => this.props.onClick()}>\n            </div>\n          </Tooltip>\n          <div className=\"zoom-hold\"></div>\n          <div className=\"zoom-size\">{Math.ceil(this.props.zoomScale * 100)} %</div>\n          <div className=\"zoom-items\">\n            <div className=\"item zoom-in\" onClick={() => this.moveRuleIndex(-1)}>-</div>\n            <div className=\"item zoom-out\" onClick={() => this.moveRuleIndex(+1)}>+</div>\n          </div>\n          <Tooltip title={!this.props.lockBoard ? t(\"zoom_control.lock_board\") : t(\"zoom_control.unlock_board\")} placement=\"top\">\n            <div className=\"lock-board\" onClick={() => this.props.onClickBoardLock() }></div>\n          </Tooltip>\n        </div>\n      );\n  }\n}","import React from 'react';\nimport { Tooltip } from '@material-ui/core';\nimport { t } from '@/i18n';\nimport { ControlItem } from '../control-item';\nimport { useBoardStore, useRoomStore, useBreakoutRoomStore } from '@/hooks';\nimport {observer} from 'mobx-react';\nimport ScaleController from './scale-controller';\nimport { useLocation } from 'react-router-dom';\n\nexport const FooterMenu = () => {\n\n  const location = useLocation()\n\n  const isBreakoutClass = location.pathname.match('breakout-class')\n\n  return (\n    isBreakoutClass ? <BreakoutClassSceneFooterMenu /> : <BasicSceneFooterMenu />\n  )\n}\n\nconst BasicSceneFooterMenu = observer(() => {\n  const boardStore = useBoardStore()\n  const roomStore = useRoomStore()\n\n  const current = boardStore.activeFooterItem\n\n  const onClick = (key: string) => boardStore.changeFooterMenu(key)\n\n  const handleRecording = async () => {\n    await roomStore.startOrStopRecording()\n  } \n  const handleSharing = async () => {\n    await roomStore.startOrStopSharing()\n  }\n\n  return (\n    roomStore.roomInfo.userRole === 'teacher' ?\n    <>\n    <div className=\"pagination\">\n    {!roomStore.sharing ?\n      <>\n      <Tooltip title={t(`control_items.first_page`)} placement=\"top\">\n        <span>\n          <ControlItem name={`first_page`}\n            active={'first_page' === current}\n            onClick={onClick} />\n        </span>\n      </Tooltip>\n      <Tooltip title={t(`control_items.prev_page`)} placement=\"top\">\n        <span>\n          <ControlItem name={`prev_page`}\n            active={'prev_page' === current}\n            onClick={onClick} />\n        </span>\n      </Tooltip>\n      <div className=\"current_page\">\n        <span>{boardStore.currentPage}/{boardStore.totalPage}</span>\n      </div>\n      <Tooltip title={t(`control_items.next_page`)} placement=\"top\">\n        <span>\n          <ControlItem name={`next_page`}\n            active={'next_page' === current}\n            onClick={onClick} />\n        </span>\n      </Tooltip>\n      <Tooltip title={t(`control_items.last_page`)} placement=\"top\">\n        <span>\n          <ControlItem name={`last_page`}\n            active={'last_page' === current}\n            onClick={onClick} />\n        </span>\n      </Tooltip>\n      <div className=\"menu-split\" style={{ marginLeft: '7px', marginRight: '7px' }}></div>\n      </> : null }\n      <Tooltip title={t(roomStore.recordId ? 'control_items.stop_recording' : 'control_items.recording')} placement=\"top\">\n        <span>\n          <ControlItem\n            loading={roomStore.recording}\n            name={roomStore.recording ? 'icon-loading ' : (roomStore.recordId ? 'stop_recording' : 'recording')}\n            onClick={handleRecording}\n            active={false}\n          />\n        </span>\n      </Tooltip>\n      <Tooltip title={t(roomStore.sharing ? 'control_items.quit_screen_sharing' : 'control_items.screen_sharing')} placement=\"top\">\n        <span>\n          <ControlItem\n            name={roomStore.sharing ? 'quit_screen_sharing' : 'screen_sharing'}\n            onClick={handleSharing}\n            active={false}\n            text={roomStore.sharing ? 'stop sharing' : ''}\n          />\n        </span>\n      </Tooltip>\n    </div>\n    <ScaleController\n      lockBoard={boardStore.lock}\n      zoomScale={boardStore.scale}\n      onClick={() => {\n        boardStore.openFolder()\n      }}\n      onClickBoardLock={() => {\n        boardStore.toggleLockBoard()\n      }}\n      zoomChange={(scale: number) => {\n        boardStore.updateScale(scale)\n      }}\n    />\n    </>\n    : null\n  )\n})\n\nconst BreakoutClassSceneFooterMenu = observer(() => {\n  const boardStore = useBoardStore()\n  const roomStore = useBreakoutRoomStore()\n\n  const current = boardStore.activeFooterItem\n\n  const onClick = (key: string) => boardStore.changeFooterMenu(key)\n\n  const handleRecording = async () => {\n    await roomStore.startOrStopRecording()\n  } \n  const handleSharing = async () => {\n    await roomStore.startOrStopSharing()\n  }\n\n  return (\n    roomStore.roomInfo.userRole === 'teacher' ?\n    <>\n    <div className=\"pagination\">\n    {!roomStore.sharing ?\n      <>\n      <Tooltip title={t(`control_items.first_page`)} placement=\"top\">\n        <span>\n          <ControlItem name={`first_page`}\n            active={'first_page' === current}\n            onClick={onClick} />\n        </span>\n      </Tooltip>\n      <Tooltip title={t(`control_items.prev_page`)} placement=\"top\">\n        <span>\n          <ControlItem name={`prev_page`}\n            active={'prev_page' === current}\n            onClick={onClick} />\n        </span>\n      </Tooltip>\n      <div className=\"current_page\">\n        <span>{boardStore.currentPage}/{boardStore.totalPage}</span>\n      </div>\n      <Tooltip title={t(`control_items.next_page`)} placement=\"top\">\n        <span>\n          <ControlItem name={`next_page`}\n            active={'next_page' === current}\n            onClick={onClick} />\n        </span>\n      </Tooltip>\n      <Tooltip title={t(`control_items.last_page`)} placement=\"top\">\n        <span>\n          <ControlItem name={`last_page`}\n            active={'last_page' === current}\n            onClick={onClick} />\n        </span>\n      </Tooltip>\n      <div className=\"menu-split\" style={{ marginLeft: '7px', marginRight: '7px' }}></div>\n      </> : null }\n      <Tooltip title={t(roomStore.recordId ? 'control_items.stop_recording' : 'control_items.recording')} placement=\"top\">\n        <span>\n          <ControlItem\n            loading={roomStore.recording}\n            name={roomStore.recording ? 'icon-loading ' : (roomStore.recordId ? 'stop_recording' : 'recording')}\n            onClick={handleRecording}\n            active={false}\n          />\n        </span>\n      </Tooltip>\n      <Tooltip title={t(roomStore.sharing ? 'control_items.quit_screen_sharing' : 'control_items.screen_sharing')} placement=\"top\">\n        <span>\n          <ControlItem\n            name={roomStore.sharing ? 'quit_screen_sharing' : 'screen_sharing'}\n            onClick={handleSharing}\n            active={false}\n            text={roomStore.sharing ? 'stop sharing' : ''}\n          />\n        </span>\n      </Tooltip>\n    </div>\n    <ScaleController\n      lockBoard={boardStore.lock}\n      zoomScale={boardStore.scale}\n      onClick={() => {\n        boardStore.openFolder()\n      }}\n      onClickBoardLock={() => {\n        boardStore.toggleLockBoard()\n      }}\n      zoomChange={(scale: number) => {\n        boardStore.updateScale(scale)\n      }}\n    />\n    </>\n    : null\n  )\n})\n","import React, { useState } from 'react';\nimport { Tooltip, Input } from '@material-ui/core';\nimport {CustomIcon} from '@/components/icon'; \nimport {observer} from 'mobx-react'\nimport { useBoardStore } from '@/hooks';\n\nconst FolderMenuItem = (props: any) => {\n\n  const [name, setName] = useState<string>(props.name);\n\n  const onChange = (evt: any) => {\n\n  }\n\n  const onRemove = () => {\n    props.onRemove()\n  }\n\n  const handleClick = () => {\n    if (props.handleClick) {\n      props.handleClick(props.item.rootPath)\n    }\n  }\n\n  return (\n    <div className={`item ${props.activeClass ? 'active' : ''}`}>\n      <Tooltip title={'remove'}>\n        <span>\n          <CustomIcon className=\"icon-delete\" onClick={onRemove} />\n        </span>\n      </Tooltip>\n      <div className={`cover-item ${props.coverType}`} onClick={handleClick}></div>\n      <span>\n        <Input className=\"title\"\n          onChange={onChange}\n          defaultValue={props.name}\n        />\n      </span>\n    </div>\n  ) \n}\n\nexport const FolderMenu = observer(() => {\n\n  const boardStore = useBoardStore()\n\n  const onClose = () => boardStore.closeFolder()\n\n  const handleClick = (scenePath: string) => boardStore.changeScenePath(scenePath)\n\n  return (\n    boardStore.showFolder ? \n    <div className=\"custom-netless-folder-menu\">\n      <div className=\"menu-header\">\n      <div className=\"menu-title\">{boardStore.menuTitle}</div>\n        <div className=\"menu-close\" onClick={onClose}></div>\n      </div>\n      <div className=\"menu-body\">\n        <div className=\"menu-items\">\n          {boardStore.sceneItems.map((item: any, key: number) => (\n            <FolderMenuItem\n              activeClass={boardStore.activeScenePath === item.rootPath ? 'active' : ''}\n              coverType={item.file.type.match(/ppt/) ? 'ppt-cover' : 'doc-cover'}\n              item={item}\n              name={item.file.name}\n              key={key+item.path+item.file.name}\n              handleClick={handleClick}\n              onRemove={() => boardStore.removeScenes(item.path, item.rootPath === '/init')}\n            ></FolderMenuItem>\n          ))}\n        </div>\n      </div>\n    </div> \n     : null\n    )\n})","import React from 'react';\n\nimport './upload-notice.scss';\nimport { observer } from 'mobx-react';\nimport { useBoardStore } from '@/hooks';\nimport { useTimeout } from '@/components/toast';\n\nconst NoticeMessage: React.FC<any> = ({\n  type,\n  title,\n  onClose\n}) => {\n\n  useTimeout(() => {\n    onClose && onClose()\n  }, 2500)\n\n  return (\n    <div className={`notice-container ${type}`}>\n      <span className={`icon-${type}`}></span>\n      <span className=\"title\">{title}</span>\n    </div>\n  )\n}\n\nexport const UploadNotice = observer(() => {\n\n  const boardStore = useBoardStore()\n\n  return (\n    <div className=\"upload-notice\">\n      {boardStore.notices.map((it: any, idx: number) => \n        <NoticeMessage\n          key={`${idx}${it.key}${Date.now()}`}\n          type={it.type}\n          title={it.title}\n          onClose={() => boardStore.removeNotice(it)}\n        />\n      )}\n    </div>\n  )\n})","import React, { useEffect, useRef, useCallback } from 'react';\nimport { BoardLoading } from './loading';\nimport { Tools } from './tools';\nimport { FooterMenu } from './footer-menu';\nimport { FolderMenu } from './folder-menu';\n// import 'white-web-sdk/style/index.css';\nimport { observer } from 'mobx-react';\nimport { useBoardStore } from '@/hooks';\nimport { UploadNotice } from './upload/upload-notice';\nimport './netless-whiteboard.scss';\n\nexport const Board = observer(() => {\n\n  const boardStore = useBoardStore()\n\n  const boardRef = useRef<HTMLDivElement | null>(null)\n\n\n  const mountToDOM = useCallback((dom: any) => {\n    if (dom) {\n      boardStore.mount(dom)\n    } else {\n      boardStore.unmount()\n    }\n  }, [boardRef.current, boardStore])\n\n  return (\n    <div className=\"board-container\">\n      <FolderMenu />\n      <div ref={mountToDOM} className=\"edu-demo-board\" id=\"netless-board\"></div>\n      {boardStore.hasPermission ? <Tools /> : null}\n      <FooterMenu/>\n      <BoardLoading />\n      <UploadNotice />\n    </div>\n  )\n})","import React from 'react';\nimport { Board } from './board';\nimport { observer } from 'mobx-react';\nimport { useBoardStore } from '@/hooks';\n\nexport const NetlessBoard = observer((props: any) => {\n\n  const {ready} = useBoardStore()\n\n  return (\n    ready ? <Board /> : <div className=\"board-container\"></div>\n  )\n})","import React from 'react'\nimport { observer } from 'mobx-react'\nimport { useRoomStore, useBreakoutRoomStore } from '@/hooks'\nimport { useLocation } from 'react-router-dom';\nimport { VideoPlayer } from '@/components/video-player'\nimport './index.scss';\nexport const ScreenSharing = () => {\n  const location = useLocation()\n\n  const isBreakoutClass = location.pathname.match('breakout-class')\n\n  return (\n    isBreakoutClass ? <BreakoutClassSceneScreenSharing /> : <BasicSceneScreenSharing />\n  )\n}\nconst BasicSceneScreenSharing = observer(() => {\n  const roomStore = useRoomStore()\n  return (\n    roomStore.sharing ? \n    <VideoPlayer \n      showClose={false}\n      role=\"teacher\"\n      share={true}\n      className=\"screen-sharing\"\n      {...roomStore.screenShareStream}\n    /> : null\n  )\n})\n\nconst BreakoutClassSceneScreenSharing = observer(() => {\n  const roomStore = useBreakoutRoomStore()\n  return (\n    roomStore.sharing ? \n    <VideoPlayer \n      showClose={false}\n      role=\"teacher\"\n      share={true}\n      className=\"screen-sharing\"\n      {...roomStore.screenShareStream}\n    /> : null\n  )\n})\n","import React from 'react';\nimport './index.scss';\nimport { Link } from 'react-router-dom';\nimport { t } from '@/i18n';\ninterface MessageProps {\n  nickname: string\n  content: string\n  link?: string\n  sender?: boolean\n  children?: any\n  ref?: any\n  className?: string\n  role?: number\n}\n\nconst roles = [\n  'unknown',\n  'teacher_role',\n  'student_role',\n  'assistant_role',\n]\n\nexport const Message: React.FC<MessageProps> = ({\n  nickname,\n  content,\n  link,\n  sender,\n  children,\n  ref,\n  role,\n  className\n}) => {\n\n  return (\n  <div ref={ref} className={`message ${sender ? 'sent': 'receive'} ${className ? className : ''}`}>\n    <div className=\"nickname\">\n    {!sender && role? t(roles[role as number]) : ''}{nickname}\n    </div>\n    <div className=\"content\">\n      {link ?\n        <Link to={`/replay/record/${link}`} target=\"_blank\">{t('course_recording')}</Link>\n        : content\n      }\n    </div>\n    {children ? children : null}\n  </div>\n  )\n}\n\ninterface RoomMessageProps extends MessageProps {\n  roomName?: string\n}\n\nexport const RoomMessage: React.FC<RoomMessageProps> = ({\n  nickname,\n  roomName,\n  content,\n  link,\n  sender,\n  children,\n  ref,\n  role,\n  className\n}) => {\n\n  return (\n  <div ref={ref} className={`message ${sender ? 'sent': 'receive'} ${className ? className : ''}`}>\n    {!sender && roomName && (<div className=\"roomname\">{t('from_room')}{roomName}</div>)}\n    <div className=\"nickname\">\n      {!sender && role ? t(roles[role as number]) : ''}{nickname}\n    </div>\n    <div className=\"content\">\n      {link ?\n        <Link to={`/replay/record/${link}`} target=\"_blank\">{t('course_recording')}</Link>\n        : content\n      }\n    </div>\n    {children ? children : null}\n  </div>\n  )\n}","import React, { useRef, useEffect, useMemo } from 'react';\nimport {Message, RoomMessage} from './message';\nimport { Input } from '@material-ui/core';\nimport {CustomButton} from '../custom-button';\nimport './panel.scss';\nimport { ChatMessage } from '@/utils/types';\nimport { t } from '@/i18n';\nimport {observer} from 'mobx-react';\n\nexport interface ChatPanelProps {\n  canChat: boolean\n  muteControl: boolean\n  muteChat: boolean\n  messages: ChatMessage[]\n  value: string\n  handleMute: (evt: any) => Promise<any>\n  sendMessage: (evt: any) => void\n  handleChange: (evt: any) => void\n  showRoomName?: boolean\n}\n\nconst regexPattern = /^\\s+/;\n\nconst truncateBlank: (m: string) => string = (message: string) => message.replace(regexPattern, '');\n\nexport const ChatPanel: React.FC<ChatPanelProps> = observer(({\n  messages,\n  value,\n  sendMessage,\n  handleChange,\n  muteControl,\n  muteChat,\n  handleMute,\n  canChat,\n  showRoomName,\n}) => {\n  const ref = useRef(null);\n\n  const scrollDown = (current: any) => {\n    current.scrollTop = current.scrollHeight;\n  }\n\n  useEffect(() => {\n    scrollDown(ref.current);\n  }, [messages.length]);\n\n  const showText = useMemo(() => {\n    if (canChat) return false\n    return muteChat\n  }, [canChat, muteChat])\n\n  return (\n    <>\n      <div className=\"chat-messages-container\">\n        <div className=\"chat-messages\" ref={ref}>\n          {\n            showRoomName ? \n            messages.map((item: ChatMessage, key: number) => (\n              <RoomMessage key={key} roomName={item.fromRoomName} role={item.role} nickname={item.account} content={item.text} link={item.link} sender={item.sender} />\n            )) :\n            messages.map((item: ChatMessage, key: number) => (\n              <Message key={key} nickname={item.account} content={item.text} role={item.role} link={item.link} sender={item.sender} />\n            ))\n          }\n        </div>   \n      </div>\n      <div className=\"message-panel\">\n        {muteControl ?\n          <div className={`icon ${muteChat ? 'icon-chat-off' : 'icon-chat-on' }`}\n            onClick={handleMute}></div> : null}\n        <Input\n          disabled={canChat ? false : muteChat}\n          value={!showText ? value : ''}\n          placeholder={showText ? t(\"chat.banned\") : t(\"chat.placeholder\")}\n          disableUnderline\n          className={\"message-input\"}\n          onKeyPress={async (evt: any) => {\n            if (evt.key === 'Enter') {\n              if (canChat || !muteChat) {\n                const val = truncateBlank(value)\n                val.length > 0 && await sendMessage(val);\n              }\n            }\n          }}\n          onChange={handleChange}/>\n        <CustomButton className={'chat-panel-btn'} name={t(\"chat.send\")}\n          onClick={async (evt: any) => {\n            if (canChat || !muteChat) {\n              const val = truncateBlank(value)\n              val.length > 0 && await sendMessage(val);\n            }\n          }} />\n      </div>\n    </>\n  )\n})","import React from 'react';\nimport './student-list.scss';\nimport {CustomIcon} from '@/components/icon';\nimport { observer } from 'mobx-react';\n\ninterface CustomIconProps {\n  value: boolean\n  type: string\n  icon: string\n  id: string\n  onClick: any\n}\n\nfunction IconWrapper ({\n  value,\n  icon,\n  id,\n  type,\n  onClick\n}: CustomIconProps) {\n  const handleClick = async (evt: any) => {\n    console.log(\"click\", evt)\n    await onClick(evt, id, type);\n  }\n  return (\n    <div className=\"items\">\n        {/* {value ? */}\n          <CustomIcon className={`icon-${icon}-${value ? \"on\" : \"off\"}`}\n            onClick={handleClick}\n            />\n             {/* : null } */}\n    </div>\n  )\n}\n\ninterface UserProps {\n  uid: string\n  account: string\n  video: number\n  audio: number\n  chat: number\n}\n\ninterface StudentListProps {\n  userRole: string,\n  studentStreams: any[],\n  grantUsers: any[]\n  handleClick: (...target: any[]) => Promise<void>,\n}\n\nexport const StudentList: React.FC<StudentListProps> = observer(({\n  userRole,\n  studentStreams,\n  grantUsers,\n  handleClick\n}: StudentListProps) => {\n\n  return (\n    <div className=\"student-list\">\n      {studentStreams.map((item: any, key: number) => (\n        <div key={key} className=\"item\">\n          <div className=\"nickname\">{item.account}</div>\n          <div className=\"attrs-group\">\n            {userRole === 'teacher' ? <IconWrapper type=\"grantBoard\" id={item.userUuid} value={grantUsers.includes(item.userUuid)} icon=\"connect\" onClick={handleClick} /> : null}\n            {/* {roomStore.roomInfo.userRole === 'teacher' ? <IconWrapper type=\"grantBoard\" id={item.userUuid} value={grantUsers.includes(item.userUuid)} icon=\"connect\" onClick={handleClick} /> : null} */}\n            {/* <IconWrapper type=\"chat\" id={item.userUuid} value={Boolean(item.chat)} icon=\"chat\" onClick={handleClick} /> */}\n            <IconWrapper type=\"audio\" id={item.userUuid} value={Boolean(item.audio)} icon=\"audio\" onClick={handleClick} />\n            <IconWrapper type=\"video\" id={item.userUuid} value={Boolean(item.video)} icon=\"video\" onClick={handleClick} />\n          </div>\n        </div>\n      ))}\n    </div>\n  )\n})","import React, { useState } from 'react';\nimport {ChatPanel} from '@/components/chat/panel';\nimport {StudentList} from '@/components/student-list';\nimport { t } from '@/i18n';\nimport {observer} from 'mobx-react'\nimport {useRoomStore, useBoardStore} from '@/hooks';\nimport { EduMediaStream } from '@/stores/app/room';\n\nconst RoomBoardController = observer((props: any) => {\n\n  const roomStore = useRoomStore()\n\n  const [value, setValue] = useState<string>('')\n\n  const sendMessage = async (message: any) => {\n    await roomStore.sendMessage(message)\n    setValue('')\n  }\n\n  const handleChange = (evt: any) => {\n    setValue(evt.target.value)\n  }\n\n  const toggleCollapse = (evt: any) => {\n    roomStore.toggleMenu()\n  }\n\n  const {\n    mutedChat,\n  } = roomStore\n\n  const handleMute = async () => {\n    if (mutedChat) {\n      await roomStore.unmuteChat()\n    } else {\n      await roomStore.muteChat()\n    }\n  }\n\n  const userRole = roomStore.roomInfo.userRole\n\n  const boardStore = useBoardStore()\n  const {grantUsers} = boardStore\n\n  const {studentStreams} = roomStore\n\n  const handleClick = async (evt: any, id: string, type: string) => {\n    const isLocal = (userUuid: string) => roomStore.roomInfo.userUuid === userUuid\n    if (roomStore.roomInfo.userRole === 'teacher' || isLocal(id))  {\n      const target = studentStreams.find((it: EduMediaStream) => it.userUuid === id)\n      switch(type) {\n        case 'grantBoard': {\n          if (boardStore.checkUserPermission(id)) {\n            boardStore.revokeBoardPermission(id)\n          } else {\n            boardStore.grantBoardPermission(id)\n          }\n          break\n        }\n        case 'audio': {\n          if (target) {\n            if (target.audio) {\n              await roomStore.muteAudio(id, isLocal(id))\n            } else {\n              await roomStore.unmuteAudio(id, isLocal(id))\n            }\n          }\n          break\n        }\n        case 'video': {\n          if (target) {\n            if (target.video) {\n              await roomStore.muteVideo(id, isLocal(id))\n            } else {\n              await roomStore.unmuteVideo(id, isLocal(id))\n            }\n          }\n          break\n        }\n      }\n    }\n  }\n\n  return (\n    <>\n    <div className={`${roomStore.menuVisible ? \"icon-collapse-off\" : \"icon-collapse-on\" } fixed`} onClick={toggleCollapse}></div>\n    {roomStore.menuVisible ? \n    <div className={`small-class chat-board`}>\n      <div className=\"menu\">\n        <div\n         className={`item ${roomStore.activeTab === 'chatroom' ? 'active' : ''}`}\n         onClick={() => {\n          roomStore.switchTab('chatroom')\n        }}>\n          {t('room.chat_room')}\n          {roomStore.activeTab !== 'chatroom' && roomStore.unreadMessageCount > 0 ? <span className={`message-count`}>{roomStore.unreadMessageCount}</span> : null}\n        </div>\n        <div\n          className={`item ${roomStore.activeTab === 'student_list' ? 'active' : ''}`}\n          onClick={() => {\n            roomStore.switchTab('student_list')\n          }}\n        >\n          {t('room.student_list')}\n        </div>\n      </div>\n      <div className={`chat-container ${roomStore.activeTab === 'chatroom' ? '' : 'hide'}`}>\n        <ChatPanel\n          canChat={roomStore.roomInfo.userRole === 'teacher'}\n          muteControl={roomStore.muteControl}\n          muteChat={roomStore.mutedChat}\n          handleMute={handleMute}\n          messages={roomStore.roomChatMessages}\n          value={value}\n          sendMessage={sendMessage}\n          handleChange={handleChange} />\n      </div>\n      <div className={`student-container ${roomStore.activeTab !== 'chatroom' ? '' : 'hide'}`}>\n        <StudentList\n          userRole={userRole}\n          studentStreams={studentStreams}\n          grantUsers={grantUsers}\n          handleClick={handleClick}\n        />\n      </div>\n    </div>\n    : null}\n    </>\n  )\n})\n\nexport function RoomBoard () {\n  return (\n    <RoomBoardController />\n  )\n}","import React from 'react';\nimport {VideoMarquee} from '@/components/video-marquee';\nimport {NetlessBoard} from '@/components/netless-board';\nimport { ScreenSharing } from '@/components/screen-sharing';\nimport { RoomBoard } from '@/components/room-board';\nimport './small-class.scss';\n\nexport const SmallClass = () => {\n  return (\n    <div className=\"room-container\">\n      <VideoMarquee />\n      <div className=\"container\">\n        <div className=\"biz-container\">\n          <NetlessBoard />\n          <ScreenSharing />\n        </div>\n        <RoomBoard />\n      </div>\n    </div>\n  )\n}\n\n\n\n","import React from 'react'\nimport './index.scss'\nimport { t } from '@/i18n'\nimport { useBreakoutRoomStore } from '@/hooks'\n\nexport const GroupList = (props: any) => {\n\n  const breakoutRoomStore = useBreakoutRoomStore()\n\n\n  const handleClick = (roomUuid: string) => {\n    breakoutRoomStore.switchTabToRoom(roomUuid)\n  }\n\n  return (\n    <div className=\"group-list\">\n      {\n        props.rooms.map((item: any, key: number) => (\n          <div key={key} className=\"item\">\n            <div className=\"field\">\n              {item.roomName}\n              <span className=\"field\">\n              (<span className=\"count\">{item.memberCount}</span>)\n              </span>\n            </div>\n            <div className=\"field\">\n              <a onClick={(evt: any) => {\n                handleClick(item.roomUuid)\n              }}>{t('room.show')}</a>\n            </div>\n          </div>\n        ))\n      }\n    </div>\n  )\n}","import React, { useState } from 'react'\nimport {observer} from 'mobx-react'\nimport { useBreakoutRoomStore, useBoardStore, useRoomStore } from '@/hooks'\nimport { EduMediaStream } from '@/stores/app/room'\nimport { t } from '@/i18n'\nimport { ChatPanel } from '@/components/chat/panel'\nimport { GroupList } from '@/components/group-list'\n\nexport const TeacherChatBoard = observer(() => {\n  const breakoutRoomStore = useBreakoutRoomStore()\n\n  const [value, setValue] = useState<string>('')\n\n  const sendToCurrentRoom = async (message: any) => {\n    console.log('[breakout] userRole', breakoutRoomStore.roomInfo.userRole)\n    await breakoutRoomStore.sendMessageToCurrentRoom(message)\n    setValue('')\n  }\n\n  const handleChange = (evt: any) => {\n    setValue(evt.target.value)\n  }\n\n  const {\n    mutedChat,\n    courseList\n  } = breakoutRoomStore\n\n  const handleMute = async () => {\n    if (mutedChat) {\n      await breakoutRoomStore.unmuteChat()\n    } else {\n      await breakoutRoomStore.muteChat()\n    }\n  }\n\n  const userRole = breakoutRoomStore.roomInfo.userRole\n\n  const boardStore = useBoardStore()\n  const { grantUsers } = boardStore\n\n  const roomStore = useRoomStore()\n  const { studentStreams } = roomStore\n\n  const handleClick = async (evt: any, id: string, type: string) => {\n    const isLocal = (userUuid: string) => roomStore.roomInfo.userUuid === userUuid\n    if (roomStore.roomInfo.userRole === 'teacher' || isLocal(id)) {\n      const target = studentStreams.find((it: EduMediaStream) => it.userUuid === id)\n      switch (type) {\n        case 'grantBoard': {\n          if (boardStore.checkUserPermission(id)) {\n            boardStore.revokeBoardPermission(id)\n          } else {\n            boardStore.grantBoardPermission(id)\n          }\n          break\n        }\n        case 'audio': {\n          if (target) {\n            if (target.audio) {\n              await roomStore.muteAudio(id, isLocal(id))\n            } else {\n              await roomStore.unmuteAudio(id, isLocal(id))\n            }\n          }\n          break\n        }\n        case 'video': {\n          if (target) {\n            if (target.video) {\n              await roomStore.muteVideo(id, isLocal(id))\n            } else {\n              await roomStore.unmuteVideo(id, isLocal(id))\n            }\n          }\n          break\n        }\n      }\n    }\n  }\n\n  const handleBack = () => {\n    breakoutRoomStore.resetTab()\n  }\n\n  return (\n    <>\n      <div className=\"menu\">\n        {breakoutRoomStore.currentStudentRoomUuid ? \n        <div\n          className=\"item sub-menu\"\n        >\n          <div className=\"sub-menu-back\" onClick={handleBack}></div>\n          <span>{breakoutRoomStore.currentStudentRoomName}</span>\n        </div> :\n        <>\n          <div\n            className={`item ${breakoutRoomStore.activeTab === 'first' ? 'active' : ''}`}\n            onClick={() => {\n              breakoutRoomStore.switchTab('first')\n            }}>\n            {t('room.course_list')}\n            {breakoutRoomStore.activeTab !== 'first' && breakoutRoomStore.unreadMessageCount > 0 ? <span className={`message-count`}>{breakoutRoomStore.unreadMessageCount}</span> : null}\n          </div>\n          <div\n            className={`item ${breakoutRoomStore.activeTab === 'second' ? 'active' : ''}`}\n            onClick={() => {\n              breakoutRoomStore.switchTab('second')\n            }}\n          >\n            {t('room.chat_room')}\n          </div>\n        </>\n        }\n      </div>\n      <div className={`student-container ${breakoutRoomStore.activeTab === 'first' ? '' : 'hide'}`}>\n        <GroupList\n          rooms={courseList}\n        />\n      </div>\n      <div className={`chat-container ${breakoutRoomStore.activeTab !== 'first' ? '' : 'hide'}`}>\n        <ChatPanel\n          canChat={true}\n          showRoomName={!breakoutRoomStore.currentStudentRoomUuid}\n          muteControl={breakoutRoomStore.muteControl}\n          muteChat={breakoutRoomStore.mutedChat}\n          handleMute={handleMute}\n          messages={breakoutRoomStore.roomChatMessages}\n          value={value}\n          sendMessage={sendToCurrentRoom}\n          handleChange={handleChange} />\n      </div>\n    </>\n  )\n})","import React, { useState } from 'react'\nimport {observer} from 'mobx-react'\nimport { useBreakoutRoomStore, useBoardStore, useRoomStore } from '@/hooks'\nimport { EduMediaStream } from '@/stores/app/room'\nimport { t } from '@/i18n'\nimport { ChatPanel } from '@/components/chat/panel'\nimport { StudentList } from '@/components/student-list'\n\nexport const StudentChatBoard = observer(() => {\n  const breakoutRoomStore = useBreakoutRoomStore()\n\n  const [value, setValue] = useState<string>('')\n\n  const sendMessage = async (message: any) => {\n    await breakoutRoomStore.sendMessage(message)\n    setValue('')\n  }\n\n  const handleChange = (evt: any) => {\n    setValue(evt.target.value)\n  }\n\n  const {\n    mutedChat,\n    studentStreams\n  } = breakoutRoomStore\n\n  const handleMute = async () => {\n    // if (mutedChat) {\n    //   await breakoutRoomStore.unmuteChat()\n    // } else {\n    //   await breakoutRoomStore.muteChat()\n    // }\n  }\n\n  const userRole = breakoutRoomStore.roomInfo.userRole\n\n  const boardStore = useBoardStore()\n  const { grantUsers } = boardStore\n\n  const handleClick = async (evt: any, id: string, type: string) => {\n    const isLocal = (userUuid: string) => breakoutRoomStore.roomInfo.userUuid === userUuid\n    if (breakoutRoomStore.roomInfo.userRole === 'teacher' || isLocal(id)) {\n      const target = studentStreams.find((it: EduMediaStream) => it.userUuid === id)\n      switch (type) {\n        case 'audio': {\n          if (target) {\n            if (target.audio) {\n              await breakoutRoomStore.muteStudentAudio(id, isLocal(id))\n            } else {\n              await breakoutRoomStore.unmuteStudentAudio(id, isLocal(id))\n            }\n          }\n          break\n        }\n        case 'video': {\n          if (target) {\n            if (target.video) {\n              await breakoutRoomStore.muteStudentVideo(id, isLocal(id))\n            } else {\n              await breakoutRoomStore.unmuteStudentVideo(id, isLocal(id))\n            }\n          }\n          break\n        }\n        // case 'chat': {\n        //   if (target) {\n        //     if (target.chat) {\n        //       await breakoutRoomStore.muteStudentChat(id, isLocal(id))\n        //     } else {\n        //       await breakoutRoomStore.unmuteStudentChat(id, isLocal(id))\n        //     }\n        //   }\n        // }\n      }\n    }\n  }\n\n  return (\n    <>\n      <div className=\"menu\">\n        <div\n          className={`item ${breakoutRoomStore.activeTab === 'first' ? 'active' : ''}`}\n          onClick={() => {\n            breakoutRoomStore.switchTab('first')\n          }}>\n          {t('room.chat_room')}\n          {breakoutRoomStore.activeTab !== 'first' && breakoutRoomStore.unreadMessageCount > 0 ? <span className={`message-count`}>{breakoutRoomStore.unreadMessageCount}</span> : null}\n        </div>\n        <div\n          className={`item ${breakoutRoomStore.activeTab === 'second' ? 'active' : ''}`}\n          onClick={() => {\n            breakoutRoomStore.switchTab('second')\n          }}\n        >\n          {t('room.student_list')}\n        </div>\n      </div>\n      <div className={`chat-container ${breakoutRoomStore.activeTab === 'first' ? '' : 'hide'}`}>\n        <ChatPanel\n          canChat={false}\n          muteControl={false}\n          muteChat={breakoutRoomStore.mutedChat}\n          handleMute={handleMute}\n          messages={breakoutRoomStore.roomChatMessages}\n          value={value}\n          sendMessage={sendMessage}\n          handleChange={handleChange} />\n      </div>\n      <div className={`student-container ${breakoutRoomStore.activeTab !== 'first' ? '' : 'hide'}`}>\n        <StudentList\n          userRole={userRole}\n          studentStreams={studentStreams}\n          grantUsers={grantUsers}\n          handleClick={handleClick}\n        />\n      </div>\n    </>\n  )\n})","import React, { useState } from 'react'\nimport {observer} from 'mobx-react'\nimport { useBreakoutRoomStore, useBoardStore } from '@/hooks'\nimport { EduMediaStream } from '@/stores/app/room'\nimport { t } from '@/i18n'\nimport { ChatPanel } from '@/components/chat/panel'\nimport { StudentList } from '@/components/student-list'\n\nexport const AssistantChatBoard = observer(() => {\n  const breakoutRoomStore = useBreakoutRoomStore()\n\n  const [value, setValue] = useState<string>('')\n\n  const sendMessage = async (message: any) => {\n    await breakoutRoomStore.sendMessageToCurrentRoom(message)\n    setValue('')\n  }\n\n  const handleChange = (evt: any) => {\n    setValue(evt.target.value)\n  }\n\n  const {\n    mutedChat,\n    studentStreams\n  } = breakoutRoomStore\n\n  const handleMute = async () => {\n    if (mutedChat) {\n      await breakoutRoomStore.unmuteChat()\n    } else {\n      await breakoutRoomStore.muteChat()\n    }\n  }\n\n  const userRole = breakoutRoomStore.roomInfo.userRole\n\n  const boardStore = useBoardStore()\n  const { grantUsers } = boardStore\n\n  const handleClick = async (evt: any, id: string, type: string) => {\n    const isLocal = (userUuid: string) => breakoutRoomStore.roomInfo.userUuid === userUuid\n    if (breakoutRoomStore.roomInfo.userRole === 'assistant' || isLocal(id)) {\n      const target = studentStreams.find((it: EduMediaStream) => it.userUuid === id)\n      switch (type) {\n        case 'grantBoard': {\n          if (boardStore.checkUserPermission(id)) {\n            boardStore.revokeBoardPermission(id)\n          } else {\n            boardStore.grantBoardPermission(id)\n          }\n          break\n        }\n        case 'audio': {\n          if (target) {\n            if (target.audio) {\n              await breakoutRoomStore.muteStudentAudio(id, false)\n            } else {\n              await breakoutRoomStore.unmuteStudentAudio(id, false)\n            }\n          }\n          break\n        }\n        case 'video': {\n          if (target) {\n            if (target.video) {\n              await breakoutRoomStore.muteStudentVideo(id, false)\n            } else {\n              await breakoutRoomStore.unmuteStudentVideo(id, false)\n            }\n          }\n          break\n        }\n      }\n    }\n  }\n\n  return (\n    <>\n      <div className=\"menu\">\n        <div\n          className={`item ${breakoutRoomStore.activeTab === 'first' ? 'active' : ''}`}\n          onClick={() => {\n            breakoutRoomStore.switchTab('first')\n          }}>\n          {t('room.chat_room')}\n          {breakoutRoomStore.activeTab !== 'first' && breakoutRoomStore.unreadMessageCount > 0 ? <span className={`message-count`}>{breakoutRoomStore.unreadMessageCount}</span> : null}\n        </div>\n        <div\n          className={`item ${breakoutRoomStore.activeTab === 'second' ? 'active' : ''}`}\n          onClick={() => {\n            breakoutRoomStore.switchTab('second')\n          }}\n        >\n          {t('room.student_list')}\n        </div>\n      </div>\n      <div className={`chat-container ${breakoutRoomStore.activeTab === 'first' ? '' : 'hide'}`}>\n        <ChatPanel\n          canChat={breakoutRoomStore.roomInfo.userRole === 'assistant'}\n          muteControl={breakoutRoomStore.muteControl}\n          muteChat={breakoutRoomStore.mutedChat}\n          handleMute={handleMute}\n          messages={breakoutRoomStore.roomChatMessages}\n          value={value}\n          sendMessage={sendMessage}\n          handleChange={handleChange} />\n      </div>\n      <div className={`student-container ${breakoutRoomStore.activeTab !== 'first' ? '' : 'hide'}`}>\n        <StudentList\n          userRole={userRole}\n          studentStreams={studentStreams}\n          grantUsers={grantUsers}\n          handleClick={handleClick}\n        />\n      </div>\n    </>\n  )\n})","import React, { useState } from 'react';\nimport { ChatPanel } from '@/components/chat/panel';\nimport { StudentList } from '@/components/student-list';\nimport { t } from '@/i18n';\nimport { observer } from 'mobx-react'\nimport { useBreakoutRoomStore } from '@/hooks';\nimport { TeacherChatBoard } from './teacher-chat-board';\nimport { StudentChatBoard } from './student-chat-board';\nimport { AssistantChatBoard } from './assistant-chat-board';\n\nconst RoomBoardController = observer((props: any) => {\n  const breakoutRoomStore = useBreakoutRoomStore()\n  const userRole = breakoutRoomStore.roomInfo.userRole\n  return (\n    <>\n      <div className={`small-class chat-board`}>\n        {(userRole === 'teacher' && <TeacherChatBoard />)}\n        {(userRole === 'student' && <StudentChatBoard />)}\n        {(userRole === 'assistant' && <AssistantChatBoard />)}\n      </div>\n    </>\n  )\n})\n\nexport function BreakoutRoomBoard() {\n  return (\n    <RoomBoardController />\n  )\n}","import React, { useState, useEffect } from 'react';\nimport { NetlessBoard } from '@/components/netless-board';\nimport { ScreenSharing } from '@/components/screen-sharing';\nimport { ChatBoard } from '@/components/chat/board';\nimport { VideoPlayer } from '@/components/video-player';\nimport { ControlItem } from '@/components/control-item';\nimport { useLocation, useHistory, useParams } from 'react-router-dom';\nimport { NavController } from '@/components/nav';\nimport NativeSharedWindow from '@/components/native-shared-window';\nimport { DeviceDetectController } from '../device-detect';\nimport { AutoplayToast } from '@/components/autoplay-toast';\nimport { useBreakoutRoomStore, useUIStore, useAppStore } from '@/hooks';\nimport { Loading } from '@/components/loading';\nimport { observer } from 'mobx-react';\nimport { t } from '@/i18n';\nimport { BreakoutRoomBoard } from './components/breakout-chat-board';\n\nimport './breakout-class.scss';\n\nconst BackButton = () => {\n\n  const history = useHistory()\n\n  const breakoutRoomStore = useBreakoutRoomStore()\n\n  const handleClick = async () => {\n    await breakoutRoomStore.leaveCourse()\n    history.push('/breakout-class/assistant/courses')\n  }\n\n  return (\n    <div className=\"back-button\">\n      {/* <div className=\"item\">{'<'}</div> */}\n      <div className=\"item\" onClick={handleClick}>\n        返回\n      </div>\n    </div>\n  )\n}\n\nexport const BreakoutClass = observer(() => {\n\n  const breakoutRoomStore = useBreakoutRoomStore()\n\n  const {\n    mutedChat,\n    muteControl,\n    teacherStream: teacher,\n    studentStreams,\n    roomInfo,\n  } = breakoutRoomStore\n\n  const [chat, setChat] = useState<string>('')\n\n  const sendMessage = async () => {\n    await breakoutRoomStore.sendMessage(chat)\n    setChat('')\n  }\n\n  const handleMute = async () => {\n    if (mutedChat) {\n      await breakoutRoomStore.unmuteChat()\n    } else {\n      await breakoutRoomStore.muteChat()\n    }\n  }\n\n  return (\n    <div className=\"super-small-class room-container\">\n      <div className=\"room-container\">\n        <div className=\"live-container\">\n          <div className=\"biz-container\">\n            {breakoutRoomStore.roomInfo.userRole === 'assistant' && <BackButton />}\n            <NetlessBoard />\n            <ScreenSharing />\n          </div>\n          <div className=\"super-container\">\n            <div className=\"small-video\">\n              {studentStreams.map((studentStream: any, key: number) => (\n                <VideoPlayer\n                  key={key}\n                  showClose={false}\n                  role=\"student\"\n                  {...studentStream}\n                  handleClickAudio={async (userUuid: string, isLocal: boolean) => {\n                    if (studentStream.audio) {\n                      await breakoutRoomStore.muteStudentAudio(userUuid, isLocal)\n                    } else {\n                      await breakoutRoomStore.unmuteStudentAudio(userUuid, isLocal)\n                    }\n                  }}\n                  handleClickVideo={async (userUuid: string, isLocal: boolean) => {\n                    if (studentStream.video) {\n                      await breakoutRoomStore.muteStudentVideo(userUuid, isLocal)\n                    } else {\n                      await breakoutRoomStore.unmuteStudentVideo(userUuid, isLocal)\n                    }\n                  }}\n                />\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"live-board\">\n        <div className=\"video-board\">\n          <VideoPlayer\n            role=\"teacher\"\n            showClose={false}\n            {...teacher}\n            handleClickAudio={async (userUuid: string, isLocal: boolean) => {\n              if (teacher.audio) {\n                await breakoutRoomStore.muteAudio(userUuid, isLocal, 'teacher')\n              } else {\n                await breakoutRoomStore.unmuteAudio(userUuid, isLocal, 'teacher')\n              }\n            }}\n            handleClickVideo={async (userUuid: string, isLocal: boolean) => {\n              if (teacher.video) {\n                await breakoutRoomStore.muteVideo(userUuid, isLocal, 'teacher')\n              } else {\n                await breakoutRoomStore.unmuteVideo(userUuid, isLocal, 'teacher')\n              }\n            }}\n          />\n        </div>\n        <BreakoutRoomBoard />\n      </div>\n    </div>\n  )\n})\n\nexport const roomTypes = [\n  { value: 0, path: 'one-to-one' },\n  { value: 1, path: 'small-class' },\n  { value: 2, path: 'big-class' },\n  { value: 3, path: 'breakout-class' },\n];\n\nfunction getIpc() {\n  //@ts-ignore\n  return window.ipc\n}\n\nexport const BreakoutRoomController = observer(({ children }: any) => {\n  useEffect(() => {\n    const ipc = getIpc()\n    if (ipc && ipc.send) {\n      ipc.send('resize-window', { width: 990, height: 706 });\n    }\n    return () => {\n      const ipc = getIpc()\n      if (ipc && ipc.send) {\n        ipc.send('resize-window', { width: 700, height: 500 });\n      }\n    }\n  }, [getIpc])\n\n  const uiStore = useUIStore()\n\n  const location = useLocation()\n\n  const breakoutRoomStore = useBreakoutRoomStore()\n\n  const appStore = useAppStore()\n\n  const history = useHistory()\n\n  const {course_name} = useParams()\n\n  console.log('params', course_name)\n\n  useEffect(() => {\n    if (!appStore.userRole) {\n      history.push('/')\n      return\n    }\n\n    window.history.pushState(null, document.title, window.location.href);\n    const handlePopState = (evt: any) => {\n      console.log('popstate', evt)\n      window.history.pushState(null, document.title, null);\n      if (breakoutRoomStore.roomInfo.userRole === 'assistant') {\n        if (breakoutRoomStore.joinedGroup && !uiStore.hasDialog('exitRoom')) {\n          uiStore.showDialog({\n            type: 'exitRoom',\n            message: t('icon.exit-room'),\n          })\n        }\n      } else {\n        if (breakoutRoomStore.joined && !uiStore.hasDialog('exitRoom')) {\n          uiStore.showDialog({\n            type: 'exitRoom',\n            message: t('icon.exit-room'),\n          })\n        }\n      }\n    }\n    // window.addEventListener('popstate', handlePopState, false)\n\n    if (!course_name) {\n      breakoutRoomStore.join().then(() => {\n        uiStore.addToast(t('toast.successfully_joined_the_room'))\n      }).catch((err) => {\n        console.warn(err.msg)\n        uiStore.addToast(t('toast.failed_to_join_the_room') + `${JSON.stringify(err.msg)}`)\n      })\n    }\n    if (course_name) {\n      breakoutRoomStore.assistantJoinRoom(course_name).then(() => {\n        uiStore.addToast(t('toast.successfully_joined_the_room'))\n      }).catch((err) => {\n        console.warn(err.msg)\n        uiStore.addToast(t('toast.failed_to_join_the_room') + `${JSON.stringify(err.msg)}`)\n      })\n    }\n\n    return () => {\n      // window.removeEventListener('popstate', handlePopState, false)\n    }\n  }, [])\n\n  return (\n    <div className={`classroom breakout-class`}>\n      {uiStore.loading ? <Loading /> : null}\n      <AutoplayToast />\n      <DeviceDetectController />\n      <NativeSharedWindow />\n      <NavController />\n      {children}\n    </div>\n  );\n})\n\nexport const BreakoutClassroom = () => {\n  return (\n    <BreakoutRoomController>\n      <BreakoutClass />\n    </BreakoutRoomController>\n  )\n}","import React from 'react';\nimport {ChatPanel, ChatPanelProps} from './panel';\nimport { ChatMessage } from '@/utils/types';\nimport { observer } from 'mobx-react'\n\ninterface ChatBoardProps extends ChatPanelProps {\n  name?: string\n  messages: ChatMessage[]\n  value: string\n  canChat: boolean\n  mute?: boolean\n  messageCount?: number\n}\n\nexport const ChatBoard: React.FC<ChatBoardProps> = (props: ChatBoardProps) => {\n  return (\n    <div className=\"chat-board\">\n      {props.name ? <div className=\"chat-roomname\">{props.name}{props.messageCount ? `(${props.messageCount})` : null }</div> : null}\n        <ChatPanel\n          canChat={props.canChat}\n          muteChat={props.muteChat}\n          muteControl={props.muteControl}\n          messages={props.messages}\n          value={props.value}\n          handleMute={props.handleMute}\n          sendMessage={props.sendMessage}\n          handleChange={props.handleChange} />\n    </div>\n  )\n}","import React, {useState} from 'react';\nimport {VideoPlayer} from '@/components/video-player';\nimport {ChatBoard} from '@/components/chat/board';\nimport { NetlessBoard } from '@/components/netless-board';\nimport { ScreenSharing } from '@/components/screen-sharing';\nimport { useRoomStore } from '@/hooks';\nimport { observer } from 'mobx-react';\n\nexport const OneToOne = observer(() => {\n\n  const roomStore = useRoomStore()\n\n  const {\n    teacherStream,\n    studentStreams,\n    roomInfo,\n    mutedChat,\n    muteControl,\n  } = roomStore\n\n  const handleMute = async () => {\n    if (mutedChat) {\n      await roomStore.unmuteChat()\n    } else {\n      await roomStore.muteChat()\n    }\n  }\n\n  const [chat, setChat] = useState<string>('')\n\n  const sendMessage = async () => {\n    await roomStore.sendMessage(chat)\n    setChat('')\n  }\n\n  return (\n    <div className=\"room-container\">\n      <div className=\"biz-container\">\n        <NetlessBoard />\n        <ScreenSharing />\n      </div>\n      <div className=\"live-board\">\n        <div className=\"video-board\">\n            <VideoPlayer\n              showClose={false}\n              role=\"teacher\"\n              {...teacherStream}\n            />\n            {studentStreams[0]?\n              <VideoPlayer\n                showClose={false}\n                role=\"student\"\n                {...studentStreams[0]}\n              /> : \n              <VideoPlayer\n                userUuid={''}\n                streamUuid={''}\n                showClose={false}\n                account={'student'}\n                renderer={{}}\n                local={false}\n                role=\"student\"\n                video={false}\n                audio={false}\n                showControls={false}\n              />\n            }\n        </div>\n        <ChatBoard\n          canChat={roomStore.roomInfo.userRole === 'teacher'}\n          messages={roomStore.roomChatMessages}\n          value={chat}\n          sendMessage={sendMessage}\n          handleChange={(evt: any) => {\n            setChat(evt.target.value)\n          }}\n          messageCount={roomStore.unreadMessageCount}\n          muteControl={muteControl}\n          muteChat={mutedChat}\n          handleMute={handleMute}\n        />\n      </div>\n    </div>\n  )\n})","import React, {useRef, useState} from 'react';\nimport {VideoPlayer} from '@/components/video-player';\nimport { ControlItem } from '@/components/control-item';\nimport './big-class.scss';\nimport {ChatBoard} from '@/components/chat/board';\nimport { NetlessBoard } from '@/components/netless-board';\nimport { ScreenSharing } from '@/components/screen-sharing';\nimport { observer } from 'mobx-react';\nimport { useRoomStore } from '@/hooks';\n\nexport const BigClass = observer(() => {\n\n  const roomStore = useRoomStore()\n\n  const {\n    mutedChat,\n    muteControl,\n    teacherStream: teacher,\n    studentStreams,\n    roomInfo,\n  } = roomStore\n\n  const [chat, setChat] = useState<string>('')\n\n  const sendMessage = async () => {\n    await roomStore.sendMessage(chat)\n    setChat('')\n  }\n\n  const handleMute = async () => {\n    if (mutedChat) {\n      await roomStore.unmuteChat()\n    } else {\n      await roomStore.muteChat()\n    }\n  }\n\n\n  const handleNotice = () => {\n    // roomStore.showDialog()\n  }\n\n  const handleHandClick = async (type: string) => {\n    if (type === 'hands_up') {\n      await roomStore.callApply()\n    }\n  \n    if (type === 'hands_up_end') {\n      await roomStore.callEnded()\n    }\n  }\n  \n  return (\n    <div className=\"room-container\">\n      <div className=\"live-container\">\n        <div className=\"biz-container\">\n          <NetlessBoard />\n          <ScreenSharing />\n          <div className={`interactive ${roomStore.roomInfo.userRole}`}>\n            {roomStore.roomInfo.userRole === 'teacher' && roomStore.notice ?\n              <ControlItem name={roomStore.notice.reason}\n                onClick={handleNotice}\n                active={roomStore.notice.reason ? true : false} />\n            : null}\n            {roomStore.roomInfo.userRole !== 'teacher'?\n              <ControlItem\n                name={roomStore.cameraEduStream ? 'hands_up_end' : 'hands_up'}\n                onClick={handleHandClick}\n                active={false}\n                text={''}\n              />\n            : null}\n          </div>\n        </div>\n        <div className=\"video-container\">\n          {studentStreams.map((studentStream: any, key: number) => (\n            <VideoPlayer\n              key={key}\n              showClose={roomInfo.userRole === 'teacher' || roomInfo.userUuid === studentStream.userUuid}\n              role=\"student\"\n              {...studentStream}\n            />\n          ))}\n        </div>\n      </div>\n      <div className=\"live-board\">\n        <div className=\"video-board\">\n          <VideoPlayer\n            role=\"teacher\"\n            showClose={false}\n            {...teacher}\n          />\n        </div>\n        <ChatBoard\n          name={roomStore.roomInfo.roomName}\n          canChat={roomStore.roomInfo.userRole === 'teacher'}\n          messages={roomStore.roomChatMessages}\n          mute={roomStore.mutedChat}\n          value={chat}\n          messageCount={roomStore.userList.length}\n          sendMessage={sendMessage}\n          muteControl={muteControl}\n          muteChat={mutedChat}\n          handleMute={handleMute}\n          handleChange={(evt: any) => {\n            setChat(evt.target.value)\n          }} \n        />\n      </div>\n    </div>\n  )\n})","import React from 'react';\nimport {CustomButton} from '../custom-button';\nimport {Dialog, DialogContent, DialogContentText} from '@material-ui/core';\n\nimport './dialog.scss';\nimport { t } from '@/i18n';\nimport { observer } from 'mobx-react';\nimport { useRoomStore, useUIStore, useBreakoutRoomStore } from '@/hooks';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nexport interface DialogMessage {\n  type: string\n  userUuid?: any\n  message: string\n}\n\nexport type DialogType = {\n  id: number\n  dialog: DialogMessage\n}\n\ninterface RoomProps {\n  onConfirm: (type: string) => void\n  onClose: (type: string) => void\n  dialogId: number\n  dialogMessage: DialogMessage\n}\n\nfunction RoomDialog(\n{\n  onConfirm,\n  onClose,\n  dialogId,\n  dialogMessage\n}: RoomProps) {\n\n  const uiStore = useUIStore()\n\n  const handleClose = async () => {\n    await onClose(dialogMessage.type)\n    uiStore.removeDialog(dialogId)\n  };\n\n  const handleConfirm = async () => {\n    await onConfirm(dialogMessage.type)\n    uiStore.removeDialog(dialogId)\n  }\n\n  return (\n    <div>\n      <Dialog\n        disableBackdropClick\n        open={true}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogContent\n          className=\"modal-container\"\n        >\n          <DialogContentText className=\"dialog-title\">\n            {dialogMessage.message}\n          </DialogContentText>\n          <div className=\"button-group\">\n            <CustomButton name={t(\"toast.confirm\")} className=\"confirm\" onClick={handleConfirm} color=\"primary\" />\n            <CustomButton name={t(\"toast.cancel\")} className=\"cancel\" onClick={handleClose} color=\"primary\" />\n          </div>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n}\n\nconst DialogContainer = observer(() => {\n  const roomStore = useRoomStore()\n  const breakoutRoomStore = useBreakoutRoomStore()\n  const uiStore = useUIStore()\n  const history = useHistory()\n\n  const location = useLocation()\n\n  const onClose = async (type: string) => {\n    if (type === 'apply') {\n      await roomStore.teacherRejectApply()\n    }\n  }\n\n  const onConfirm = async (type: string) => {\n    if (type === 'exitRoom') {\n      if (location.pathname.match(/breakout/)) {\n        await breakoutRoomStore.leave()\n      } else {\n        await roomStore.leave()\n      }\n      history.push('/')\n    }\n    else if (type === 'apply') {\n      // p2p message accept coVideo\n      // 老师同意学生连麦申请\n      await roomStore.teacherAcceptApply()\n    }\n    else if (type === 'uploadLog') {\n      // globalStore.removeDialog()\n    }\n\n    return;\n  }\n\n  return <>\n    {\n    uiStore.dialogs.map(dialog => (\n      <RoomDialog\n        key={dialog.id as number}\n        dialogId={dialog.id as number}\n        dialogMessage={dialog.dialog as DialogMessage}\n        onClose={onClose}\n        onConfirm={onConfirm}\n      />\n    ))\n    }\n    </>\n})\n\n\nexport default DialogContainer;","import React, { useEffect, useRef } from 'react'\nimport './replay.scss'\nimport Slider from '@material-ui/core/Slider';\nimport { useReplayStore } from '@/hooks'\nimport { useLocation, useParams } from 'react-router-dom'\nimport { useMounted } from '../../components/toast'\nimport { PlayerPhase } from 'white-web-sdk'\nimport { Progress } from '@/components/progress/progress'\nimport { t } from '@/i18n'\nimport { observer } from 'mobx-react'\nimport \"video.js/dist/video-js.css\";\nimport moment from 'moment';\n\nconst PlayerCover = observer(() => {\n  const replayStore = useReplayStore()\n\n  return (\n    replayStore.player && replayStore.firstFrame ?\n      (replayStore.phase !== PlayerPhase.Playing ?\n        <div className=\"player-cover\">\n          {replayStore.phase === PlayerPhase.Buffering ? <Progress title={t(\"replay.loading\")} />: null}\n          {replayStore.phase === PlayerPhase.Pause ||\n          replayStore.phase === PlayerPhase.Ended ||\n          replayStore.phase === PlayerPhase.WaitingFirstFrame ? \n          <div className=\"play-btn\" onClick={() => replayStore.handlePlayerClick()}></div> : null}\n        </div> : null\n      ):\n      <Progress title={t(\"replay.loading\")} />\n  )\n})\n\nconst useInterval = (fn: CallableFunction, delay: number) => {\n  const mounted = useMounted()\n\n  const interval = useRef<any>(null)\n\n  useEffect(() => {\n    interval.current = setInterval(() => {\n      fn && mounted && fn()\n    }, delay)\n\n    return () => {\n      if (interval.current) {\n        clearInterval(interval.current)\n      }\n    }\n  },[interval])\n}\n\nexport const ReplayController: React.FC<any> = observer(() => {\n\n  const location = useLocation()\n\n  const {roomUuid} = useParams()\n\n  const searchParams = new URLSearchParams(location.search);\n\n  const replayStore = useReplayStore()\n\n  const replayRef = useRef<HTMLDivElement | null>(null)\n\n  useInterval(() => {\n    replayStore.getCourseRecordBy(roomUuid as string)\n  }, 2500)\n\n  useEffect(() => {\n    if (replayRef.current && replayStore.recordStatus === 2 && replayStore.mediaUrl) {\n      replayStore.replay(replayRef.current)\n    }\n  }, [replayStore.recordStatus, replayRef.current, replayStore.mediaUrl])\n\n  const handlePlayerClick = () => {\n    replayStore.handlePlayerClick()\n  }\n\n  const handleSliderMouseDown = () => {\n    replayStore.pauseCurrentTime()\n  }\n\n  const handleSliderMouseUp = () => {\n    replayStore.seekToCurrentTime()\n  }\n\n  const handleSliderChange = (event: any, newValue: any) => {\n    replayStore.updateProgress(newValue)\n  }\n  \n  const handleTouchStart = () => {\n    replayStore.pauseCurrentTime()\n  }\n\n  const handleTouchEnd = () => {\n    replayStore.seekToCurrentTime()\n  }\n\n  return (\n    <div className=\"replay\">\n      <div className=\"player-container\">\n        <PlayerCover />\n        <div className=\"player\">\n          <div className=\"agora-log\"></div>\n          <div ref={replayRef} id=\"whiteboard\" className=\"whiteboard\"></div>\n          <div className=\"video-menu\">\n            <div className=\"control-btn\">\n              <div className={`btn ${replayStore.player && replayStore.phase === PlayerPhase.Playing ? 'paused' : 'play'}`} onClick={handlePlayerClick}></div>\n            </div>\n            <div className=\"progress\">\n              <Slider\n                className='custom-video-progress'\n                value={replayStore.currentTime}\n                onMouseDown={handleSliderMouseDown}\n                onMouseUp={handleSliderMouseUp}\n                onChange={handleSliderChange}\n                onTouchStart={handleTouchStart}\n                onTouchEnd={handleTouchEnd}\n                min={0}\n                max={replayStore.duration}\n                aria-labelledby=\"continuous-slider\"\n              />\n              <div className=\"time\">\n                <div className=\"current_duration\">{moment(replayStore.currentTime).format(\"mm:ss\")}</div>\n                  /\n                <div className=\"video_duration\">{moment(replayStore.totalTime).format(\"mm:ss\")}</div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"video-container\">\n        <div className=\"video-player\">\n          <video id=\"white-sdk-video-js\" className=\"video-js video-layout\" style={{width: \"100%\", height: \"100%\", objectFit: \"cover\"}}></video>\n        </div>\n        <div className=\"chat-holder chat-board chat-messages-container\"></div>\n      </div>\n    </div>\n  )\n})","import React from 'react';\n// import '../classroom/room.scss';\nimport { isElectron } from '@/utils/platform';\n// import '@/components/nav.scss';\nimport { Tooltip } from '@material-ui/core';\nimport { t } from '@/i18n';\nimport {CustomIcon} from '@/components/icon';\nimport { useUIStore } from '@/hooks';\nimport {observer} from 'mobx-react';\nimport { ReplayController } from './replay';\n\nconst ReplayWrapper = observer((props: any) => {\n\n  const uiStore = useUIStore()\n\n  return (\n    uiStore.isElectron ? \n    <div className=\"replay-page-wrapper\">\n      <div className={`nav-container menu-nav ${isElectron ? 'draggable' : ''}`}>\n        <div className=\"menu-nav-right\">\n          {/* <Tooltip title={t(\"icon.upload-log\")} placement=\"bottom\">\n            <div>\n              <CustomIcon className={loading ? \"icon-loading\" : \"icon-upload\"} onClick={(evt: any) => {\n                handleClick('uploadLog')\n              }}></CustomIcon>\n            </div>\n          </Tooltip> */}\n          {uiStore.isElectron && \n          <div className=\"menu-group\">\n            <CustomIcon className=\"icon-minimum\" icon onClick={() => {\n              uiStore.windowMinimum()\n            }} />\n            <CustomIcon className=\"icon-maximum\" icon onClick={() => {\n              uiStore.windowMaximum()\n            }} />\n            <CustomIcon className=\"icon-close\" icon onClick={() => {\n              uiStore.windowClose()\n            }} />\n          </div>}\n        </div>\n      </div>\n      {props.children}\n    </div> :\n    props.children\n  )\n})\n\nexport const ReplayPage = () => {\n  return (\n    <ReplayWrapper>\n      <ReplayController />\n    </ReplayWrapper>\n  )\n}","import React, { useEffect } from 'react'\nimport { t } from '@/i18n';\nimport './index.scss';\nimport * as moment from 'moment';\nimport { observer } from 'mobx-react';\nimport { NavController } from '@/components/nav';\nimport { Link, Route, useLocation, useParams, useHistory } from 'react-router-dom';\nimport { Loading } from '@/components/loading';\nimport { AutoplayToast } from '@/components/autoplay-toast';\nimport { makeStyles, Theme, createStyles, TableContainer, Table, TableHead, TableRow, TableCell, TableBody, Button } from '@material-ui/core';\nimport { useUIStore, useBreakoutRoomStore } from '@/hooks';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    table: {\n      minWidth: 350,\n    },\n    root: {\n      '& > *': {\n        margin: theme.spacing(1),\n      },\n    },\n  }),\n);\n\n\nexport const AssistantCoursesPage = observer((props: any) => {\n  const uiStore = useUIStore()\n\n  return (\n    <div className={`classroom breakout-class`}>\n      {uiStore.loading ? <Loading /> : null}\n      <AutoplayToast />\n      <NavController />\n      <CoursesPage />\n    </div>\n  )\n})\n\nconst CoursesPage = observer(() => {\n\n  const classes = useStyles()\n\n  const uiStore = useUIStore()\n\n  const breakoutRoomStore = useBreakoutRoomStore()\n\n  const history = useHistory()\n\n  const refresh = () => {\n    window.location.reload()\n  }\n\n  const exit = () => {\n    uiStore.showDialog({\n      type: 'exitRoom',\n      message: t('icon.exit-room')\n    })\n  }\n\n  const {course_name} = useParams<any>()\n  useEffect(() => {\n\n    window.history.pushState(null, document.title, window.location.href);\n    const handlePopState = (evt: any) => {\n      console.log('[pop] course_name', course_name)\n      window.history.pushState(null, document.title, null);\n      if (breakoutRoomStore.roomInfo.userRole === 'assistant') {\n        if (breakoutRoomStore.joined && !uiStore.hasDialog('exitRoom')) {\n          uiStore.showDialog({\n            type: 'exitRoom',\n            message: t('icon.exit-room'),\n          })\n        }\n      }\n    }\n        \n    if (course_name) {\n      breakoutRoomStore.assistantJoinRoom(course_name)\n    } else {\n      breakoutRoomStore.loginAsAssistant()\n    }\n  }, [])\n\n  return (\n    <div className='room-container'>\n    <div className=\"assistant-box\">\n        {\n          breakoutRoomStore.courseList.length !== 0 ?\n          <div className=\"assistant-table\">\n          <div className=\"table-title\">{t('assistant.classList')}</div>\n          <TableContainer>\n            <Table className={classes.table} aria-label=\"simple table\">\n              <TableHead>\n                <TableRow className=\"table-head\">\n                  <TableCell>{t('assistant.className')}</TableCell>\n                  <TableCell align=\"center\">{t('assistant.creatTime')}</TableCell>\n                  <TableCell align=\"right\">{t('assistant.operation')}</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {breakoutRoomStore.courseList.map((course: any) => (\n                  <TableRow key={course.roomUuid}>\n                    <TableCell component=\"th\" scope=\"row\">{course.roomName}</TableCell>\n                    <TableCell align=\"center\">{moment.utc(course.createTime).local().format('HH:mm:ss')}</TableCell>\n                    <TableCell align=\"right\">\n                      {<a style={{\"cursor\": \"pointer\"}} onClick={(evt: any) => {\n                        breakoutRoomStore.roomInfo.groupName = course.roomName\n                        history.push(`/breakout-class/assistant/courses/${course.roomUuid}`)\n                      }}>\n                        {t('assistant.enterClassRoom')} \n                      </a>}\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </div>  :\n        <div className=\"data-null\">\n          <div className=\"null-box\"></div>\n          <div className=\"null-text\">{t('assistant.data_null_text')}</div>\n          <div className=\"null-btn\">\n            <div className=\"refresh-btn\">\n              <Button variant=\"outlined\" onClick={refresh}>{t('assistant.refresh')}</Button>\n            </div>\n            <div className=\"exit-btn\">\n              <Button variant=\"outlined\" onClick={exit}>{t('assistant.exit')}</Button>\n            </div>\n          </div>\n        </div>\n        }\n    </div>\n  </div>\n  )\n})","import React from 'react';\nimport { Route, HashRouter } from 'react-router-dom';\nimport ThemeContainer from '../containers/theme-container';\nimport Home from './home';\nimport {DeviceDetectPage} from './device-detect/index';\nimport { RoomPage } from './classroom';\nimport Loading from '../components/loading';\nimport {Toast} from '../components/toast';\nimport '../icons.scss';\nimport {SmallClass} from './classroom/small-class';\nimport {BreakoutClassroom} from './breakout-class/breakout-class';\nimport {OneToOne} from './classroom/one-to-one';\nimport {BigClass} from './classroom/big-class';\nimport RoomDialog from '../components/dialog';\nimport { ReplayPage } from './replay';\nimport {Provider} from 'mobx-react';\nimport { AppStore } from '@/stores/app';\nimport {AssistantCoursesPage} from './breakout-class/assistant-courses-page';\n// import {Hello} from '@/components/giphy';\n\nconst defaultStore = new AppStore()\n//@ts-ignore\nwindow.store = defaultStore\n\nexport default function () {\n  return (\n    <Provider store={defaultStore}>\n      <ThemeContainer>\n        <HashRouter>\n          <Loading />\n          {/* <Hello /> */}\n          <Toast />\n          <RoomDialog />\n          <Route path=\"/setting\">\n            <DeviceDetectPage />\n          </Route>\n          <Route exact path=\"/classroom/one-to-one\">\n            <RoomPage >\n              <OneToOne />\n            </RoomPage>\n          </Route>\n          <Route exact path=\"/classroom/small-class\">\n            <RoomPage>\n              <SmallClass />\n            </RoomPage>\n          </Route>\n          <Route exact path=\"/classroom/big-class\">\n            <RoomPage>\n              <BigClass />\n            </RoomPage>\n          </Route>\n          <Route exact path=\"/breakout-class/assistant/courses/:course_name\">\n            <BreakoutClassroom />\n          </Route>\n          <Route exact path=\"/breakout-class/assistant/courses\">\n            <AssistantCoursesPage />\n          </Route>\n          <Route exact path=\"/classroom/breakout-class\">\n            <BreakoutClassroom />\n          </Route>\n          <Route path=\"/replay/record/:roomUuid\">\n            <ReplayPage />\n          </Route>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n        </HashRouter>\n      </ThemeContainer>\n    </Provider>\n  )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'promise-polyfill/src/polyfill';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss'; \nimport App from './pages/index';\nimport * as serviceWorker from './serviceWorker';\nimport TagManager from 'react-gtm-module';\nimport Eruda from 'eruda';\nimport UAParser from 'ua-parser-js'; \nimport {isElectron} from './utils/platform';\n\nconst parser = new UAParser();\n\nconst userAgentInfo = parser.getResult();\n\nconst isMobile = () => {\n  return userAgentInfo.device.type === 'mobile';\n};\n\n// use gtm\nif (process.env.REACT_APP_AGORA_GTM_ID) {\n  !isElectron && TagManager.initialize({\n    gtmId: process.env.REACT_APP_AGORA_GTM_ID\n  })\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\nif (isMobile()) {\n  const el = document.createElement('div');\n  document.body.appendChild(el);\n  \n  Eruda.init({\n    container: el,\n    tool: ['console', 'elements']\n  });\n}"],"sourceRoot":""}